<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博客</title>
  
  <subtitle>世界好大，修行好难</subtitle>
  <link href="https://onlyonemomo.github.io/atom.xml" rel="self"/>
  
  <link href="https://onlyonemomo.github.io/"/>
  <updated>2022-08-31T12:38:00.669Z</updated>
  <id>https://onlyonemomo.github.io/</id>
  
  <author>
    <name>onlyone Mo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>转载李笑来《把时间当作朋友》后记</title>
    <link href="https://onlyonemomo.github.io/2022/08/31/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/002-%E8%BD%AC%E8%BD%BD%E6%9D%8E%E7%AC%91%E6%9D%A5%E3%80%8A%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B%E3%80%8B%E5%90%8E%E8%AE%B0/"/>
    <id>https://onlyonemomo.github.io/2022/08/31/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/002-%E8%BD%AC%E8%BD%BD%E6%9D%8E%E7%AC%91%E6%9D%A5%E3%80%8A%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B%E3%80%8B%E5%90%8E%E8%AE%B0/</id>
    <published>2022-08-31T12:29:39.000Z</published>
    <updated>2022-08-31T12:38:00.669Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：在每周转载这个栏目里面，我打算收集一些自己曾经看过的文章，在博客这个平台分享给大家。每周转载这个栏目开设只是偶然性的，我觉得三千世界栏目更新过慢（要追求质量，还得有时间！），所以就萌发了每周转载这个栏目。</p><p>我一个退役运动员。</p><p>08 年开始看笑来老师的博客，两年时间里，我从几乎是零基础到 获得雅思 6.5 分，留学申请成功──今年 9 月去爱丁堡大学读研究生。身边的人都特别惊讶，问我这个没上过初中高中的人是怎么学习英语的。几天前，我请笑来老师吃饭，当面感谢他的时候，他也很惊讶，也很高兴。告诉我一定要把我学英语的过程，和我的一些感受写下来，供大家参考。所以就有了这篇文章。</p><p>我十岁进入省队，开始我的职业运动员生涯。别的孩子每天背着书包去上学，我和队友们每天 8 小时，一周 6 天，拿着拍子在球场上练球。6 年之后，因为我 自身的条件还有当时队里的环境，像许多运动员一样，我并没有取得太好的成绩。我选择退役，进入大学学习。我清楚地记得，当我做出这个选择的时候，当时我的 教练泼我冷水：“你以为学习就比训练容易吗，我保证你读一个星期就读不下去了。”</p><p>我当时心里也没底，毕竟这么多年没念书，基础差的不是一星半点，直接上大学能跟得上吗。但是比起继续训练，我更愿意换个环境重新开始，所以我报考了一所体育院校。</p><p>相比起运动队，大学简直是天堂，没有早操，没有教练的控制，当然田径场还是有的，不过再也没有人逼着跑长跑了。众所周知，体育类院校真正在学习的人 少之又少，像清华北大那些因为学习压力大而跳楼的人在我们学校是不存在的。人家学校每年都有 “自杀率”，我们学校每年是 “杀他率” 和 “被杀率”。我一边后 悔自己怎么没上个综合性大学，一边放任自己在这个环境里心安理得地享受着混吃等死的安逸日子。直到后来找工作写简历时，我才发现，本科的时光真的过得比我 的成绩单还要更空虚一些。当时真恨不得把三围也写进去，照片贴张 5 寸的，好让简历能凑够一页。</p><p>大四的时候，我跟很多人一样，把出国留学当成最后的救命稻草。报了新东方托福班，笑来老师当时是教写作。说实话，当时上课完全听不懂。现在想想，当 时想去考托福完全是异想天开。我上大学开始学英语，大学里的英语课只有四学期，大学的英语老师也假定你是有一定语法基础的，对我这种零基础的来说无异于天 书，所以当时考试基本靠小抄，成绩一直在及格线附近徘徊。这种程度，在半年之内想托福考到 90，不管上什么补习班，都是不可能的。结果可想而知，59 分的 托福成绩让最后一点希望也破灭了。我当时觉得自己这辈子肯定完了。没有什么文化知识，基础知识，数学、物理、化学、地理、历史统统没学过；唯一的技能只能 从事教练或者老师的工作，就业面非常窄。我怎么和那些从小上学的孩子在社会上竞争呢。哪个公司会要一个四肢发达、头脑简单的退役运动员呢。我开始埋怨父 母，当初为什么要送我去练球；我埋怨学校，为什么不给我提供一个好的学习环境；我埋怨自己，为什么当初不好好珍惜时间，恶补文化课知识。</p><p>那时候在笑来博客里看到一段话：</p><blockquote><p>缺乏耐心几乎是所有人的本性，也是绝大多数人最终未能矫正的习惯。很多人在生活的方方 面面都因为缺乏耐心而处处吃亏却又从不自知；处处吃亏的结果是越来越急于求成，越来越缺乏耐心——于是一生都只能在这个死循环中左冲右撞而后最终混个死因不详。</p></blockquote><p>这简直是我当时状态的最佳写照。我当时觉得我年龄还不大，还有时间再读个研究生，读完研究生以后就业时选择的面就宽多了，所以我想到了去英国读研。 但是留学考试是凭实力的，而我的外语这么差。所以我觉得我要想留学的话，一定要把外语提高上去，而且这次要吸取教训，不能再急功近利了。因此，我又跟父母 商量，要去留学。父母还是心存疑虑的，毕竟有前车之鉴，所以要求我必须先考过雅思再开始申请学校。我跟他们保证说，这次我一定会考过的，而且我要考 7 分， 上一所好的学校。我想以前这么训练这么累都坚持过来了，只要我有耐心坚持下去，一定能做到的。</p><p>我从剑桥中级英语语法开始，坚持做三遍，一来培养耐心，二来恶补语法。配合记录时间的习惯，每天记录下来我学习英语的时间。08 年七月开始，每天 2 个单元，用时大约 90 分钟。第二遍大约 60 分钟做完两个单元，第三遍的时候速度更快了，平均 30 分钟就能做完，另外用 30 分钟把例句读熟。我要求自己，不管再累在忙，每天一定要完成 2 个单元。 中间当然也有间断的时候，我就跟自己说，这是我最后的机会了，如果我放弃了，我又得重头开始了，我不能再重蹈覆辙了。为了给自己洗脑，我把很多笑来文章中 的句子，抄在本子上，每天早上读几遍。08 年 9 月我在新东方学习新概念二册。09 年 3 月初的时候总算把三遍剑桥中级语法，接着报了新概念三。09 年 5 月的 时候新三学完，我报了 6 月的雅思，想先裸考一次，看看自己现在到底什么水平。这中间的一个月时间，一边复习新三，一边用笑来的如何提高阅读速度那几篇文章里的方法读老托福的文章；用老托福 PART-C 的文章做跟读训练。刚开始的时候觉得这些方法实在是太慢了，太麻烦了，直到考前一共才看了 5 篇阅读，跟读练了 2 篇。6 月的雅思考试成绩并不理想，阅读 5.5，听力 6，口语 6.5,写作 5，总分 5.5。我当时的目标是考 7 分，5.5 离目标差得不 是一星半点。</p><p>我当时仔细回忆我当运动员的时候，我当时是怎么训练的，每项技术是怎么打磨的。我发现其实这些都和学英语有共通之处。每个技术动作的要领并不复杂， 教练教会基本动作之后剩下的就是大量的重复。在无数次的重复中，纠正错误动作，模仿优秀运动员的动作并结合自身的特点，最终形成自己的动作。同样，应用到 学习英语中。我已经掌握了基本的语法、基础的词汇和学习方法，那么剩下就是大量应用、练习了。最重要的是，清楚什么是自己能控制的，什么是不能控制的。比赛的时候，天气、场地、观众、对手还有结果这些都是属于不能控制 的事情，唯一能控制的就是自己。我是不是每一个动作都尽力做好了，我是不是按既定的战术执行了，我在累的时候有没有坚持住，这些是我能够控制的。同理，考 试的题目不是我能控制的，结果更不是我能控制的了，那么我还老想着我要考多少分，时刻关注机经模板除了浪费时间和让自己更焦虑之外没有任何用处。</p><p>想明白之后，就该干嘛干嘛了。</p><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><ul><li>如何迅速提高阅读能力里的方法精读剑 4-7 的每一篇文章。</li><li>新托福 iBT 词汇分类突破 认真背了 3 遍。</li></ul><h3 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h3><ul><li>托福听说训练 练习了 20 多篇。</li><li>抄写基础词表：GSL 和 AWL，恶补拼 写。</li><li>剑 4-7 里的听力部分做了两遍。</li></ul><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><ul><li>TOEFL iBT 高分作文仿写、背诵经典的句子。</li><li>大作文写了不到二十篇，小作文 7 篇。</li><li>慎晓嶷 ‘七天’ 里的小作文每种图表背了个一篇。</li><li>‘如何准备留学考试系列’ 里的有力模式、立场选择等文章打印出来、认真读了 N 遍。</li></ul><h3 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h3><ul><li>第一部分，准备了九十多道真题，一个英语很好的朋友帮我写的。第二部分，准备了十个左右话题。第三部分，背了经典的句型若干。</li><li>对照<a href="http://www.uiowa.edu/~acadtech/phonetics/english/frameset.html">这个网站</a>对着镜子模仿口型和发音。每天半小时，1 个月时间。 其他</li><li>想明白系列，反复看了若干遍。</li></ul><p>考前没有报任何培训班。10 月的雅思成绩是，听力和阅读都考了 7，口语还是 6.5，写作 5.5，总分 6.5。虽然没考到理想的 7 分，但这个成绩也已 经够申请的标准了。我当时很激动，我证明了自己并不比那些从小一直学习的同学差。我的经历告诉我，首先一个人只要有坚定的信念，只要努力不怕苦，没有办不 成的事。有人总是强调别人的是个例，来宽恕自己的不努力。这个过程有多苦吗，有多难吗，我没觉得。可能这也得感谢我从小受的训练吧，忍耐枯燥的训练和服从 教练的指示。</p><p>其次，自信来自于能力，任何能力都是靠自己努力学习来的，是一个非常明显的从无到有的过程。我从英语零基础到考过雅思，自学能力一点点打磨出 来。这个凭能力产生的从无到有的过程，才是提高我自信的动机。在这个世界上除了你的本领和能力是真正属于你的，没有什么是能够与你共生的。这些才是产生自 信的真正动力。</p><p>最后，希望我的经历能够多多少少给那些真正想学好英语的同学一些帮助。</p><p>谢谢笑来老师，如果没有你这么无私的分享这些学习方法和人生感悟，我也不可能在这么短的时间内完成我的目标。</p><p>原文链接：<a href="https://github.com/xiaolai/everyone-can-use-english">https://github.com/xiaolai/everyone-can-use-english</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在每周转载这个栏目里面，我打算收集一些自己曾经看过的文章，在博客这个平台分享给大家。每周转载这个栏目开设只是偶然性的，我觉得三千世界栏目更新过慢（要追求质量，还得有时间！），所以就萌发了每周转载这个栏目。&lt;/p&gt;</summary>
    
    
    
    <category term="每周转载" scheme="https://onlyonemomo.github.io/categories/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="每周转载" scheme="https://onlyonemomo.github.io/tags/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>模块化之ThreadLocal</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/004-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BThreadLocal/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/004-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BThreadLocal/</id>
    <published>2022-08-30T14:08:56.000Z</published>
    <updated>2022-08-30T15:44:35.285Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。</p><p>ThreadLocal 并不是一个Thread，而是Thread的局部变量。ThreadLocal为每个线程提供单独一份存储空间，具有线程隔离的效果，只有在线程内才能获取到对应的值，线程外则不能访问。客户端发送的每次请求，后端的Tomcat服务器都会分配一个单独的线程来处理请求！</p><h6 id="ThreadLocal常用方法："><a href="#ThreadLocal常用方法：" class="headerlink" title="ThreadLocal常用方法："></a>ThreadLocal常用方法：</h6><table><thead><tr><th>方法</th><th>释义</th></tr></thead><tbody><tr><td>public void set(T value)</td><td>设置当前线程的线程局部变量的值</td></tr><tr><td>public T get()</td><td>返回当前线程所对应的线程局部变量的值</td></tr><tr><td>public void remove()</td><td>移除当前线程的线程局部变量</td></tr></tbody></table><h6 id="提供的BaseContext工具类来操作ThreadLocal"><a href="#提供的BaseContext工具类来操作ThreadLocal" class="headerlink" title="提供的BaseContext工具类来操作ThreadLocal"></a>提供的BaseContext工具类来操作ThreadLocal</h6><p><img src="https://img-blog.csdnimg.cn/e1aaa6121e63468d999a7988b645cf02.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>举例：在员工管理页面，需要记录创建者的ID和修改者ID，这个时候就需要<strong>动态设置创建人和修改人</strong></p><p>图2：JWT拦截器设置当前登录员工的ThreadLocal  ID</p><p><img src="https://img-blog.csdnimg.cn/098469343cd2486385561c985892af81.png#pic_center" alt="在这里插入图片描述"></p><p>图3：在方法上获取当前登录员工的ThreadLocal  ID</p><p><img src="https://img-blog.csdnimg.cn/e08d7bcd3a7b44bca309047129d5864f.png#pic_center" alt="在这里插入图片描述"></p><p>线程本地变量是在JWt拦截器里面的，记得要注册拦截器让它生效。</p><h6 id="BaseContext工具类"><a href="#BaseContext工具类" class="headerlink" title="BaseContext工具类"></a>BaseContext工具类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册拦截器举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfiguration</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenAdminInterceptor jwtTokenAdminInterceptor;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenUserInterceptor jwtTokenUserInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始注册自定义拦截器：&#123;&#125;&quot;</span>, jwtTokenAdminInterceptor);</span><br><span class="line">        registry.addInterceptor(jwtTokenAdminInterceptor)</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin/employee/login&quot;</span>);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;开始注册自定义拦截器：&#123;&#125;&quot;</span>, jwtTokenUserInterceptor);</span><br><span class="line">        registry.addInterceptor(jwtTokenUserInterceptor)</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/user/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/user/user/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。&lt;/p&gt;</summary>
    
    
    
    <category term="项目模块化" scheme="https://onlyonemomo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="模块化" scheme="https://onlyonemomo.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>模块化之阿里云上传文件</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/007-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/007-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</id>
    <published>2022-08-30T13:53:56.000Z</published>
    <updated>2022-08-30T13:54:12.999Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。</p><h5 id="阿里云工具类"><a href="#阿里云工具类" class="headerlink" title="阿里云工具类"></a>阿里云工具类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件上传</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(<span class="type">byte</span>[] bytes, String objectName)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建PutObject请求。</span></span><br><span class="line">            ossClient.putObject(bucketName, objectName, <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bytes));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OSSException oe) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Caught an OSSException, which means your request made it to OSS, &quot;</span></span><br><span class="line">                    + <span class="string">&quot;but was rejected with an error response for some reason.&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Message:&quot;</span> + oe.getErrorMessage());</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Code:&quot;</span> + oe.getErrorCode());</span><br><span class="line">            System.out.println(<span class="string">&quot;Request ID:&quot;</span> + oe.getRequestId());</span><br><span class="line">            System.out.println(<span class="string">&quot;Host ID:&quot;</span> + oe.getHostId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException ce) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Caught an ClientException, which means the client encountered &quot;</span></span><br><span class="line">                    + <span class="string">&quot;a serious internal problem while trying to communicate with OSS, &quot;</span></span><br><span class="line">                    + <span class="string">&quot;such as not being able to access the network.&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Message:&quot;</span> + ce.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (ossClient != <span class="literal">null</span>) &#123;</span><br><span class="line">                ossClient.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文件访问路径规则 https://BucketName.Endpoint/ObjectName</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;https://&quot;</span>);</span><br><span class="line">        stringBuilder</span><br><span class="line">                .append(bucketName)</span><br><span class="line">                .append(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">                .append(endpoint)</span><br><span class="line">                .append(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">                .append(objectName);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;文件上传到:&#123;&#125;&quot;</span>, stringBuilder.toString());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="配置类"><a href="#配置类" class="headerlink" title="配置类"></a>配置类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过Spring管理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> aliOSSProperties</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line">    <span class="keyword">public</span> AliOSSUtil <span class="title function_">aliOSSUtil</span><span class="params">(AliOSSProperties aliOSSProperties)</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始创建阿里云OSS工具类...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AliOSSUtil</span>(</span><br><span class="line">                aliOSSProperties.getEndpoint(),</span><br><span class="line">                aliOSSProperties.getAccessKeyId(),</span><br><span class="line">                aliOSSProperties.getAccessKeySecret(),</span><br><span class="line">                aliOSSProperties.getBucketName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="通用方法控制器"><a href="#通用方法控制器" class="headerlink" title="通用方法控制器"></a>通用方法控制器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin/common&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;通用接口&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AliOSSUtil aliOSSUtil;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;文件上传&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;String&gt; <span class="title function_">upload</span><span class="params">(MultipartFile file)</span>&#123;</span><br><span class="line">        log.info(file.getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//原始文件名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">        <span class="type">String</span> <span class="variable">extension</span> <span class="operator">=</span> originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将文件上传到阿里云</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> UUID.randomUUID().toString() + extension;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> aliOSSUtil.upload(file.getBytes(), fileName);</span><br><span class="line">            <span class="keyword">return</span> R.success(filePath);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;文件上传失败:&#123;&#125;&quot;</span>,e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.error(MessageConstant.UPLOAD_FAILED);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。&lt;/p&gt;</summary>
    
    
    
    <category term="项目模块化" scheme="https://onlyonemomo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="模块化" scheme="https://onlyonemomo.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>BaseContext工具类</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E5%B7%A5%E5%85%B7%E7%B1%BB/BaseContext%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E5%B7%A5%E5%85%B7%E7%B1%BB/BaseContext%E5%B7%A5%E5%85%B7%E7%B1%BB/</id>
    <published>2022-08-30T13:49:51.000Z</published>
    <updated>2022-08-30T13:49:28.664Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：在《娱乐至死》里面两个著名的预言：奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中。在互联网的世界里，我们恰恰走向了赫胥黎式的预言，有时候百度两小时，有效资讯五分钟。在工具类这个栏目，我想收集一些常用的Utils，以免书到用时方恨少的尴尬！</p><p>提供的BaseContext工具类来操作ThreadLocal</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在《娱乐至死》里面两个著名的预言：奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中。在互联网的世界里，我们恰恰走向了赫胥黎式的预言，有时候百度两小时，有效资讯五分钟。在工具类这个栏目，我想收集一些常用的Utils，以免书到用时方恨少的尴尬！&lt;/p&gt;</summary>
    
    
    
    <category term="工具类" scheme="https://onlyonemomo.github.io/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
    
    <category term="Util" scheme="https://onlyonemomo.github.io/tags/Util/"/>
    
  </entry>
  
  <entry>
    <title>《挪威的森林》读后感</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E4%B8%89%E5%8D%83%E4%B8%96%E7%95%8C/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E4%B8%89%E5%8D%83%E4%B8%96%E7%95%8C/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</id>
    <published>2022-08-30T13:33:39.000Z</published>
    <updated>2022-09-01T02:35:26.388Z</updated>
    
    <content type="html"><![CDATA[<p>曾记得高中时期阅读过一次《挪威的森林》，也就顺便翻翻，我也没觉得这本书有什么魅力。时隔五年之后，再重新看这本书，又有了不一样的感觉。</p><p>刚看完这本书的时候总有些说不清道不明的感觉，直到我偶然直接看电影解说才猛然想起这种情绪的来源。《挪威的森林》就如同中国武侠电影里的江湖那般，大漠孤烟长河落日，侠骨柔情忠肝义胆。又像美国西部片那样，黄沙漫漫，牛仔悍匪，惩恶扬善。挪威的森林就是一个时代的符号。</p><p>村上春树用独特的手法送别了一个名为’青春’的时代。这是一本自我成长的书籍，当你读完这本书合上去的时候，仿佛背面显示出’青春奇妙物语全剧终’的画面感。看懂了这本书，青春也就结束了！</p><p>这本书具有划时代意义，能与中国武侠的江湖，和美国西部片的世界相提并论。青春的话题永不过时，这才是这么多人追来看原因!</p><p>摘录：</p><p>名场面1：渡边的甜言蜜语</p><blockquote><p>“最最喜欢你，绿子。”</p><p>“什么程度？”</p><p>“像喜欢春天的熊一样。”</p><p>“春天的熊？”绿子再次扬起脸，“什么春天的熊？”</p><p>“春天的原野里，你一个人正走着，对面走来一只可爱的小熊，浑身的毛活像天鹅绒，眼睛圆鼓鼓的。</p><p>它对你说道：’你好，小姐，和我一块儿打滚玩好吗？’接着，你就和小熊抱在一起，顺着长满三叶草的山坡‘咕噜咕噜’滚下去，玩了整整一天。你说棒不棒？”</p><p>“太棒了。”</p><p>“我就这么喜欢你。”</p></blockquote><p>名场面2：绿子不可理喻的爱</p><blockquote><p>绿子说：<br>“我所追求的，只是容忍我任性，百分之百的任性。比方说，我现在对你说想吃酥饼，你就什么都不顾得跑去买，气喘吁吁得跑回来递给我，说‘给，绿子，这就是酥饼。’可我却说：‘我又懒得吃这玩意儿了！’说着‘呼’地一声从窗口扔出。这就是我所追求的。”</p><p>“这和爱似乎不大相合啊！” 他不无愕然地说。<br>“相干！你不知道罢了，”绿子说，“对女孩子来说，这东西有时非常非常珍贵。”<br>“就是把酥饼扔出窗口？”<br>“是啊。我希望对方这样说：‘明白了，绿子。怪我不好，我本该估计到你又不想吃酥饼才是。我简直像驴粪蛋儿一样愚蠢透顶，为了表示歉意，让我再去给你买点别什么。什么好？巧克力饼干，还是奶酪饼？”<br>“然后怎样呢？”<br>“那我就好好爱他，报答他。”</p></blockquote><p>巴黎评论对村上春树采访：</p><blockquote><p>《巴黎评论》：我总是更同情有幽默感的女孩。我想读者更容易接受充满幽默的恋情，想要让他们被严肃的爱情描写所打动则是一件难事。在《挪威的森林》里我从头到尾一直喜欢绿子这个角色。</p><p>村上：我想大多数读者应该和你的感受相同，他们也都会选择绿子，当然小说的主人公最后也选择了绿子。然而，他有一部分自我一直处于另外一个世界，他无法抛弃那个世界，那是他的一部分、一个重要的部分。世上所有人的头脑中都有病态的部分，这块地方是人的组成部分之一。我们有理智的一半，也有疯狂的一半，我们在这两部分之间进行协调——我坚信这点。当我写作的时候我可以特别清晰地感觉到我意识中那个疯狂的部分——“疯狂”并不是最恰当的字眼，应该说“不平常的”、“不真实的”。当然，我最终必须回到真实的世界中来，重新恢复健全的意志。可是如果我没有疯狂、病态的那部分，我就不会是今天的我。换句话说，我的小说的主人公是有两个女人作为后盾的，对他来说，这两个缺一不可。《挪威的森林》是个典型的例子。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;曾记得高中时期阅读过一次《挪威的森林》，也就顺便翻翻，我也没觉得这本书有什么魅力。时隔五年之后，再重新看这本书，又有了不一样的感觉。&lt;/p&gt;</summary>
    
    
    
    <category term="三千世界" scheme="https://onlyonemomo.github.io/categories/%E4%B8%89%E5%8D%83%E4%B8%96%E7%95%8C/"/>
    
    
    <category term="读书心得" scheme="https://onlyonemomo.github.io/tags/%E8%AF%BB%E4%B9%A6%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之总结</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/009-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E6%80%BB%E7%BB%93/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/009-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-29T12:44:51.000Z</published>
    <updated>2022-08-29T12:43:40.741Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h5 id="1、能够使用SQL语句添加主键、外键、唯一、非空约束"><a href="#1、能够使用SQL语句添加主键、外键、唯一、非空约束" class="headerlink" title="1、能够使用SQL语句添加主键、外键、唯一、非空约束"></a>1、能够使用SQL语句添加主键、外键、唯一、非空约束</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主键约束: <span class="keyword">PRIMARY</span> KEY</span><br><span class="line">唯一约束: <span class="keyword">UNIQUE</span></span><br><span class="line">非空约束: <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">默认值约束: <span class="keyword">DEFAULT</span> 值</span><br><span class="line">外键约束: <span class="keyword">CONSTRAINT</span> 外键约束名 <span class="keyword">FOREIGN</span> KEY (外键字段名) <span class="keyword">REFERENCES</span> 主表(主键)</span><br></pre></td></tr></table></figure><h5 id="2、能够说出多表之间的三种关系"><a href="#2、能够说出多表之间的三种关系" class="headerlink" title="2、能够说出多表之间的三种关系"></a>2、能够说出多表之间的三种关系</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一对多</span><br><span class="line">多对多</span><br><span class="line">一对一</span><br></pre></td></tr></table></figure><h5 id="3、能够使用内连接进行多表查询"><a href="#3、能够使用内连接进行多表查询" class="headerlink" title="3、能够使用内连接进行多表查询"></a>3、能够使用内连接进行多表查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显示内连接:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">INNER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表连接条件;</span><br></pre></td></tr></table></figure><h5 id="4、能够使用左外连接和右外连接进行多表查询"><a href="#4、能够使用左外连接和右外连接进行多表查询" class="headerlink" title="4、能够使用左外连接和右外连接进行多表查询"></a>4、能够使用左外连接和右外连接进行多表查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">左外连接: 左表不满足的也显示,<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表连接条件;</span><br><span class="line">右外连接: 右表不满足的也显示,<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表连接条件;</span><br></pre></td></tr></table></figure><h5 id="5、能够使用子查询"><a href="#5、能够使用子查询" class="headerlink" title="5、能够使用子查询"></a>5、能够使用子查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一条查询语句的结果作为另一个条查询语句的一部分</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 条件<span class="operator">=</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(字段名) <span class="keyword">FROM</span> 表名);</span><br></pre></td></tr></table></figure><h5 id="6、能够理解多表查询的规律"><a href="#6、能够理解多表查询的规律" class="headerlink" title="6、能够理解多表查询的规律"></a>6、能够理解多表查询的规律</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.根据需求明确查询哪些表</span><br><span class="line">2.明确表连接条件,去掉笛卡尔积</span><br><span class="line">3.后续的查询</span><br></pre></td></tr></table></figure><h5 id="7、能够理解事务的概念"><a href="#7、能够理解事务的概念" class="headerlink" title="7、能够理解事务的概念"></a>7、能够理解事务的概念</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据库事务是一种机制, 事务中包含多条<span class="keyword">SQL</span>语句, 事务中的多条<span class="keyword">SQL</span>语句要么全部成功,要么全部失败<span class="operator">!</span></span><br></pre></td></tr></table></figure><p>8、能够在MySQL中使用事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开启事务: <span class="keyword">BEGIN</span>; 或 <span class="keyword">START</span> TRANSACTION;</span><br><span class="line">提交事务: <span class="keyword">COMMIT</span>;</span><br><span class="line">回滚事务: <span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之事务</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/008-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E4%BA%8B%E5%8A%A1/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/008-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E4%BA%8B%E5%8A%A1/</id>
    <published>2022-08-29T12:43:51.000Z</published>
    <updated>2022-08-29T12:42:42.913Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h5 id="1、需求"><a href="#1、需求" class="headerlink" title="1、需求"></a>1、需求<img src="https://img-blog.csdnimg.cn/538fbb006e304506a4077e0fe3e05d40.png#pic_center" alt="在这里插入图片描述"></h5><h5 id="2、环境搭建"><a href="#2、环境搭建" class="headerlink" title="2、环境搭建"></a>2、环境搭建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建账户表,包含 id, name, balance</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> account (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">balance <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> account <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="keyword">NULL</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="number">1000</span>),</span><br><span class="line">(<span class="keyword">NULL</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h5 id="默认自动开启事务"><a href="#默认自动开启事务" class="headerlink" title="默认自动开启事务"></a>默认自动开启事务</h5><p>在DOS 命令下输入 <code>select @@autocommit;</code>  查看是否开启自动提交事务<br>一般是默认提交<br><img src="https://img-blog.csdnimg.cn/09211cebbf1e494d9a518367056027b5.png#pic_center" alt="在这里插入图片描述"></p><p><strong>手动提交SQL语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="number">500</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="number">500</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/3fdd3dfbe2ab49648039ce1164bae8b6.png#pic_center" alt="在这里插入图片描述"></p><h5 id="设置不开启事务"><a href="#设置不开启事务" class="headerlink" title="设置不开启事务"></a><strong>设置不开启事务</strong></h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1bf78b91435f45b8bbbcf9f42af5a9c2.png#pic_center" alt="在这里插入图片描述"></p><p>再来执行上面的修改语句,发现毫无反应<br><img src="https://img-blog.csdnimg.cn/561a529805f74f57a1cee0abbc31ffd9.png#pic_center" alt="在这里插入图片描述"></p><p>在继续执行<code>commit;</code>命令之后，才修改数据成功<br><img src="https://img-blog.csdnimg.cn/94d77b78c3a1439395afcf54ddf8ad0b.png#pic_center" alt="在这里插入图片描述"></p><p><strong>温馨提示：</strong>回滚用<code>rollback;</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之多表查询</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/007-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/007-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-08-29T12:41:51.000Z</published>
    <updated>2022-08-29T12:41:25.823Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>创建部门表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_dept (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">  NAME <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_dept (NAME) <span class="keyword">VALUES</span> (<span class="string">&#x27;开发部&#x27;</span>),(<span class="string">&#x27;市场部&#x27;</span>),(<span class="string">&#x27;财务部&#x27;</span>),(<span class="string">&#x27;销售部&#x27;</span>);</span><br></pre></td></tr></table></figure><p>创建员工表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">  NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">  gender <span class="type">CHAR</span>(<span class="number">1</span>),   <span class="comment">-- 性别</span></span><br><span class="line">  salary <span class="keyword">DOUBLE</span>,   <span class="comment">-- 工资</span></span><br><span class="line">  join_date <span class="type">DATE</span>,  <span class="comment">-- 入职日期</span></span><br><span class="line">  dept_id <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;孙悟空&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">7200</span>,<span class="string">&#x27;2013-02-24&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;猪八戒&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">3600</span>,<span class="string">&#x27;2010-12-02&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;唐僧&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;2008-08-08&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;白骨精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">5000</span>,<span class="string">&#x27;2015-10-07&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;蜘蛛精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">4500</span>,<span class="string">&#x27;2011-03-14&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>, <span class="string">&#x27;白龙马&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;2020-02-02&#x27;</span>, <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure><h3 id="1、隐式内连接"><a href="#1、隐式内连接" class="headerlink" title="1、隐式内连接"></a>1、隐式内连接</h3><p>– 一次查询多张表<br>– 左表的每条数据和右表的每条数据组合，这种效果称为笛卡尔乘积。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp, tb_dept;</span><br></pre></td></tr></table></figure><p>– 去掉笛卡尔积<br>– 去掉笛卡尔积的条件称为: 表连接条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp, tb_dept <span class="keyword">WHERE</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><p>– 扩展:给表取别名,表取了别名后,只能使用别名啦!<br>– 在加上查询员工名字为孙悟空</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">AS</span> e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">AS</span> d <span class="keyword">ON</span> e.`dept_id`<span class="operator">=</span>d.`id` <span class="keyword">WHERE</span> e.name<span class="operator">=</span><span class="string">&#x27;孙悟空&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="2、显式内连接"><a href="#2、显式内连接" class="headerlink" title="2、显式内连接"></a>2、显式内连接</h3><p>– 显式内连接 INNER JOIN…ON</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><h3 id="3、左外连接查询"><a href="#3、左外连接查询" class="headerlink" title="3、左外连接查询"></a>3、左外连接查询</h3><p>– 左外连接查询 (满足要求的显示,保证左表不满足要求的也显示)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`</span><br></pre></td></tr></table></figure><h3 id="4、右外连接"><a href="#4、右外连接" class="headerlink" title="4、右外连接"></a>4、右外连接</h3><p>– 右外连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><p>– 一般在工作中我们都使用左外, 右外可以转成左外, 我们中国人的书写顺序,从左到右</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_dept <span class="keyword">left</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_emp <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><h3 id="5、子查询结果"><a href="#5、子查询结果" class="headerlink" title="5、子查询结果"></a>5、子查询结果</h3><h5 id="子查询的结果是单行单列"><a href="#子查询的结果是单行单列" class="headerlink" title="子查询的结果是单行单列"></a>子查询的结果是单行单列</h5><p><strong>查询工资最高的员工是谁？</strong><br>– (1).查询最高工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary) <span class="keyword">FROM</span> tb_emp;</span><br></pre></td></tr></table></figure><p>– (2).通过最高工资查询员工姓名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> salary<span class="operator">=</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary) <span class="keyword">FROM</span> tb_emp);</span><br></pre></td></tr></table></figure><p><strong>温馨提示：</strong>子查询心得:建议先写好一条SQL,再复制到另一个SQL语句中</p><h5 id="子查询的结果是多行单列"><a href="#子查询的结果是多行单列" class="headerlink" title="子查询的结果是多行单列"></a>子查询的结果是多行单列</h5><p><strong>查询工资大于5000的员工, 来自于哪些部门的名字</strong><br>– (1).查询工资大于5000的员工的部门id</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> salary<span class="operator">&gt;</span><span class="number">5000</span>;</span><br></pre></td></tr></table></figure><p>– (2).根据部门id查询部门名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_dept <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> salary<span class="operator">&gt;</span><span class="number">5000</span>);</span><br></pre></td></tr></table></figure><h5 id="子查询的结果是多行多列"><a href="#子查询的结果是多行多列" class="headerlink" title="子查询的结果是多行多列"></a>子查询的结果是多行多列</h5><p>– 查询出2011年以后入职的员工信息, 包括部门名称<br>– (1).查询出2011年以后入职的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> join_date<span class="operator">&gt;</span><span class="string">&#x27;2011-01-01&#x27;</span>;</span><br></pre></td></tr></table></figure><p>– (2).连接部门表,查询部门信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> join_date<span class="operator">&gt;</span><span class="string">&#x27;2011-01-01&#x27;</span>) <span class="keyword">AS</span> e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> e.dept_id<span class="operator">=</span>tb_dept.id;</span><br></pre></td></tr></table></figure><h3 id="6、多表查询"><a href="#6、多表查询" class="headerlink" title="6、多表查询"></a>6、多表查询</h3><h5 id="环境搭建-1"><a href="#环境搭建-1" class="headerlink" title="环境搭建"></a>环境搭建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 部门id</span></span><br><span class="line">  dname <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 部门名称</span></span><br><span class="line">  loc <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 部门位置</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(id,dname,loc) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">10</span>,<span class="string">&#x27;教研部&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),</span><br><span class="line">(<span class="number">20</span>,<span class="string">&#x27;学工部&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>),</span><br><span class="line">(<span class="number">30</span>,<span class="string">&#x27;销售部&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>),</span><br><span class="line">(<span class="number">40</span>,<span class="string">&#x27;财务部&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职务表, 职务名称, 职务描述</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  jname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">  description <span class="type">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个职务</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job (id, jname, description) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;董事长&#x27;</span>, <span class="string">&#x27;管理整个公司, 接单&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;经理&#x27;</span>, <span class="string">&#x27;管理部门员工&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;销售员&#x27;</span>, <span class="string">&#x27;向客人推销产品&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;文员&#x27;</span>, <span class="string">&#x27;使用办公软件&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 员工id</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名</span></span><br><span class="line">  job_id <span class="type">INT</span>, <span class="comment">-- 职务id</span></span><br><span class="line">  mgr <span class="type">INT</span> , <span class="comment">-- 上级领导</span></span><br><span class="line">  joindate <span class="type">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">  salary <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 工资</span></span><br><span class="line">  bonus <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 奖金</span></span><br><span class="line">  dept_id <span class="type">INT</span>, <span class="comment">-- 所在部门编号</span></span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="keyword">FOREIGN</span> KEY (job_id) <span class="keyword">REFERENCES</span> job (id),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="keyword">FOREIGN</span> KEY (dept_id) <span class="keyword">REFERENCES</span> dept (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2000-12-17&#x27;</span>,<span class="string">&#x27;8000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1002</span>,<span class="string">&#x27;卢俊义&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-20&#x27;</span>,<span class="string">&#x27;16000.00&#x27;</span>,<span class="string">&#x27;3000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1003</span>,<span class="string">&#x27;林冲&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-22&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;5000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1004</span>,<span class="string">&#x27;唐僧&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-04-02&#x27;</span>,<span class="string">&#x27;29750.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1005</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-28&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;14000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1006</span>,<span class="string">&#x27;宋江&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-05-01&#x27;</span>,<span class="string">&#x27;28500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1007</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-09-01&#x27;</span>,<span class="string">&#x27;24500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1008</span>,<span class="string">&#x27;猪八戒&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-04-19&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1009</span>,<span class="string">&#x27;罗贯中&#x27;</span>,<span class="number">1</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;2001-11-17&#x27;</span>,<span class="string">&#x27;50000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1010</span>,<span class="string">&#x27;吴用&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-08&#x27;</span>,<span class="string">&#x27;15000.00&#x27;</span>,<span class="string">&#x27;0.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1011</span>,<span class="string">&#x27;沙僧&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-05-23&#x27;</span>,<span class="string">&#x27;11000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1012</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;9500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1013</span>,<span class="string">&#x27;小白龙&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1014</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="number">4</span>,<span class="number">1007</span>,<span class="string">&#x27;2002-01-23&#x27;</span>,<span class="string">&#x27;13000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 工资等级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salarygrade (</span><br><span class="line">  grade <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  losalary <span class="type">INT</span>,</span><br><span class="line">  hisalary <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加5个工资等级</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salarygrade(grade,losalary,hisalary) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="number">7000</span>,<span class="number">12000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">12010</span>,<span class="number">14000</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">14010</span>,<span class="number">20000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">20010</span>,<span class="number">30000</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">30010</span>,<span class="number">99990</span>);</span><br></pre></td></tr></table></figure><h5 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h5><p><strong>查询所有员工信息。显示员工编号, 员工姓名, 工资, 职务名称, 职务描述</strong><br>– 1.根据需求明确查询哪些表: emp, job</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">emp.id <span class="keyword">AS</span> 员工编号, </span><br><span class="line">emp.`ename` <span class="keyword">AS</span> 员工姓名,</span><br><span class="line">emp.`salary` <span class="keyword">AS</span> 工资,</span><br><span class="line">job.`jname` <span class="keyword">AS</span> 职务名称,</span><br><span class="line">job.`description` <span class="keyword">AS</span> 职务描述</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`;</span><br></pre></td></tr></table></figure><h5 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h5><p><strong>查询所有员工信息。显示员工编号, 员工姓名, 工资, 职务名称, 职务描述, 部门名称, 部门位置</strong><br>– 1.根据需求明确查询哪些表: emp, job, dept</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id` <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">emp.`id` 员工编号,</span><br><span class="line">emp.`ename` 员工姓名,</span><br><span class="line">emp.`salary` 工资,</span><br><span class="line">job.`jname` 职务名称,</span><br><span class="line">job.`description` 职务描述,</span><br><span class="line">dept.`dname` 部门名称,</span><br><span class="line">dept.`loc` 部门位置</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id` </span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`;</span><br></pre></td></tr></table></figure><h5 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h5><p><strong>查询经理的信息。显示员工姓名, 工资, 职务名称, 职务描述, 部门名称, 部门位置, 工资等级</strong><br>– 1.根据需求明确查询哪些表: emp, job, dept, salarygrade</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade <span class="keyword">ON</span> emp.`salary` <span class="keyword">BETWEEN</span> salarygrade.`losalary` <span class="keyword">AND</span> salarygrade.`hisalary`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">emp.`ename` 员工姓名,</span><br><span class="line">emp.`salary` 工资,</span><br><span class="line">job.`jname` 职务名称,</span><br><span class="line">job.`description` 职务描述,</span><br><span class="line">dept.`dname` 部门名称,</span><br><span class="line">dept.`loc` 部门位置,</span><br><span class="line">salarygrade.`grade` 工资等级</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade <span class="keyword">ON</span> emp.`salary` <span class="keyword">BETWEEN</span> salarygrade.`losalary` <span class="keyword">AND</span> salarygrade.`hisalary`</span><br><span class="line"><span class="keyword">WHERE</span> job.`jname`<span class="operator">=</span><span class="string">&#x27;经理&#x27;</span>;</span><br></pre></td></tr></table></figure><h5 id="练习4"><a href="#练习4" class="headerlink" title="练习4"></a>练习4</h5><p><strong>查询出部门编号、部门名称、部门位置、部门人数</strong><br>– 1.根据需求明确查询哪些表: emp, dept</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">dept.`dname`, </span><br><span class="line"><span class="built_in">COUNT</span>(emp.`id`) </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">dept <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id` </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> dept.`dname`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(emp.`id`);</span><br></pre></td></tr></table></figure><h5 id="练习5"><a href="#练习5" class="headerlink" title="练习5"></a>练习5</h5><p><strong>列出所有员工的姓名及其直接上级领导的姓名, 没有上级领导的员工也需要显示,显示自己的名字和领导的名字</strong><br>– 1.根据需求明确查询哪些表: emp pt, emp ld</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp pt <span class="keyword">INNER</span> <span class="keyword">JOIN</span> emp ld;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp pt <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp ld <span class="keyword">ON</span> pt.`mgr`<span class="operator">=</span>ld.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">pt.`ename` 普通员工的名字,</span><br><span class="line">ld.`ename` 领导的名字</span><br><span class="line"><span class="keyword">FROM</span> emp pt <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp ld <span class="keyword">ON</span> pt.`mgr`<span class="operator">=</span>ld.`id`;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之表多对多</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/006-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E8%A1%A8%E5%A4%9A%E5%AF%B9%E5%A4%9A/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/006-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E8%A1%A8%E5%A4%9A%E5%AF%B9%E5%A4%9A/</id>
    <published>2022-08-29T12:39:51.000Z</published>
    <updated>2022-08-29T12:39:18.781Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><p>图1：<br><img src="https://img-blog.csdnimg.cn/0b6381036adf454fb8140d5a01dfc06d.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">多对多：</span><br><span class="line"><span class="bullet">    *</span> 如：订单 和 商品</span><br><span class="line"><span class="bullet">    *</span> 一个商品对应多个订单，一个订单包含多个商品</span><br><span class="line"></span><br><span class="line">实现方式：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 订单表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">payment <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">payment_type TINYINT,</span><br><span class="line">status TINYINT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 商品表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_goods (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">title <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">price <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 订单商品中间表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order_goods (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">order_id <span class="type">int</span>(<span class="number">5</span>),</span><br><span class="line">goods_id <span class="type">int</span>(<span class="number">5</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_order <span class="keyword">FOREIGN</span> KEY(order_id) <span class="keyword">REFERENCES</span> tb_order(id),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_goods <span class="keyword">FOREIGN</span> KEY(goods_id) <span class="keyword">REFERENCES</span> tb_goods(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之约束</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/005-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E7%BA%A6%E6%9D%9F/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/005-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E7%BA%A6%E6%9D%9F/</id>
    <published>2022-08-29T12:35:51.000Z</published>
    <updated>2022-08-29T12:35:37.410Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h4 id="一、主键约束"><a href="#一、主键约束" class="headerlink" title="一、主键约束"></a>一、主键约束</h4><h5 id="1、创建表时添加主键"><a href="#1、创建表时添加主键" class="headerlink" title="1、创建表时添加主键"></a>1、创建表时添加主键</h5><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建表学生表st1, 包含字段<span class="built_in">(id</span>,<span class="built_in"> name</span>, age)<span class="built_in">将id</span>做为主键</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> st1 (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">age <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;刘德华&#x27;</span>, <span class="number">60</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;郭富城&#x27;</span>, <span class="number">58</span>);</span><br></pre></td></tr></table></figure><h5 id="2、演示主键约束-唯一非空"><a href="#2、演示主键约束-唯一非空" class="headerlink" title="2、演示主键约束: 唯一非空"></a>2、演示主键约束: 唯一非空</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;黎明&#x27;</span>, <span class="number">60</span>); <span class="comment">-- Duplicate entry &#x27;2&#x27; for key &#x27;PRIMARY&#x27;: 主键重复啦</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>, <span class="string">&#x27;黎明&#x27;</span>, <span class="number">60</span>); <span class="comment">-- Column &#x27;id&#x27; cannot be null: 主键不能为NULL</span></span><br></pre></td></tr></table></figure><h5 id="3、主键删除和添加（了解）"><a href="#3、主键删除和添加（了解）" class="headerlink" title="3、主键删除和添加（了解）"></a>3、主键删除和添加（了解）</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除主键约束(了解)</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> st1 <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在已有表中添加主键约束(了解)</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> st1 <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(id);</span><br></pre></td></tr></table></figure><h5 id="4、主键自动增长"><a href="#4、主键自动增长" class="headerlink" title="4、主键自动增长"></a>4、主键自动增长</h5><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)创建学生表st2, 包含字段<span class="built_in">(id</span>,<span class="built_in"> name</span>, age)<span class="built_in">将id</span>做为主键并自动增长</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> st2 (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">age <span class="type">INT</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(2)主键默认从1开始自动增长: i</span><span class="literal">++</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;貂蝉&#x27;</span>, <span class="number">28</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;西施&#x27;</span>, <span class="number">18</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;王昭君&#x27;</span>, <span class="number">26</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;杨玉环&#x27;</span>, <span class="number">22</span>);</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(3)</span>修改自动增长的开始值<span class="comment">(面试题)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> st2 AUTO_INCREMENT <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;西施&#x27;</span>, <span class="number">18</span>);</span><br></pre></td></tr></table></figure><h5 id="5、唯一约束、非空约束、默认值约束"><a href="#5、唯一约束、非空约束、默认值约束" class="headerlink" title="5、唯一约束、非空约束、默认值约束"></a>5、唯一约束、非空约束、默认值约束</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT, <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">ename <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>, <span class="comment">-- 员工姓名，非空并且唯一</span></span><br><span class="line">joindate <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">-- 入职日期，非空</span></span><br><span class="line">salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 工资，非空</span></span><br><span class="line">bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">1000</span> <span class="comment">-- 奖金，如果没有奖金默认为1000</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)演示非空约束<span class="keyword">Column</span> <span class="string">&#x27;ename&#x27;</span> cannot be <span class="keyword">null</span>: ename不能为<span class="keyword">NULL</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">2</span>)演示唯一约束Duplicate entry <span class="string">&#x27;李四&#x27;</span> <span class="keyword">for key</span> <span class="string">&#x27;ename&#x27;</span>: 李四重复了</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(3)</span> 演示默认约束</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary) <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>);</span><br></pre></td></tr></table></figure><h4 id="二、外键约束"><a href="#二、外键约束" class="headerlink" title="二、外键约束"></a>二、外键约束</h4><h5 id="6、外键约束1"><a href="#6、外键约束1" class="headerlink" title="6、外键约束1"></a>6、外键约束1</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 准备数据: </span></span><br><span class="line"><span class="comment">-- 创建部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> department (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">dep_name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">dep_location <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建员工表</span></span><br><span class="line"><span class="comment">-- 创建 employee 并添加外键约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">INT</span>,</span><br><span class="line">dep_id <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_abc <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> department(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>添加数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加2个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department (dep_name, dep_location) <span class="keyword">VALUES</span> (<span class="string">&#x27;研发部&#x27;</span>, <span class="string">&#x27;广州&#x27;</span>), (<span class="string">&#x27;销售部&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工,dep_id表示员工所在的部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (NAME, age, dep_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>, <span class="number">21</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;老王&#x27;</span>, <span class="number">20</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;大王&#x27;</span>, <span class="number">22</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;小王&#x27;</span>, <span class="number">18</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><strong>演示：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)添加不正常的数据,报错: Cannot <span class="keyword">add</span> <span class="keyword">or</span> <span class="keyword">update</span> a child <span class="type">row</span>: a <span class="keyword">foreign</span> key <span class="keyword">constraint</span> fails  </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (NAME, age, dep_id) <span class="keyword">VALUES</span> (<span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>, <span class="number">6</span>);</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(2)</span>删除外键约束<span class="comment">(了解)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employee <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY employee_ibfk_1;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在已有表添加外键约束, 外键约束可以省略: CONSTRAINT 外键约束名 (了解)</span></span><br><span class="line"><span class="comment">-- 省略CONSTRAINT外键约束名 数据库会自动设置外键约束的名字,我们要到 `3信息` 中查找</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employee <span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> department(id);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础之总结</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/004-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%80%BB%E7%BB%93/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/004-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-29T12:32:51.000Z</published>
    <updated>2022-08-29T12:32:58.532Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h3 id="一、能够使用SQL语句操作数据库"><a href="#一、能够使用SQL语句操作数据库" class="headerlink" title="一、能够使用SQL语句操作数据库"></a>一、能够使用SQL语句操作数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看数据库: <span class="keyword">SHOW</span> DATABASES;</span><br><span class="line">创建数据库: <span class="keyword">CREATE</span> DATABASE 数据库名;</span><br><span class="line">删除数据库: <span class="keyword">DROP</span> DATABASE 数据库名;</span><br></pre></td></tr></table></figure><h3 id="二、能够使用SQL语句操作表结构"><a href="#二、能够使用SQL语句操作表结构" class="headerlink" title="二、能够使用SQL语句操作表结构"></a>二、能够使用SQL语句操作表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看表: <span class="keyword">SHOW</span> TABLES;</span><br><span class="line">创建表: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (字段名 字段类型);</span><br><span class="line">删除表: <span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名;</span><br><span class="line">修改表: <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 XXX;</span><br></pre></td></tr></table></figure><h3 id="三、能够使用SQL语句进行数据的添加修改和删除的操作"><a href="#三、能够使用SQL语句进行数据的添加修改和删除的操作" class="headerlink" title="三、能够使用SQL语句进行数据的添加修改和删除的操作"></a>三、能够使用SQL语句进行数据的添加修改和删除的操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">添加数据: <span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 (字段名, 字段名<span class="number">2</span>) <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>);</span><br><span class="line">修改数据: <span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 字段名<span class="operator">=</span>新的值;</span><br><span class="line">删除数据: <span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="四、能够使用SQL语句简单查询数据"><a href="#四、能够使用SQL语句简单查询数据" class="headerlink" title="四、能够使用SQL语句简单查询数据"></a>四、能够使用SQL语句简单查询数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="五、能够对使用SQL对表中数据条件查询操作"><a href="#五、能够对使用SQL对表中数据条件查询操作" class="headerlink" title="五、能够对使用SQL对表中数据条件查询操作"></a>五、能够对使用SQL对表中数据条件查询操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 条件;</span><br></pre></td></tr></table></figure><h3 id="六、能够使用SQL语句进行排序"><a href="#六、能够使用SQL语句进行排序" class="headerlink" title="六、能够使用SQL语句进行排序"></a>六、能够使用SQL语句进行排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 字段名 排序方式;</span><br><span class="line">排序方式:</span><br><span class="line"><span class="keyword">ASC</span>: 升序</span><br><span class="line"><span class="keyword">DESC</span>: 降序</span><br></pre></td></tr></table></figure><h3 id="七、能够使用聚合函数"><a href="#七、能够使用聚合函数" class="headerlink" title="七、能够使用聚合函数"></a>七、能够使用聚合函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">COUNT:统计一列的总数量</span><br><span class="line">SUM:统计一列的总和</span><br><span class="line">MAX:统计一列的最大值</span><br><span class="line">MIN:统计一列的最小值</span><br><span class="line">AVG:统计一列的平均值</span><br></pre></td></tr></table></figure><h3 id="八、能够使用SQL语句进行分组查询"><a href="#八、能够使用SQL语句进行分组查询" class="headerlink" title="八、能够使用SQL语句进行分组查询"></a>八、能够使用SQL语句进行分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段名, 聚合函数 <span class="keyword">FROM</span> 表名 <span class="keyword">GROUP</span> <span class="keyword">BY</span> 字段名;</span><br></pre></td></tr></table></figure><h3 id="九、能够完成基本的分页查询"><a href="#九、能够完成基本的分页查询" class="headerlink" title="九、能够完成基本的分页查询"></a>九、能够完成基本的分页查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 LIMIT 跳过的数量, 显示的数量</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础之查询数据</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/003-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/003-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/</id>
    <published>2022-08-29T12:30:51.000Z</published>
    <updated>2022-08-29T12:31:30.501Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h3 id="一、DQL操作表中记录环境搭建"><a href="#一、DQL操作表中记录环境搭建" class="headerlink" title="一、DQL操作表中记录环境搭建"></a>一、DQL操作表中记录环境搭建</h3><blockquote><p><strong>细节:查询只是查看数据,不会修改表中数据</strong></p></blockquote><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建商品表<span class="comment">(goods2)</span>包含: </span><br><span class="line">商品名称<span class="comment">(name)</span>,</span><br><span class="line">商品价格<span class="comment">(price)</span>,</span><br><span class="line">商品销量<span class="comment">(sales_volume)</span>,</span><br><span class="line">商品生产日期<span class="comment">(produced_date)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> goods2 (</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price <span class="keyword">DOUBLE</span>,</span><br><span class="line">sales_valume <span class="type">INT</span>,</span><br><span class="line">produced_date <span class="type">DATE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> goods2 <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;华为P40&#x27;</span>,<span class="number">5999</span>,<span class="number">1000</span>,<span class="string">&#x27;2020-08-20&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小米11&#x27;</span>,<span class="number">4999</span>,<span class="number">5000</span>,<span class="string">&#x27;2020-12-28&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;红米K30&#x27;</span>,<span class="number">2999</span>,<span class="number">22000</span>,<span class="string">&#x27;2020-03-11&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;糯米&#x27;</span>,<span class="number">8.99</span>,<span class="number">200</span>,<span class="string">&#x27;2016-06-08&#x27;</span>,<span class="string">&#x27;食物&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;米糊&#x27;</span>,<span class="number">7.99</span>,<span class="number">30</span>,<span class="string">&#x27;2013-11-22&#x27;</span>,<span class="string">&#x27;食物&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;iPhone 12&#x27;</span>,<span class="number">6799</span>,<span class="number">12000</span>,<span class="string">&#x27;2020-10-28&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;DELL 7590&#x27;</span>,<span class="number">8799</span>,<span class="number">300</span>,<span class="string">&#x27;2019-06-18&#x27;</span>,<span class="string">&#x27;电脑&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;立白洗衣粉&#x27;</span>,<span class="number">12.9</span>,<span class="number">39000</span>,<span class="string">&#x27;2018-02-13&#x27;</span>,<span class="string">&#x27;日用品&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;立白洗衣粉&#x27;</span>,<span class="number">12.9</span>,<span class="number">39000</span>,<span class="string">&#x27;2018-02-13&#x27;</span>,<span class="string">&#x27;日用品&#x27;</span>),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="number">88</span>,<span class="number">666</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),</span><br><span class="line">(<span class="string">&#x27;联想电脑&#x27;</span>,<span class="number">8799</span>,<span class="number">700</span>,<span class="string">&#x27;2017-03-13&#x27;</span>,<span class="string">&#x27;电脑&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;惠普电脑&#x27;</span>,<span class="number">8799</span>,<span class="number">50</span>,<span class="string">&#x27;2008-12-13&#x27;</span>,<span class="string">&#x27;电脑&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="二、简单查询"><a href="#二、简单查询" class="headerlink" title="二、简单查询"></a>二、简单查询</h3><p>1、查询goods2表中的 name 和 price 列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME, price <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>2、查询goods2表中所有字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME, price, sales_volume, produced_date, category <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>3、查询所有字段, 使用*代表所有列, 列就是字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>4、去除重复查询: DISTINCT</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> NAME <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>5、查询goods2表中的 name 和 price 列（取别名）<br>      name列的别名为 商品名称，price列的别名为 价格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME <span class="keyword">AS</span> 姓名, price <span class="keyword">AS</span> 价格 <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>5.1 取别名时AS关键字可以省略</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME 姓名<span class="number">2</span>, price 价格<span class="number">2</span> <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><h3 id="三、条件查询"><a href="#三、条件查询" class="headerlink" title="三、条件查询"></a>三、条件查询</h3><p>6、查询price大于1000的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">1000</span>;</span><br></pre></td></tr></table></figure><p>7、查询sales_volume小于5000的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> sales_volume<span class="operator">&lt;</span><span class="number">5000</span>;</span><br></pre></td></tr></table></figure><p>8、查询price不等于6799的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">!=</span><span class="number">6799</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&lt;&gt;</span><span class="number">6799</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">=</span><span class="number">6799</span>;</span><br></pre></td></tr></table></figure><h3 id="四、逻辑运算符"><a href="#四、逻辑运算符" class="headerlink" title="四、逻辑运算符"></a>四、逻辑运算符</h3><p>9、查询price大于1000且sales_volume小于500的商品(两个条件同时满足)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">1000</span> <span class="keyword">AND</span> sales_volume<span class="operator">&lt;</span><span class="number">500</span>;</span><br></pre></td></tr></table></figure><p>10、查询price大于8000 或 sales_volume小于100的商品(两个条件其中一个满足)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">8000</span> <span class="keyword">OR</span> sales_volume<span class="operator">&lt;</span><span class="number">100</span>;</span><br></pre></td></tr></table></figure><p>11、查询name是华为P40和小米11和米糊的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME<span class="operator">=</span><span class="string">&#x27;华为P40&#x27;</span> <span class="keyword">OR</span> NAME<span class="operator">=</span><span class="string">&#x27;小米11&#x27;</span> <span class="keyword">OR</span> NAME<span class="operator">=</span><span class="string">&#x27;米糊&#x27;</span>;</span><br></pre></td></tr></table></figure><p>12、in: 在…里面,只要是满足()里面的数据都可以<br>         查询name是 华为P40 和 小米11 和 米糊 的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IN</span> (<span class="string">&#x27;华为P40&#x27;</span>, <span class="string">&#x27;小米11&#x27;</span>, <span class="string">&#x27;米糊&#x27;</span>);</span><br></pre></td></tr></table></figure><p>13、扩展:查询name不是华为P40和小米11和米糊的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;华为P40&#x27;</span>, <span class="string">&#x27;小米11&#x27;</span>, <span class="string">&#x27;米糊&#x27;</span>);</span><br></pre></td></tr></table></figure><p>14、范围: BETWEEN 值1 AND 值2 – 表示从值1到值2范围，包头又包尾<br>         查询price大于等于1000，且小于等于5000的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;=</span><span class="number">1000</span> <span class="keyword">AND</span> price<span class="operator">&lt;=</span><span class="number">5000</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price <span class="keyword">BETWEEN</span> <span class="number">1000</span> <span class="keyword">AND</span> <span class="number">5000</span>;</span><br></pre></td></tr></table></figure><blockquote><p>细节: between 值1 and 值2, 小的写前,面大的写后面</p></blockquote><p>15、扩展:查询商品名称是null的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><p>16、扩展:查询商品名称不是null的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h3 id="五、模糊查询like"><a href="#五、模糊查询like" class="headerlink" title="五、模糊查询like"></a>五、模糊查询like</h3><p>17、查询米开头的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;米%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>18、查询商品名称中包含’米’字的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;%米%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>19、扩展:查询名称第二个字为米的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;_米%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>20、扩展:查询名称最后字为米的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;%米&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="六、查询排序"><a href="#六、查询排序" class="headerlink" title="六、查询排序"></a>六、查询排序</h3><p>21、单列排序<br>         查询所有数据,使用price升序排序<br>         order by 默认是升序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> price;</span><br></pre></td></tr></table></figure><p>22、组合排序<br>        查询所有数据,在price降序排序的基础上，如果price相同再以sales_volume降序排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span>, sales_volume <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="七、聚合函数"><a href="#七、聚合函数" class="headerlink" title="七、聚合函数"></a>七、聚合函数</h3><p>23、聚合函数<br>        SELECT 聚合函数(字段) FROM 表名;<br>        查询商品个数, COUNT统计时会忽略NULL值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(NAME) <span class="keyword">FROM</span> goods2;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(price) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>24、COUNT最好的处理方式, *表示所有列理解为统计行数,最准确</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>25、扩展用法：统计price大于1000的总个数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">1000</span>;</span><br></pre></td></tr></table></figure><p>26、查询所有商品总销量<br>         总销量是把所有商品的销量加起来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(sales_volume) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>27、查询销量最低的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(sales_volume) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>28、查询销量最高的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(sales_volume) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>29、查询商品平均价格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(price) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>30、扩展:让小数显示指定的位数(2位)<br>        ROUND(数据, 小数位数)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="built_in">AVG</span>(price), <span class="number">2</span>) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>31、细节:如果不是数值类型(整数&#x2F;小数)，那么聚合函数计算结果为0</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> AVG(<span class="type">NAME</span>) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><h3 id="八、分组查询"><a href="#八、分组查询" class="headerlink" title="八、分组查询"></a>八、分组查询</h3><p>32、按商品类型分组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>33、分组后会返回每组的第一条数据<br>        通常我们只获取分组字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category <span class="keyword">FROM</span> goods2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>34、查询每种类型的商品数量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>35、查询销量大于100的商品,按商品类型分组,统计每组的数量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> sales_volume<span class="operator">&gt;</span><span class="number">100</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>36、查询销量大于100的商品,按商品类型分组,统计每组的数量,并只显商品类型数量大于2的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> sales_volume<span class="operator">&gt;</span><span class="number">100</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> category <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h3 id="九、分页查询"><a href="#九、分页查询" class="headerlink" title="九、分页查询"></a>九、分页查询</h3><p>37、查询商品表中数据，跳过前面2条，显示3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">2</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>38、假设我们一每页显示3条记录的方式来分页，SQL语句如下：<br>        第一页: 跳过0条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">0</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>39、如果跳过的条数是0,可以省略</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>40、第二页: 跳过3条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">3</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>41、第三页: 跳过6条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">6</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>42、第四页: 跳过9条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">6</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>43、第四页: 跳过9条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">9</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h3 id="十、小结"><a href="#十、小结" class="headerlink" title="十、小结"></a>十、小结</h3><p>扩展查询的七个关键字顺序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">LIMIT</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 先查询表里面所有的数据并进行过滤。（此时用where关键字过滤的是表里面的数据，把name为null的给过滤掉了）</span></span><br><span class="line"><span class="comment">-- 然后进行分组，并统计每一组有多少条数据。</span></span><br><span class="line"><span class="comment">-- 利用HAVING关键字对查询的结果再次过滤 把个数大于等于2的展示出来。</span></span><br><span class="line"><span class="comment">-- 对having过滤之后的结果按照个数进行排序</span></span><br><span class="line"><span class="comment">-- 最后再跳过第一个，展示两条数据</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> 个数 <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> category <span class="keyword">HAVING</span> 个数 <span class="operator">&gt;=</span> <span class="number">2</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> 个数 <span class="keyword">ASC</span> LIMIT <span class="number">1</span>,<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>​</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础之增删改数据</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/002-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9%E6%95%B0%E6%8D%AE/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/002-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9%E6%95%B0%E6%8D%AE/</id>
    <published>2022-08-29T12:25:51.000Z</published>
    <updated>2022-08-29T12:31:20.104Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h3 id="一、DML操作表中记录环境搭建"><a href="#一、DML操作表中记录环境搭建" class="headerlink" title="一、DML操作表中记录环境搭建"></a>一、DML操作表中记录环境搭建</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建商品表<span class="comment">(goods)</span>包含: </span><br><span class="line">商品名称<span class="comment">(name)</span>,</span><br><span class="line">商品价格<span class="comment">(price)</span>,</span><br><span class="line">商品销量<span class="comment">(sales_volume)</span>,</span><br><span class="line">商品生产日期<span class="comment">(produced_date)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> goods (</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price <span class="keyword">DOUBLE</span>,</span><br><span class="line">sales_valume <span class="type">INT</span>,</span><br><span class="line">produced_date <span class="type">DATE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="二、DML操作表之插入数据"><a href="#二、DML操作表之插入数据" class="headerlink" title="二、DML操作表之插入数据"></a>二、DML操作表之插入数据</h3><p>1、给指定列添加数据 给goods表添加一条数据 NAME&#x3D;’格力空调’, price&#x3D;3699<br>**注意:**在MySQL中字符串可以使用””或’’, 建议’’</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> goods (NAME, price) <span class="keyword">VALUES</span> (<span class="string">&#x27;格力空调&#x27;</span>, <span class="number">3699</span>);</span><br></pre></td></tr></table></figure><p>2、插入数据, 所有的字段名都写出来(少数做法)<br>**注意:**日期使用’’</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> goods (NAME, price, sales_valume, produced_date) <span class="keyword">VALUES</span> (<span class="string">&#x27;华为P40&#x27;</span>, <span class="number">5999</span>, <span class="number">1000</span>, <span class="string">&#x27;2020-08-20&#x27;</span>);</span><br></pre></td></tr></table></figure><p>3、插入数据, 插入所有字段不写字段名(常用做法)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> goods <span class="keyword">VALUES</span> (<span class="string">&#x27;小米11&#x27;</span>, <span class="number">4999</span>, <span class="number">300</span>, <span class="string">&#x27;2021-03-22&#x27;</span>);</span><br></pre></td></tr></table></figure><p>4、扩展:一条SQL语句加入多条数据, VALUES 后面可以跟多个(), 一个()对应一条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> goods <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;iPhone 12&#x27;</span>, <span class="number">6799</span>, <span class="number">12000</span>, <span class="string">&#x27;2020-10-28&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;DELL 7590&#x27;</span>, <span class="number">8799</span>, <span class="number">300</span>, <span class="string">&#x27;2019-06-18&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;立白洗衣粉&#x27;</span>, <span class="number">12.9</span>, <span class="number">39000</span>, <span class="string">&#x27;2018-02-13&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="三、DML操作表之修改数据"><a href="#三、DML操作表之修改数据" class="headerlink" title="三、DML操作表之修改数据"></a>三、DML操作表之修改数据</h3><p>5、不带条件修改数据，将所有的price改成0</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> goods <span class="keyword">SET</span> price <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>6、带条件修改数据，把name为’华为P40’的商品price改成5999</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> goods <span class="keyword">SET</span> price <span class="operator">=</span> <span class="number">5999</span> <span class="keyword">WHERE</span> NAME<span class="operator">=</span><span class="string">&#x27;华为P40&#x27;</span>;</span><br></pre></td></tr></table></figure><p>7、一次修改多个列，把name为’小米11’的商品price改成3999, sales_volume改成10000</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> goods <span class="keyword">SET</span> price<span class="operator">=</span><span class="number">3999</span>, sales_valume<span class="operator">=</span><span class="number">10000</span> <span class="keyword">WHERE</span> NAME<span class="operator">=</span><span class="string">&#x27;小米11&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="四、DML操作表之删除数据"><a href="#四、DML操作表之删除数据" class="headerlink" title="四、DML操作表之删除数据"></a>四、DML操作表之删除数据</h3><p>8、带条件删除数据，删除name为’小米11’的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> goods <span class="keyword">WHERE</span> NAME<span class="operator">=</span><span class="string">&#x27;小米11&#x27;</span>;</span><br></pre></td></tr></table></figure><p>9、不带条件删除数据，删除表中的所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> goods;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础之操作数据库和表</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/001-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E8%A1%A8/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/001-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E8%A1%A8/</id>
    <published>2022-08-29T12:12:51.000Z</published>
    <updated>2022-08-29T12:29:06.108Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><h3 id="一、DML操作数据库"><a href="#一、DML操作数据库" class="headerlink" title="一、DML操作数据库"></a>一、DML操作数据库</h3><h5 id="1、查看所有数据库"><a href="#1、查看所有数据库" class="headerlink" title="1、查看所有数据库"></a>1、查看所有数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure><h5 id="2、直接创建数据库db1"><a href="#2、直接创建数据库db1" class="headerlink" title="2、直接创建数据库db1"></a>2、直接创建数据库db1</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE db1;</span><br></pre></td></tr></table></figure><h5 id="3、判断是否存在并创建数据库db2"><a href="#3、判断是否存在并创建数据库db2" class="headerlink" title="3、判断是否存在并创建数据库db2"></a>3、判断是否存在并创建数据库db2</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS db2;</span><br></pre></td></tr></table></figure><h5 id="4、删除db2数据库"><a href="#4、删除db2数据库" class="headerlink" title="4、删除db2数据库"></a>4、删除db2数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE db2;</span><br></pre></td></tr></table></figure><h5 id="5、判断数据库存在才删除"><a href="#5、判断数据库存在才删除" class="headerlink" title="5、判断数据库存在才删除"></a>5、判断数据库存在才删除</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE IF EXISTS db2;</span><br></pre></td></tr></table></figure><h5 id="6、使用数据库"><a href="#6、使用数据库" class="headerlink" title="6、使用数据库"></a>6、使用数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE sys;</span><br></pre></td></tr></table></figure><h3 id="二、DDL操作表"><a href="#二、DDL操作表" class="headerlink" title="二、DDL操作表"></a>二、DDL操作表</h3><h5 id="建表需求一"><a href="#建表需求一" class="headerlink" title="建表需求一"></a>建表需求一</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建商品表(goods)包含: </span><br><span class="line">商品名称(name),</span><br><span class="line">商品价格(price),</span><br><span class="line">商品销量(sales_volume),</span><br><span class="line">商品生产日期(produced_date)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE goods (</span><br><span class="line">NAME VARCHAR(20),</span><br><span class="line">price DOUBLE,</span><br><span class="line">sales_valume INT,</span><br><span class="line">produced_date DATE</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="建表需求二"><a href="#建表需求二" class="headerlink" title="建表需求二"></a>建表需求二</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">需求：设计一张学生表，请注重数据类型、长度的合理性</span><br><span class="line">编号，整数</span><br><span class="line">姓名，姓名最长不超过<span class="number">10</span>个汉字</span><br><span class="line">性别，因为取值只有两种可能(男或女)，因此用一个汉字</span><br><span class="line">生日，取值为年月日</span><br><span class="line">入学成绩，小数点后保留两位</span><br><span class="line">邮件地址，最大长度不超过 <span class="number">64</span></span><br><span class="line">家庭联系电话，不一定是手机号码，可能会出现 <span class="operator">-</span> 等字符，<span class="number">20</span>位以内</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student (</span><br><span class="line">id INT,</span><br><span class="line">NAME VARCHAR(10),</span><br><span class="line">sex CHAR(1),</span><br><span class="line">birthday DATE,</span><br><span class="line">score DOUBLE(5,2), -- 总共5位,小数占2位100.0098.50</span><br><span class="line">email VARCHAR(64),</span><br><span class="line">phone VARCHAR(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="7、查看db1数据库中的所有表"><a href="#7、查看db1数据库中的所有表" class="headerlink" title="7、查看db1数据库中的所有表"></a>7、查看db1数据库中的所有表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure><h5 id="8、查看表结构"><a href="#8、查看表结构" class="headerlink" title="8、查看表结构"></a>8、查看表结构</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC goods;</span><br></pre></td></tr></table></figure><h5 id="9、删除表goods表"><a href="#9、删除表goods表" class="headerlink" title="9、删除表goods表"></a>9、删除表goods表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE goods;</span><br></pre></td></tr></table></figure><h5 id="10、将goods改名成goods2"><a href="#10、将goods改名成goods2" class="headerlink" title="10、将goods改名成goods2"></a>10、将goods改名成goods2</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE goods RENAME TO goods2;</span><br></pre></td></tr></table></figure><h5 id="11、为goods2表添加一个新的字段img-类型为varchar-20"><a href="#11、为goods2表添加一个新的字段img-类型为varchar-20" class="headerlink" title="11、为goods2表添加一个新的字段img,类型为varchar(20)"></a>11、为goods2表添加一个新的字段img,类型为varchar(20)</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE goods2 ADD img VARCHAR(20);</span><br></pre></td></tr></table></figure><h5 id="12、将goods2表中的img字段的改成varchar-100"><a href="#12、将goods2表中的img字段的改成varchar-100" class="headerlink" title="12、将goods2表中的img字段的改成varchar(100)"></a>12、将goods2表中的img字段的改成varchar(100)</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE goods2 MODIFY img VARCHAR(100);</span><br></pre></td></tr></table></figure><h5 id="13、将goods2表中的img字段名改成icon，类型varchar-80"><a href="#13、将goods2表中的img字段名改成icon，类型varchar-80" class="headerlink" title="13、将goods2表中的img字段名改成icon，类型varchar(80)"></a>13、将goods2表中的img字段名改成icon，类型varchar(80)</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE goods2 CHANGE img icon VARCHAR(80);</span><br></pre></td></tr></table></figure><h5 id="14、删除goods2表中的字段icon"><a href="#14、删除goods2表中的字段icon" class="headerlink" title="14、删除goods2表中的字段icon"></a>14、删除goods2表中的字段icon</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE goods2 DROP icon;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>java高级之动态SQL</title>
    <link href="https://onlyonemomo.github.io/2022/08/28/%E9%80%9A%E5%BE%80java%E4%B9%8B%E8%B7%AF/007-java%E9%AB%98%E7%BA%A7%E4%B9%8B%E5%8A%A8%E6%80%81SQL/"/>
    <id>https://onlyonemomo.github.io/2022/08/28/%E9%80%9A%E5%BE%80java%E4%B9%8B%E8%B7%AF/007-java%E9%AB%98%E7%BA%A7%E4%B9%8B%E5%8A%A8%E6%80%81SQL/</id>
    <published>2022-08-28T14:46:36.000Z</published>
    <updated>2022-08-28T14:47:05.832Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：在《通往java之路》这个栏目，我不想表现出更多的功利主义。我希望在这个栏目中每一篇文章都有很强的可读性和趣味性，能让我闲暇之时也能好好的阅读。</p><h3 id="一、动态SQL编写"><a href="#一、动态SQL编写" class="headerlink" title="一、动态SQL编写"></a>一、动态SQL编写</h3><p><strong>导入依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1、基础动态SQL"><a href="#1、基础动态SQL" class="headerlink" title="1、基础动态SQL"></a>1、基础动态SQL</h3><h5 id="pojo-实体类"><a href="#pojo-实体类" class="headerlink" title="pojo 实体类"></a>pojo 实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Date;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个类的对象用于保存user表中的数据(实体类)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday; <span class="comment">// 注意,使用java.sql.Date</span></span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br></pre></td></tr></table></figure><h5 id="dao层"><a href="#dao层" class="headerlink" title="dao层"></a>dao层</h5><p>数据接口层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// XxxMapper: 表示这个接口中的所有方法用于操作xxx表</span></span><br><span class="line"><span class="comment">// UserMapper: 表示这个接口中的所有方法用于操作user表</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="comment">// 查询所有用户</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">findAllUsers</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据id查询用户 uid: 用户id</span></span><br><span class="line">    User <span class="title function_">selectById</span><span class="params">(<span class="type">int</span> uid)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增删改返回影响的行数,返回值可以写int或void</span></span><br><span class="line">    <span class="comment">// 根据id删除用户</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">(<span class="type">int</span> uid)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据id修改用户</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">update</span><span class="params">(User u)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加用户</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">add</span><span class="params">(User u)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MyBatis多参数处理: 使用用户名个性别查询用户</span></span><br><span class="line">    <span class="comment">// MyBatis多参数方案1: 每个参数添加@Param注解</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">selectByCondition</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username, <span class="meta">@Param(&quot;sex&quot;)</span> String sex)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MyBatis多参数方案2: 传入自定义类</span></span><br><span class="line">    <span class="comment">// List&lt;User&gt; selectByCondition(User u);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// MyBatis多参数方案3: 传入Map, #&#123;键&#125;, 取出map的值</span></span><br><span class="line">    <span class="comment">// List&lt;User&gt; selectByCondition(Map&lt;String, String&gt; map);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过id批量删除</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteByIds</span><span class="params">(<span class="meta">@Param(&quot;ids&quot;)</span> <span class="type">int</span>[] ids)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="动态SQL编写"><a href="#动态SQL编写" class="headerlink" title="动态SQL编写"></a>动态SQL编写</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span>  </span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>  </span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.onlyone.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--select标签: 配置查询的SQL语句</span></span><br><span class="line"><span class="comment">            id属性: 配置接口中的方法名</span></span><br><span class="line"><span class="comment">            resultType: 配置接口中方法的返回值类型, 如果是集合不需要要集合,写集合泛型的类型</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAllUsers&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--#&#123;参数名&#125;: 1.先使用?占位, 把参数的值赋值给?     SELECT * FROM user WHERE id=?;</span></span><br><span class="line"><span class="comment">        $&#123;参数名&#125;: 字符串拼接,可能有SQL注入,不建议      SELECT * FROM user WHERE id=1;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.onlyone.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id=$&#123;uid&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--增删改返回影响的行数,在映射文件里面不需要配置返回值--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--delete标签: 配置删除的SQL语句--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteById&quot;</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id=#&#123;uid&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--update标签: 配置修改的SQL语句</span></span><br><span class="line"><span class="comment">        参数是类, #&#123;成员变量名&#125; 取出对象成员变量的值</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span>&gt;</span></span><br><span class="line">        UPDATE user</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username!=null and username!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                username=#&#123;username&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;birthday!=null&quot;</span>&gt;</span></span><br><span class="line">                birthday=#&#123;birthday&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex!=null and sex!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                sex=#&#123;sex&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;address!=null and address!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                address=#&#123;address&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        WHERE id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--insert标签: 配置添加的SQL语句</span></span><br><span class="line"><span class="comment">            useGeneratedKeys: 获取数据新增的主键</span></span><br><span class="line"><span class="comment">            keyProperty: 得到新增的主键放到类中哪个成员变量里面</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO user VALUES (NULL, #&#123;username&#125;, #&#123;birthday&#125;, #&#123;sex&#125;, #&#123;address&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--MyBatis多参数处理: 使用用户名个性别查询用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.onlyone.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--test条件不需要写#&#123;&#125;,直接写参数名,就可以获取到参数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username!=null and username!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                username LIKE #&#123;username&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sex!=null and sex!=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                 AND sex=#&#123;sex&#125;;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sql标签:抽取重复的SQL语句--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;abc&quot;</span>&gt;</span></span><br><span class="line">        DELETE FROM USER WHERE id IN</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--通过id批量删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByIds&quot;</span>&gt;</span></span><br><span class="line">        DELETE FROM USER WHERE id IN</span><br><span class="line">        <span class="comment">&lt;!--我们的目标是拼接出:  (1, 2, 5);</span></span><br><span class="line"><span class="comment">            foreach标签: 遍历数组</span></span><br><span class="line"><span class="comment">                collection属性: 要遍历的数组或集合</span></span><br><span class="line"><span class="comment">                item属性: 取个名字,保存遍历到的元素</span></span><br><span class="line"><span class="comment">                open属性: 遍历前添加的数据</span></span><br><span class="line"><span class="comment">                separator属性: 每个元素后添加的数据</span></span><br><span class="line"><span class="comment">                close属性: 遍历后添加的数据</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;);&quot;</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、进阶动态SQL"><a href="#2、进阶动态SQL" class="headerlink" title="2、进阶动态SQL"></a>2、进阶动态SQL</h3><p>pojo 实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个类的对象用于保存order表中的数据</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> oId;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> userId;</span><br><span class="line">    <span class="keyword">private</span> String number;</span><br><span class="line">    <span class="keyword">private</span> Timestamp createTime; <span class="comment">// java.sql.Timestamp对应数据中的DATETIME</span></span><br><span class="line">    <span class="keyword">private</span> String note;</span><br></pre></td></tr></table></figure><h5 id="dao层-1"><a href="#dao层-1" class="headerlink" title="dao层"></a>dao层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// OrderMapper: 表示这个接口中的所有方法用于操作order表</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderMapper</span> &#123;</span><br><span class="line">    <span class="comment">// 查询所有的订单</span></span><br><span class="line">    List&lt;Order&gt; <span class="title function_">findAllOrders</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="动态SQL编写-1"><a href="#动态SQL编写-1" class="headerlink" title="动态SQL编写"></a>动态SQL编写</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span>  </span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>  </span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.onlyone.mapper.OrderMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultMap标签: 手动指定表中的字段名对应类中哪个成员变量</span></span><br><span class="line"><span class="comment">            id属性: 取个名字</span></span><br><span class="line"><span class="comment">            type属性: 查询的数据要封装的类型</span></span><br><span class="line"><span class="comment">            id子标签: 指定主键的对应关系</span></span><br><span class="line"><span class="comment">            result子标签: 指定普通字段的对应关系</span></span><br><span class="line"><span class="comment">                column属性: 表中的字段名</span></span><br><span class="line"><span class="comment">                property属性: 类中的成员变量名</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;OrderMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;o_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;oId&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;user_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;userId&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;create_time&quot;</span> <span class="attr">property</span>=<span class="string">&quot;createTime&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        resultType属性: 表中字段名和类中成员变量相同使用resultType自动处理查询结果封装到对象中</span></span><br><span class="line"><span class="comment">        resultMap属性: 表中字段名和类中成员变量不相同使用, resultMap手动处理查询结果封装到对象中</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAllOrders&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;OrderMap&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM `order`;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>可以开启驼峰命名自动映射数据库的_命名简化代码</strong></p></blockquote><p>补充说明：就不写实体类了, 有时间再继续补充</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--MyBatis默认多表查询,表中字段名和类中成员变量名相同的也要执行  autoMapping=&quot;true&quot;: 相同的就可以不用指定,但是主键必须指定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span> <span class="attr">autoMapping</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注意: collection要配置在association下面,DTD约束的规定.</span></span><br><span class="line"><span class="comment">    一对一,一对多都可以使用association, collection语义更明确而已--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置一对一--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;userInfo&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserInfoMap&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置一对多--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;orders&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;OrderMap&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;roles&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;List&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Role&quot;</span> <span class="attr">autoMapping</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;role_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;roleId&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    useGeneratedKeys:true 表示获取主键值</span></span><br><span class="line"><span class="comment">    keyProperty=&quot;id&quot; 表示将主键值赋给哪个属性</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">useGeneratedKeys设置为true：在执行插入记录之后可以获取到数据库自动生成的主键值</span></span><br><span class="line"><span class="comment">keyProperty：指定Java对象的属性名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在《通往java之路》这个栏目，我不想表现出更多的功利主义。我希望在这个栏目中每一篇文章都有很强的可读性和趣味性，能让我闲暇之时也能好好的阅读。&lt;/p&gt;</summary>
    
    
    
    <category term="通往java之路" scheme="https://onlyonemomo.github.io/categories/%E9%80%9A%E5%BE%80java%E4%B9%8B%E8%B7%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringBoot-整合Mybatis</title>
    <link href="https://onlyonemomo.github.io/2022/08/28/%E9%80%9A%E5%BE%80java%E4%B9%8B%E8%B7%AF/004-SpringBoot-%E6%95%B4%E5%90%88Mybatis/"/>
    <id>https://onlyonemomo.github.io/2022/08/28/%E9%80%9A%E5%BE%80java%E4%B9%8B%E8%B7%AF/004-SpringBoot-%E6%95%B4%E5%90%88Mybatis/</id>
    <published>2022-08-28T14:38:36.000Z</published>
    <updated>2022-08-28T14:39:39.083Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：在《通往java之路》这个栏目，我不想表现出更多的功利主义。我希望在这个栏目中每一篇文章都有很强的可读性和趣味性，能让我闲暇之时也能好好的阅读。</p><h3 id="图层结构介绍"><a href="#图层结构介绍" class="headerlink" title="图层结构介绍"></a>图层结构介绍</h3><p><img src="https://img-blog.csdnimg.cn/995c61c12ead4d66948a3966f61b29ac.png#pic_center" alt="在这里插入图片描述"></p><h3 id="1、MySQL环境搭建"><a href="#1、MySQL环境搭建" class="headerlink" title="1、MySQL环境搭建"></a>1、MySQL环境搭建</h3><p><strong>创建表导入数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tb_user` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `user_name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">  `sex` <span class="type">int</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> COMMENT <span class="string">&#x27;1-男，2-女&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1370649010551177219</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `tb_user`(`id`,`user_name`,`password`,`name`,`age`,`email`,`sex`) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;test1@itcast.cn&#x27;</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;test2@itcast.cn&#x27;</span>,<span class="number">1</span>),(<span class="number">3</span>,<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">28</span>,<span class="string">&#x27;test3@itcast.cn&#x27;</span>,<span class="number">1</span>),(<span class="number">4</span>,<span class="string">&#x27;zhaoliu&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;test4@itcast.cn&#x27;</span>,<span class="number">1</span>),(<span class="number">5</span>,<span class="string">&#x27;sunqi&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;孙七&#x27;</span>,<span class="number">24</span>,<span class="string">&#x27;test5@itcast.cn&#x27;</span>,<span class="number">1</span>),(<span class="number">6</span>,<span class="string">&#x27;zhuge2&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;诸葛孔明2&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h3 id="2、引入mybatis启动器依赖-它依赖了jdbc启动器，jdbc启动器可以删除"><a href="#2、引入mybatis启动器依赖-它依赖了jdbc启动器，jdbc启动器可以删除" class="headerlink" title="2、引入mybatis启动器依赖(它依赖了jdbc启动器，jdbc启动器可以删除)"></a>2、引入mybatis启动器依赖(<strong>它依赖了jdbc启动器，jdbc启动器可以删除</strong>)</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springmvc--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据库驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--myabtis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3、配置mybatis相关属性"><a href="#3、配置mybatis相关属性" class="headerlink" title="3、配置mybatis相关属性"></a>3、配置mybatis相关属性</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">datasource</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">driver-class-name</span>: <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">jdbc:mysql:///springdb?useSSL=false</span></span><br><span class="line">    <span class="attr">username</span>: <span class="string">root</span></span><br><span class="line">    <span class="attr">password</span>: <span class="string">root</span></span><br><span class="line"><span class="attr">mybatis</span>:<span class="string"></span></span><br><span class="line"><span class="comment">  #别名扫描</span></span><br><span class="line">  <span class="attr">type-aliases-package</span>: <span class="string">com.onlyone.model</span></span><br><span class="line"><span class="comment">  #开启下划线与小驼峰映射</span></span><br><span class="line">  <span class="attr">configuration</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case</span>: <span class="string">true</span></span><br><span class="line"><span class="comment">    #打印sql的日志信息</span></span><br><span class="line">    <span class="attr">log-impl</span>: <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"><span class="comment"> #指定Mapper文件所在的位置 ,一旦指定不需要mapper.xml文件与类名同一个包文件名也可以不一样的。</span></span><br><span class="line">  <span class="attr">mapper-locations</span>:<span class="string"></span></span><br><span class="line"><span class="comment">  #注意： classpath后面的:是没有空格的，</span></span><br><span class="line">    <span class="attr">-</span> <span class="string">classpath:mappers/*.xml</span></span><br></pre></td></tr></table></figure><h3 id="4、用户实体-User"><a href="#4、用户实体-User" class="headerlink" title="4、用户实体(User)"></a>4、用户实体(User)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.onlyone.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id; <span class="comment">//id</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username; <span class="comment">//用户名</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password; <span class="comment">//密码</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age; <span class="comment">//年龄</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email; <span class="comment">//邮箱</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer sex; <span class="comment">//性别</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、数据访问接口-UserMapper"><a href="#5、数据访问接口-UserMapper" class="headerlink" title="5、数据访问接口(UserMapper)"></a>5、数据访问接口(UserMapper)</h3><p>(1) dao层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.onlyone.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.onlyone.model.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>(2) 在启动类上添加数据访问接口包扫描:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.onlyone;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意： 使用mybatis的时候，这个springboot默认是不扫描dao接口的，两种解决方案：</span></span><br><span class="line"><span class="comment"> *      1. 每一个dao接口都添加一个<span class="doctag">@mapper</span>注解,不推荐，因为较为繁琐</span></span><br><span class="line"><span class="comment"> *      2. 在启动类中<span class="doctag">@MapperScan</span>注解扫描dao包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = &quot;com.onlyone.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>说明: 这种方式的好处是，不用给每一个Mapper都添加注解。采用@MapperScan包扫描方式只需要添加一次注解。</p></blockquote><h3 id="6、定义SQL语句-UserMapper-xml"><a href="#6、定义SQL语句-UserMapper-xml" class="headerlink" title="6、定义SQL语句(UserMapper.xml)"></a>6、定义SQL语句(UserMapper.xml)</h3><p><img src="https://img-blog.csdnimg.cn/be3c85f8e2a447dca1dab51cfc752144.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.onlyone.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">        select * from tb_user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7、业务层-UserService"><a href="#7、业务层-UserService" class="headerlink" title="7、业务层 (UserService)"></a>7、业务层 (UserService)</h3><p>定义一个service接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.onlyone.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.onlyone.model.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实现该接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.onlyone.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.onlyone.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.onlyone.model.User;</span><br><span class="line"><span class="keyword">import</span> com.onlyone.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userDao.findAll();</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8、控制器-UserController"><a href="#8、控制器-UserController" class="headerlink" title="8、控制器 (UserController)"></a>8、控制器 (UserController)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.onlyone.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.onlyone.model.User;</span><br><span class="line"><span class="keyword">import</span> com.onlyone.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt;findAll()&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9、运行测试"><a href="#9、运行测试" class="headerlink" title="9、运行测试"></a>9、运行测试</h3><p><img src="https://img-blog.csdnimg.cn/5284729e90f2401c8dd17e4df33d57f2.png#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在《通往java之路》这个栏目，我不想表现出更多的功利主义。我希望在这个栏目中每一篇文章都有很强的可读性和趣味性，能让我闲暇之时也能好好的阅读。&lt;/p&gt;</summary>
    
    
    
    <category term="通往java之路" scheme="https://onlyonemomo.github.io/categories/%E9%80%9A%E5%BE%80java%E4%B9%8B%E8%B7%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>模块化之Redis设置营业状态</title>
    <link href="https://onlyonemomo.github.io/2022/08/28/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/008-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BRedis%E8%AE%BE%E7%BD%AE%E8%90%A5%E4%B8%9A%E7%8A%B6%E6%80%81/"/>
    <id>https://onlyonemomo.github.io/2022/08/28/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/008-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BRedis%E8%AE%BE%E7%BD%AE%E8%90%A5%E4%B8%9A%E7%8A%B6%E6%80%81/</id>
    <published>2022-08-28T14:35:56.000Z</published>
    <updated>2022-08-28T14:35:31.250Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。</p><h6 id="编写Redis配置类"><a href="#编写Redis配置类" class="headerlink" title="编写Redis配置类"></a>编写Redis配置类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span>&#123;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;开始创建redis模板类...&quot;</span>);</span><br><span class="line">        <span class="type">RedisTemplate</span> <span class="variable">redisTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>();</span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="创建ShopService接口，声明设置营业状态和查询营业状态的方法"><a href="#创建ShopService接口，声明设置营业状态和查询营业状态的方法" class="headerlink" title="创建ShopService接口，声明设置营业状态和查询营业状态的方法"></a>创建ShopService接口，声明设置营业状态和查询营业状态的方法</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ShopService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置店铺营业状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> status</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(Integer status)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询店铺的营业状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Integer <span class="title function_">getStatus</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="创建ShopServiceImpl并实现ShopService接口"><a href="#创建ShopServiceImpl并实现ShopService接口" class="headerlink" title="创建ShopServiceImpl并实现ShopService接口"></a>创建ShopServiceImpl并实现ShopService接口</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShopServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ShopService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">KEY</span> <span class="operator">=</span> <span class="string">&quot;SHOP:STATUS&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置店铺营业状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> status</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(Integer status)</span> &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(KEY,status);</span><br><span class="line">        log.info(<span class="string">&quot;设置营业状态为:&#123;&#125;&quot;</span>,status == <span class="number">1</span> ? <span class="string">&quot;营业中&quot;</span>:<span class="string">&quot;打烊中&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取店铺营业状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (Integer) redisTemplate.opsForValue().get(KEY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="创建ShopController，并根据接口定义创建相应的方法"><a href="#创建ShopController，并根据接口定义创建相应的方法" class="headerlink" title="创建ShopController，并根据接口定义创建相应的方法"></a>创建ShopController，并根据接口定义创建相应的方法</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController(&quot;adminShopController&quot;)</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;admin/shop&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;店铺操作相关接口&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShopController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ShopService shopService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置店铺营业状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> status</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/&#123;status&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;设置店铺营业状态&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;String&gt; <span class="title function_">setStatus</span><span class="params">(<span class="meta">@PathVariable</span> Integer status)</span>&#123;</span><br><span class="line">        shopService.setStatus(status);</span><br><span class="line">        <span class="keyword">return</span> R.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;status&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;获取店铺营业状态&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;Integer&gt; <span class="title function_">getStatus</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">status</span> <span class="operator">=</span> shopService.getStatus();</span><br><span class="line">            <span class="keyword">return</span> R.success(status);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> R.success(StatusConstant.ENABLE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：记得在配置文件里面配置redis</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。&lt;/p&gt;</summary>
    
    
    
    <category term="项目模块化" scheme="https://onlyonemomo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="模块化" scheme="https://onlyonemomo.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>模块化之PageHelper.startPage</title>
    <link href="https://onlyonemomo.github.io/2022/08/28/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/002-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BPageHelper.startPage/"/>
    <id>https://onlyonemomo.github.io/2022/08/28/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/002-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BPageHelper.startPage/</id>
    <published>2022-08-28T14:31:56.000Z</published>
    <updated>2022-08-28T14:31:58.626Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。</p><p>PageHelper是MyBatis的分页插件，它能够帮助我们快速且简洁的实现分页功能。传统的分页都需要我们程序员手动在sql语句里写LIMIT语句，而PageHelper这个插件能够帮助我们过滤sql，自动添加LIMIT语句，使得sql语句看上去更加简洁，具体实现方法如下（注意：PageHelper必须在sql语句前使用，否则过滤无效）</p><p>例句：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一步 PageHelper.startPage  获取当前页数,每页的内容数量</span></span><br><span class="line">PageHelper.startPage((<span class="type">int</span>)分页的页数, （<span class="type">int</span>）每个分页的内容数量);</span><br><span class="line"><span class="comment">//第二步sql语句具体实现</span></span><br><span class="line"><span class="comment">// 第三步返回数据给表示层(看接口需要返回什么数据)</span></span><br></pre></td></tr></table></figure><p>某个分页查询的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> //employeePageQueryDTO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageResult <span class="title function_">pageQuery</span><span class="params">(EmployeePageQueryDTO pageQueryDTO)</span> &#123;</span><br><span class="line">    <span class="comment">//select * from employee limit 10,20</span></span><br><span class="line">    <span class="comment">//基于PageHelper插件实现动态分页查询</span></span><br><span class="line">    PageHelper.startPage(pageQueryDTO.getPage(),pageQueryDTO.getPageSize());</span><br><span class="line"></span><br><span class="line">    Page&lt;Employee&gt; page = employeeMapper.pageQuery(pageQueryDTO);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageResult</span>(page.getTotal(),page.getResult());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。&lt;/p&gt;</summary>
    
    
    
    <category term="项目模块化" scheme="https://onlyonemomo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="模块化" scheme="https://onlyonemomo.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>模块化之校验JWT令牌</title>
    <link href="https://onlyonemomo.github.io/2022/08/28/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/001-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BJWT%E6%A0%A1%E9%AA%8C/"/>
    <id>https://onlyonemomo.github.io/2022/08/28/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/001-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BJWT%E6%A0%A1%E9%AA%8C/</id>
    <published>2022-08-28T14:28:56.000Z</published>
    <updated>2022-08-28T14:28:56.873Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。</p><p>实现思路梳理：</p><h5 id="1、前端请求后端接口，在请求头中携带JWT令牌"><a href="#1、前端请求后端接口，在请求头中携带JWT令牌" class="headerlink" title="1、前端请求后端接口，在请求头中携带JWT令牌"></a>1、前端请求后端接口，在请求头中携带JWT令牌</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建jwt令牌  </span></span><br><span class="line"><span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> JwtUtil.createJWT(<span class="string">&quot;itcast&quot;</span>,<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>, claims);</span><br></pre></td></tr></table></figure><h6 id="图1："><a href="#图1：" class="headerlink" title="图1："></a>图1：</h6><p><img src="https://img-blog.csdnimg.cn/a7852227ca074b3786a9d7303894b0d0.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录成功,生成JWT令牌</span></span><br><span class="line">Map&lt;String, Object&gt; claims = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">claims.put(JwtClaimsConstant.EMP_ID,employee.getId());  <span class="comment">//claims（key,value）</span></span><br><span class="line"><span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> JwtUtil.createJWT(</span><br><span class="line">    jwtProperties.getAdminSecretKey(),</span><br><span class="line">    jwtProperties.getAdminTtl(),</span><br><span class="line">    claims);</span><br></pre></td></tr></table></figure><p>2、后端通过拦截器统一进行JWT令牌校验</p><h6 id="创建拦截器"><a href="#创建拦截器" class="headerlink" title="创建拦截器"></a>创建拦截器</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jwt令牌校验的拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtTokenAdminInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtProperties jwtProperties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> handler</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;jwt校验...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、从请求头获取令牌</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(jwtProperties.getAdminTokenName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//校验失败会抛异常，需要自定义处理</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//2、校验令牌</span></span><br><span class="line">            <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> JwtUtil.parseJWT(jwtProperties.getAdminSecretKey(), token);</span><br><span class="line">            <span class="comment">//获取当前员工登录的id</span></span><br><span class="line">            <span class="type">Long</span> <span class="variable">empId</span> <span class="operator">=</span> Long.valueOf(claims.get(JwtClaimsConstant.EMP_ID).toString());</span><br><span class="line">            <span class="comment">//保存当前登录员工的到线程本地变量</span></span><br><span class="line">            BaseContext.setCurrentId(empId);</span><br><span class="line">            <span class="comment">//3、通知，放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">//4、不通过，响应401状态码</span></span><br><span class="line">            response.setStatus(<span class="number">401</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="注册拦截器"><a href="#注册拦截器" class="headerlink" title="注册拦截器"></a>注册拦截器</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置类，注册Web层相关组件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfiguration</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenAdminInterceptor jwtTokenAdminInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始注册自定义拦截器:&#123;&#125;&quot;</span>, jwtTokenAdminInterceptor);</span><br><span class="line">        registry.addInterceptor(jwtTokenAdminInterceptor)</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin/employee/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="JWT工具类"><a href="#JWT工具类" class="headerlink" title="JWT工具类"></a>JWT工具类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成jwt</span></span><br><span class="line"><span class="comment">     * 使用Hs256算法, 私匙使用固定秘钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secretKey jwt秘钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ttlMillis jwt过期时间(毫秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> claims    设置的信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">createJWT</span><span class="params">(String secretKey, <span class="type">long</span> ttlMillis, Map&lt;String, Object&gt; claims)</span> &#123;</span><br><span class="line">        <span class="comment">// 指定签名的时候使用的签名算法，也就是header那部分</span></span><br><span class="line">        <span class="type">SignatureAlgorithm</span> <span class="variable">signatureAlgorithm</span> <span class="operator">=</span> SignatureAlgorithm.HS256;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成JWT的时间</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">expMillis</span> <span class="operator">=</span> System.currentTimeMillis() + ttlMillis;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(expMillis);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置jwt的body</span></span><br><span class="line">        <span class="type">JwtBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> Jwts.builder()</span><br><span class="line">                <span class="comment">// 如果有私有声明，一定要先设置这个自己创建的私有的声明，这个是给builder的claim赋值，一旦写在标准的声明赋值之后，就是覆盖了那些标准的声明的</span></span><br><span class="line">                .setClaims(claims)</span><br><span class="line">                <span class="comment">// 设置签名使用的签名算法和签名使用的秘钥</span></span><br><span class="line">                .signWith(signatureAlgorithm, secretKey.getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                <span class="comment">// 设置过期时间</span></span><br><span class="line">                .setExpiration(exp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> builder.compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Token解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secretKey jwt秘钥 此秘钥一定要保留好在服务端, 不能暴露出去, 否则sign就可以被伪造, 如果对接多个客户端建议改造成多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token     加密后的token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Claims <span class="title function_">parseJWT</span><span class="params">(String secretKey, String token)</span> &#123;</span><br><span class="line">        <span class="comment">// 得到DefaultJwtParser</span></span><br><span class="line">        <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> Jwts.parser()</span><br><span class="line">                <span class="comment">// 设置签名的秘钥</span></span><br><span class="line">                .setSigningKey(secretKey.getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                <span class="comment">// 设置需要解析的jwt</span></span><br><span class="line">                .parseClaimsJws(token).getBody();</span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。&lt;/p&gt;</summary>
    
    
    
    <category term="项目模块化" scheme="https://onlyonemomo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="模块化" scheme="https://onlyonemomo.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>JWT工具类</title>
    <link href="https://onlyonemomo.github.io/2022/08/28/%E5%B7%A5%E5%85%B7%E7%B1%BB/JWT%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>https://onlyonemomo.github.io/2022/08/28/%E5%B7%A5%E5%85%B7%E7%B1%BB/JWT%E5%B7%A5%E5%85%B7%E7%B1%BB/</id>
    <published>2022-08-28T13:56:51.000Z</published>
    <updated>2022-08-28T14:13:38.938Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导语</strong>：在《娱乐至死》里面两个著名的预言：奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中。在互联网的世界里，我们恰恰走向了赫胥黎式的预言，有时候百度两小时，有效资讯五分钟。在工具类这个栏目，我想收集一些常用的Utils，以免书到用时方恨少的尴尬！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成jwt</span></span><br><span class="line"><span class="comment">     * 使用Hs256算法, 私匙使用固定秘钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secretKey jwt秘钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ttlMillis jwt过期时间(毫秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> claims    设置的信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">createJWT</span><span class="params">(String secretKey, <span class="type">long</span> ttlMillis, Map&lt;String, Object&gt; claims)</span> &#123;</span><br><span class="line">        <span class="comment">// 指定签名的时候使用的签名算法，也就是header那部分</span></span><br><span class="line">        <span class="type">SignatureAlgorithm</span> <span class="variable">signatureAlgorithm</span> <span class="operator">=</span> SignatureAlgorithm.HS256;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成JWT的时间</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">expMillis</span> <span class="operator">=</span> System.currentTimeMillis() + ttlMillis;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(expMillis);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置jwt的body</span></span><br><span class="line">        <span class="type">JwtBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> Jwts.builder()</span><br><span class="line">                <span class="comment">// 如果有私有声明，一定要先设置这个自己创建的私有的声明，这个是给builder的claim赋值，一旦写在标准的声明赋值之后，就是覆盖了那些标准的声明的</span></span><br><span class="line">                .setClaims(claims)</span><br><span class="line">                <span class="comment">// 设置签名使用的签名算法和签名使用的秘钥</span></span><br><span class="line">                .signWith(signatureAlgorithm, secretKey.getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                <span class="comment">// 设置过期时间</span></span><br><span class="line">                .setExpiration(exp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> builder.compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Token解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secretKey jwt秘钥 此秘钥一定要保留好在服务端, 不能暴露出去, 否则sign就可以被伪造, 如果对接多个客户端建议改造成多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token     加密后的token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Claims <span class="title function_">parseJWT</span><span class="params">(String secretKey, String token)</span> &#123;</span><br><span class="line">        <span class="comment">// 得到DefaultJwtParser</span></span><br><span class="line">        <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> Jwts.parser()</span><br><span class="line">                <span class="comment">// 设置签名的秘钥</span></span><br><span class="line">                .setSigningKey(secretKey.getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                <span class="comment">// 设置需要解析的jwt</span></span><br><span class="line">                .parseClaimsJws(token).getBody();</span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在《娱乐至死》里面两个著名的预言：奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中。在互联网的世界里，我们恰恰走向了赫胥黎式的预言，有时候百度两小时，有效资讯五分钟。在工具类这个栏目，我想收集一些常用的Utils，以免书到用时方恨少的尴尬！&lt;/p&gt;</summary>
    
    
    
    <category term="工具类" scheme="https://onlyonemomo.github.io/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
    
    <category term="Util" scheme="https://onlyonemomo.github.io/tags/Util/"/>
    
  </entry>
  
</feed>
