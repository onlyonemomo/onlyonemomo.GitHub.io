<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博客</title>
  
  <subtitle>世界好大，修行好难</subtitle>
  <link href="https://onlyonemomo.github.io/atom.xml" rel="self"/>
  
  <link href="https://onlyonemomo.github.io/"/>
  <updated>2022-09-04T06:18:54.256Z</updated>
  <id>https://onlyonemomo.github.io/</id>
  
  <author>
    <name>onlyone Mo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>008-java基础语法之集合</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/008-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%9B%86%E5%90%88/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/008-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%9B%86%E5%90%88/</id>
    <published>2022-09-03T15:11:56.000Z</published>
    <updated>2022-09-04T06:18:54.256Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、泛型"><a href="#1、泛型" class="headerlink" title="1、泛型"></a>1、泛型</h3><blockquote><p>集合，就是可以长度可以发生改变的数组实现<br>泛型： 用来指定集合存储的数据类型</p></blockquote><p><strong>Student类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>StudentTest</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentTest</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">            目标：掌握集合的概念。理解泛型的作用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    集合，就是可以长度可以发生改变的数组实现</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    泛型： 用来指定集合存储的数据类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//泛型就是用来指定我们集合存储的数据的类型</span></span><br><span class="line">        <span class="comment">//我想创建一个集合 ，可以用来保存字符串</span></span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        System.out.println(list);  <span class="comment">//[]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//我想创建一个集合 ，可以用来保存学生对象</span></span><br><span class="line">        ArrayList&lt;Student&gt; list2 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、成员方法"><a href="#2、成员方法" class="headerlink" title="2、成员方法"></a>2、成员方法</h3><h5 id="2-1-增-add"><a href="#2-1-增-add" class="headerlink" title="2.1 增~add"></a>2.1 增~add</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01_</span>添加 &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标：掌握如何使用集合保存元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        boolean add(E e) 将指定的元素追加到此列表的末尾。    【重点】</span></span><br><span class="line"><span class="comment">        void add(int index, E element) 在此列表中的指定位置插入指定的元素。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">a</span> <span class="operator">=</span> list.add(<span class="string">&quot;a&quot;</span>);      <span class="comment">//0</span></span><br><span class="line">        System.out.println(<span class="string">&quot;a:&quot;</span> + a);</span><br><span class="line">        list.add(<span class="string">&quot;b&quot;</span>); <span class="comment">//返回值都是为true,所以 意义不大，不接收了    1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  void add(int index, E element) 在此列表中的指定位置插入指定的元素。</span></span><br><span class="line">        <span class="comment">// 我想把 c 添加到第一个位置。</span></span><br><span class="line">        list.add(<span class="number">2</span>, <span class="string">&quot;c&quot;</span>);  <span class="comment">// 0 1  2  因为使用的时候需要考虑索引的越界问题</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;集合的元素:&quot;</span> + list);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-2-删-remove"><a href="#2-2-删-remove" class="headerlink" title="2.2 删~remove"></a>2.2 删~remove</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04_</span>删除 &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标： 掌握集合的删除元素的方法</span></span><br><span class="line"><span class="comment">            E remove(int index) 删除该列表中指定位置的元素。</span></span><br><span class="line"><span class="comment">            boolean remove(Object o)</span></span><br><span class="line"><span class="comment">            从列表中删除指定元素的第一个出现（如果存在）。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;a&quot;</span>);<span class="comment">// 0</span></span><br><span class="line">        list.add(<span class="string">&quot;b&quot;</span>);<span class="comment">// 1</span></span><br><span class="line">        list.add(<span class="string">&quot;c&quot;</span>);<span class="comment">// 2</span></span><br><span class="line">        list.add(<span class="string">&quot;d&quot;</span>);<span class="comment">// 3</span></span><br><span class="line">        list.add(<span class="string">&quot;a&quot;</span>);<span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// E remove(int index) 删除该列表中指定位置的元素。</span></span><br><span class="line">      <span class="comment">//  String s = list.remove(4);  //返回值没有太大意义， 所以 一般都不接。</span></span><br><span class="line">      <span class="comment">//  System.out.println(&quot;被删除的元素:&quot; + s);</span></span><br><span class="line">         <span class="comment">// boolean remove(Object o) 从列表中删除指定元素的第一个出现（如果存在）。</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> list.remove(<span class="string">&quot;aa&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;flag:&quot;</span> + flag);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;集合的元素:&quot;</span> + list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-3-改-set"><a href="#2-3-改-set" class="headerlink" title="2.3 改~set"></a>2.3 改~set</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03_</span>修改 &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标：掌握修改集合的元素方法</span></span><br><span class="line"><span class="comment">            E set(int index, E element)</span></span><br><span class="line"><span class="comment">            用指定的元素替换此列表中指定位置的元素。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;a&quot;</span>);<span class="comment">// 0</span></span><br><span class="line">        list.add(<span class="string">&quot;b&quot;</span>);<span class="comment">// 1</span></span><br><span class="line">        list.add(<span class="string">&quot;c&quot;</span>);<span class="comment">// 2</span></span><br><span class="line">        list.add(<span class="string">&quot;d&quot;</span>);<span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//我想把 d 修改成 dd</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> list.set(<span class="number">3</span>, <span class="string">&quot;dd&quot;</span>);   <span class="comment">//返回的是修改前的元素，一般我们也不接收。</span></span><br><span class="line">        System.out.println(<span class="string">&quot;修改前的元素：&quot;</span> + s);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果我想把b 改成 bb?</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-查-get"><a href="#2-4-查-get" class="headerlink" title="2.4 查~get"></a>2.4 查~get</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02_</span>获取 &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标：掌握如何从集合中获取元素</span></span><br><span class="line"><span class="comment">            E get(int index) 返回此列表中指定位置的元素。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;a&quot;</span>);<span class="comment">// 0</span></span><br><span class="line">        list.add(<span class="string">&quot;b&quot;</span>);<span class="comment">// 1</span></span><br><span class="line">        list.add(<span class="string">&quot;c&quot;</span>);<span class="comment">// 2</span></span><br><span class="line">        list.add(<span class="string">&quot;d&quot;</span>);<span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取索引为0的 元素 , 第一个元素</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> list.get(<span class="number">0</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;集合的第一个元素是:&quot;</span> + s1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取索引为1的 元素 ， 第二个元素</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> list.get(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;集合的第二个元素是:&quot;</span> + s2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;当前集合的元素是:&quot;</span> + list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、方法"><a href="#3、方法" class="headerlink" title="3、方法"></a>3、方法</h3><p><strong>Teacher类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>调用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;Teacher&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">23</span>);</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;李四&quot;</span>, <span class="number">33</span>);</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;王五&quot;</span>, <span class="number">28</span>);</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;赵六&quot;</span>, <span class="number">35</span>);</span><br><span class="line">        <span class="type">Teacher</span> <span class="variable">t5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>(<span class="string">&quot;田七&quot;</span>, <span class="number">29</span>);</span><br><span class="line">        list.add(t1);</span><br><span class="line">        list.add(t2);</span><br><span class="line">        list.add(t3);</span><br><span class="line">        list.add(t4);</span><br><span class="line">        list.add(t5);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用完方法之后，可以得到筛选之后的数据</span></span><br><span class="line">        ArrayList&lt;Teacher&gt; newList = getList(list);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; newList.size(); i++) &#123;</span><br><span class="line">            <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> newList.get(i);</span><br><span class="line">            System.out.println(t.getName() + <span class="string">&quot;...&quot;</span> + t.getAge());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*需求：定义一个方法，方法接收一个集合对象（泛型为Teacher），方法内部将年龄低于30的老师对象找出</span></span><br><span class="line"><span class="comment">            并存入新集合对象，方法返回新集合</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            目标：将年龄低于30的老师对象找出并存入新集合对象，方法返回新集合</span></span><br><span class="line"><span class="comment">            数据：需要有一个集合对象【包含很多的数据】</span></span><br><span class="line"><span class="comment">            思路：</span></span><br><span class="line"><span class="comment">                    1.定义方法，接收一个带有数据的集合</span></span><br><span class="line"><span class="comment">                    2.我们需要创建一个新的集合对象，用来保存符合条件的数据</span></span><br><span class="line"><span class="comment">                    3.遍历集合，获取每一个老师对象</span></span><br><span class="line"><span class="comment">                        3.1 获取老师的年龄，判断是否低于30岁</span></span><br><span class="line"><span class="comment">                        3.2 如果低于30岁，则把当前的老师对象保存到新集合中</span></span><br><span class="line"><span class="comment">                    4. 循环结束之后，返回新集合</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//1.定义方法，接收一个带有数据的集合</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Teacher&gt; <span class="title function_">getList</span><span class="params">(ArrayList&lt;Teacher&gt; aaa)</span> &#123;</span><br><span class="line">        <span class="comment">//2.我们需要创建一个新的集合对象，用来保存符合条件的数据</span></span><br><span class="line">        ArrayList&lt;Teacher&gt; newList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//3.遍历集合，获取每一个老师对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; aaa.size(); i++) &#123;</span><br><span class="line">            <span class="type">Teacher</span> <span class="variable">t</span> <span class="operator">=</span> aaa.get(i);</span><br><span class="line">            <span class="comment">//3.1 获取老师的年龄，判断是否低于30岁</span></span><br><span class="line">            <span class="keyword">if</span> (t.getAge() &lt; <span class="number">30</span>) &#123;</span><br><span class="line">                <span class="comment">//3.2 如果低于30岁，则把当前的老师对象保存到新集合中</span></span><br><span class="line">                newList.add(t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4. 循环结束之后，返回新集合</span></span><br><span class="line">        <span class="keyword">return</span> newList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>007-java基础语法之String类以及方法</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/007-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8BString%E7%B1%BB%E4%BB%A5%E5%8F%8A%E6%96%B9%E6%B3%95/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/007-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8BString%E7%B1%BB%E4%BB%A5%E5%8F%8A%E6%96%B9%E6%B3%95/</id>
    <published>2022-09-03T15:10:56.000Z</published>
    <updated>2022-09-04T06:18:47.877Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、String-类的成员方法"><a href="#1、String-类的成员方法" class="headerlink" title="1、String 类的成员方法"></a>1、String 类的成员方法</h3><h5 id="1-1-String之-split-字符串内容拆分"><a href="#1-1-String之-split-字符串内容拆分" class="headerlink" title="1.1 String之 split (字符串内容拆分)"></a>1.1 String之 split (字符串内容拆分)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标： 掌握字符串内容拆分的方法</span></span><br><span class="line"><span class="comment">            String[] split(String regex) 将此字符串按照给定regex拆分为多个字符串</span></span><br><span class="line"><span class="comment">        需求：已知邮箱账号是: 18366667873@163.com，使用字符串的方法，获取账号中的手机号码</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;18366667873@163.com&quot;</span>;</span><br><span class="line">    String[] strs = username.split(<span class="string">&quot;@&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; strs.length; i++) &#123;</span><br><span class="line">        System.out.println(strs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;手机号码为:&quot;</span> + strs[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;------------------------------&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;张三-23-广州&quot;</span>;</span><br><span class="line">    String[] ss = s.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ss.length; i++) &#123;</span><br><span class="line">        System.out.println(ss[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-String-之-length-获取字符串长度"><a href="#1-2-String-之-length-获取字符串长度" class="headerlink" title="1.2 String 之 length (获取字符串长度)"></a>1.2 String 之 length (获取字符串长度)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">            目标： 掌握获取字符串长度的方法</span></span><br><span class="line"><span class="comment">                int length() 返回此字符串的长度。</span></span><br><span class="line"><span class="comment">                需求：已知手机号码是: 18366667873，使用字符串的方法，判断输入的手机号码是否为11位</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">phoneNumber</span> <span class="operator">=</span> <span class="string">&quot;18366667873&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> phoneNumber.length();</span><br><span class="line">    System.out.println(<span class="string">&quot;length:&quot;</span> + length);</span><br><span class="line">    <span class="keyword">if</span> (length == <span class="number">11</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;手机号码为11位&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;手机号码长度不对&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-3-string-之-charAt-（获取指定索引的字符）"><a href="#1-3-string-之-charAt-（获取指定索引的字符）" class="headerlink" title="1.3 string 之 charAt （获取指定索引的字符）"></a>1.3 string 之 charAt （获取指定索引的字符）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标：掌握如何获取指定索引处的字符</span></span><br><span class="line"><span class="comment">            public char charAt(int index):   获取指定索引处的字符。(字符串的索引也是从0开始算)</span></span><br><span class="line"><span class="comment">       需求： 已知手机号码是: 18366667873，使用字符串的方法，获取字符串中前三个字符</span></span><br><span class="line"><span class="comment">         获取字符串中指定索引的字符的方法:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">phoneNumber</span> <span class="operator">=</span> <span class="string">&quot;18366667873&quot;</span>;</span><br><span class="line">    <span class="comment">//获取字符串索引为0的字符</span></span><br><span class="line">    <span class="type">char</span> <span class="variable">ch1</span> <span class="operator">=</span>  phoneNumber.charAt(<span class="number">0</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;字符串的第一个字符是:&quot;</span> + ch1);</span><br><span class="line">    <span class="comment">//获取字符串索引为1的字符</span></span><br><span class="line">    <span class="type">char</span> <span class="variable">ch2</span> <span class="operator">=</span> phoneNumber.charAt(<span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;字符串的第二个字符是:&quot;</span> + ch2);</span><br><span class="line">    <span class="comment">//我想获取手机号码最后的3</span></span><br><span class="line">    <span class="type">char</span> <span class="variable">ch3</span> <span class="operator">=</span> phoneNumber.charAt(<span class="number">10</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;手机号码的最后一个元素:&quot;</span> + ch3);</span><br><span class="line">    System.out.println(<span class="string">&quot;-----------判断这个手机号码是不是都是数字--------&quot;</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">            1. 遍历这个字符串</span></span><br><span class="line"><span class="comment">            2. 获取每一个字符</span></span><br><span class="line"><span class="comment">            3. 判断当前的字符是否是 数字  ===&gt;    每一个字符都可以看成是一个数字</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 1. 遍历这个字符串</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; phoneNumber.length(); i++) &#123;</span><br><span class="line">        <span class="comment">//2. 获取每一个字符</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> phoneNumber.charAt(i);</span><br><span class="line">        <span class="keyword">if</span>(ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count == <span class="number">11</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这个手机号码全都是数字&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这个手机号码有的位置不是数字&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-4-String-之-substring-字符串内容的截取"><a href="#1-4-String-之-substring-字符串内容的截取" class="headerlink" title="1.4 String 之 substring {字符串内容的截取}"></a>1.4 String 之 substring {字符串内容的截取}</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标：掌握字符串内容截取的方法</span></span><br><span class="line"><span class="comment">      截取字符串中一段内容的方法:</span></span><br><span class="line"><span class="comment">                 public String substring(int beginIndex):从指定索引开始截取字符串的所有内容</span></span><br><span class="line"><span class="comment">                 public String substring(int beginIndex,int endIndex):从beginIndex开始(包含)，截取到endIndex(不包含)</span></span><br><span class="line"><span class="comment">        需求：已知手机号码是: 18366667873，使用字符串的方法，屏蔽手机号码中间的四个数字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">phoneNUmber</span> <span class="operator">=</span> <span class="string">&quot;18366667873&quot;</span>;</span><br><span class="line">    <span class="comment">//从手机号码里面，截取前三位， 从索引为0截取到索引为3的位置</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">start</span> <span class="operator">=</span> phoneNUmber.substring(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;前三位:&quot;</span> + start);</span><br><span class="line">    <span class="comment">//从手机号码里面，截取后四位 ,从索引为7的位置开始截取后面的所有</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> phoneNUmber.substring(<span class="number">7</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;后四位:&quot;</span> + end);</span><br><span class="line">    <span class="comment">//实现手机号码的屏蔽</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> start + <span class="string">&quot;****&quot;</span> + end;</span><br><span class="line">    System.out.println(<span class="string">&quot;屏蔽之后的手机号码：&quot;</span> + str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-5-String-之-contains-字符串包含方法"><a href="#1-5-String-之-contains-字符串包含方法" class="headerlink" title="1.5 String 之 contains (字符串包含方法)"></a>1.5 String 之 contains (字符串包含方法)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标：掌握contains方法的作用</span></span><br><span class="line"><span class="comment">        已知邮箱账号是: 18366667873@163.com，使用字符串的方法，判断账号中是否包含@163</span></span><br><span class="line"><span class="comment">        判断字符串中是否包含指定内容的方法:</span></span><br><span class="line"><span class="comment">           public boolean contains(String str):判断字符串中是否包含指定的字符串</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;18366667873@163.com&quot;</span>;</span><br><span class="line">    <span class="comment">//判断账号中是否包含@163</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> username.contains(<span class="string">&quot;@163&quot;</span>);</span><br><span class="line">    System.out.println(result);<span class="comment">//有就返回true ，没有就返回false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-6-String-之-replace-字符串替换"><a href="#1-6-String-之-replace-字符串替换" class="headerlink" title="1.6 String 之 replace (字符串替换)"></a>1.6 String 之 replace (字符串替换)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    String replace(String oldStr, String replacement)</span></span><br><span class="line"><span class="comment">        草泥马的上单，一直带线，不来参团。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;草泥马的上单，一直带线，不来参团。&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> s.replace(<span class="string">&quot;草泥马&quot;</span> , <span class="string">&quot;****&quot;</span>);</span><br><span class="line">    System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-7-String-之-equals-字符串内容比较"><a href="#1-7-String-之-equals-字符串内容比较" class="headerlink" title="1.7 String 之 equals  (字符串内容比较)"></a>1.7 String 之 equals  (字符串内容比较)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        目标： 掌握实现字符串内容比较的方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            boolean equals(Object anObject) 将此字符串与指定对象进行比较。</span></span><br><span class="line"><span class="comment">            严格区分大小写</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入注册的账号&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">registerUsername</span> <span class="operator">=</span> sc.next();  <span class="comment">// 实际上就是给你创建一个新的字符串 -&gt; new</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;请输入登录的账号&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">loginUsername</span> <span class="operator">=</span> sc.next(); <span class="comment">// 实际上就是给你创建一个新的字符串 -&gt; new</span></span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> loginUsername.equals(registerUsername);</span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>equals 方法的细节</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//严格区分大小写</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;Abc&quot;</span>;</span><br><span class="line">    System.out.println(s1.equals(s2));</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;-------------&quot;</span>);</span><br><span class="line">    <span class="comment">//跟其他类型比较，一律返回false</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello&quot;</span>); <span class="comment">// hello</span></span><br><span class="line">    <span class="type">char</span>[] chs = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    System.out.println(s3.equals(chs));</span><br><span class="line">    <span class="comment">//双引号扩起来的内容 都是字符串对象。</span></span><br><span class="line">    System.out.println(<span class="string">&quot;123&quot;</span>.equals(<span class="number">123</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-8-字符常量池"><a href="#1-8-字符常量池" class="headerlink" title="1.8 字符常量池"></a>1.8 字符常量池</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        字符串的创建方式：</span></span><br><span class="line"><span class="comment">            1.直接赋值的方式， String s = &quot;xxxx&quot;;</span></span><br><span class="line"><span class="comment">                    创建在堆内存的常量池中。 如果常量池中不存在这个字符串，就会创建，如果有了，就会使用前面的。【共享使用】</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            2.通过构造方法创建字符串</span></span><br><span class="line"><span class="comment">                    创建在堆内存中。每一次都会开辟一块新的内存空间。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">              == 在这里比较的是地址值</span></span><br><span class="line"><span class="comment">                    如果是直接赋值的方式得到两个字符串，内容相等，则地址值相等。</span></span><br><span class="line"><span class="comment">                    如果是直接new的方式得到两个字符串，内容不管相等还是不相等，地址值都是不相等。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;广州&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;广州&quot;</span>;</span><br><span class="line">    <span class="comment">//通过构造方法创建对象</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;s1:&quot;</span> + s1);</span><br><span class="line">    System.out.println(<span class="string">&quot;s2:&quot;</span> + s2);</span><br><span class="line">    System.out.println(<span class="string">&quot;s3:&quot;</span> + s3);</span><br><span class="line">    System.out.println(<span class="string">&quot;s4:&quot;</span> + s4);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;---------------&quot;</span>);</span><br><span class="line">    <span class="comment">//比较的都是地址值 这里所有的字符串对象，都是代表一个内存地址值</span></span><br><span class="line">    System.out.println(s1 == s2);  <span class="comment">//true</span></span><br><span class="line">    System.out.println(s1 == s3); <span class="comment">// false</span></span><br><span class="line">    System.out.println(s3 == s4); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用 == 做比较</span><br><span class="line">    基本类型：比较的是数据值是否相同</span><br><span class="line">    引用类型：比较的是地址值是否相同</span><br><span class="line"></span><br><span class="line">字符串是引用类型，它使用==做比较时比较的是地址值</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、jvm为了提升性能和减少内存开销，避免字符的重复创建，其维护了一块特殊的内存空间，即字符串常量池，用来存储字符串常量。</span><br><span class="line">    </span><br><span class="line"><span class="number">2</span>、 使用String直接赋值: String str=“abc”:可能创建一个或者不创建对象，如果”abc”在字符串池中不存在，会在java字符串池中创建一个String对象(”abc”)，然后str指向这个内存地址，无论以后用这种方式创建多少个值为”abc”的字符串对象，始终只有一个内存地址被分配。</span><br><span class="line">    </span><br><span class="line"><span class="number">3</span>、使用<span class="keyword">new</span> <span class="title class_">String</span>()赋值: String str=newString(“abc”);至少会创建一个对象，也有可能创建两个。因为用到<span class="keyword">new</span>关键字，肯定会在堆中创建一个String对象，如果字符池中已经存在”abc”，则不会在字符串池中创建一个String对象，如果不存在，则会在字符串常量池中也创建一个对象。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、如果一个字符串采用拼接的方式，并且拼接的内容都是字面量的话，那么会自动将字符串先拼接完再赋值，如果常量池中已经有了拼接完成之后的字面量，那么此变量的值的地址就是常量池中的完整字符串的地址。</span><br><span class="line">    </span><br><span class="line">如果是变量和字面量拼接就会产生<span class="keyword">new</span> 一个新的对象【它底层使用的是StringBuilder进行字符串拼接的，拼接完成后会使用<span class="keyword">new</span>关键字生成并返回一个新的String对象。】</span><br></pre></td></tr></table></figure><h3 id="2、StringBuilder"><a href="#2、StringBuilder" class="headerlink" title="2、StringBuilder"></a>2、StringBuilder</h3><h5 id="2-1-字符串拼接"><a href="#2-1-字符串拼接" class="headerlink" title="2.1 字符串拼接"></a>2.1 字符串拼接</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;b&quot;</span>; </span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;c&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> s1 + s2+s;</span><br><span class="line">        System.out.println(Arrays.toString(s.getBytes(StandardCharsets.UTF_8)));<span class="comment">//[B@4eec7777</span></span><br><span class="line">        System.out.println(Arrays.toString(s1.getBytes(StandardCharsets.UTF_8)));<span class="comment">//[B@3b07d329</span></span><br><span class="line">        System.out.println(Arrays.toString(s2.getBytes(StandardCharsets.UTF_8)));<span class="comment">//[B@41629346</span></span><br><span class="line">        System.out.println(Arrays.toString(s3.getBytes(StandardCharsets.UTF_8)));<span class="comment">//[B@404b9385</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、当把三个变量拼接的结果赋值给s3，此时的s3是开辟了新的内存空间的，存放了三个字符串拼接结果的临时变量，最终这个临时变量把内存空间给了s3，也就是s3又有了一个内存空间。整个流程下来，一共需要开辟<span class="number">4</span>个内存空间，对于内存的消耗很大，因此不适合用在实际开发中。（是New 一个新对象出来）</span><br><span class="line">    </span><br><span class="line"><span class="number">2</span>、String 是不可变的对象, 因此在每次对 String 类型进行改变的时候其实都等同于生成了一个新的 String 对象</span><br></pre></td></tr></table></figure><h5 id="2-2-StringBuilder-输出的是内容"><a href="#2-2-StringBuilder-输出的是内容" class="headerlink" title="2.2 StringBuilder 输出的是内容"></a>2.2 StringBuilder 输出的是内容</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标： 了解StringBuilder的构造方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            StringBuilder()</span></span><br><span class="line"><span class="comment">            StringBuilder(String str)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">sb1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    System.out.println(<span class="string">&quot;sb1:&quot;</span> + sb1);<span class="comment">//这里输出的也是内容</span></span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;广州&quot;</span>;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">sb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(str);</span><br><span class="line">    System.out.println(<span class="string">&quot;sb2:&quot;</span> + sb2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-3-拼接"><a href="#2-3-拼接" class="headerlink" title="2.3 拼接"></a>2.3 拼接</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">            目标： 掌握StringBuilder的拼接方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                append(任意类型的数据);  添加任意类型的数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                在拼接的过程中，不会创建新的对象。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    System.out.println(<span class="string">&quot;拼接前:&quot;</span> + sb);</span><br><span class="line">    sb.append(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    sb.append(<span class="number">123</span>);</span><br><span class="line">    sb.append(<span class="literal">true</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;拼接后:&quot;</span> + sb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-转换成字符串"><a href="#2-4-转换成字符串" class="headerlink" title="2.4 转换成字符串"></a>2.4 转换成字符串</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      String  toString() : 实现把StringBuilder 转化为String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    System.out.println(<span class="string">&quot;拼接前:&quot;</span> + sb);</span><br><span class="line">    sb.append(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    sb.append(<span class="number">123</span>);</span><br><span class="line">    sb.append(<span class="literal">true</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;拼接后:&quot;</span> + sb);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不能直接把StringBuilder赋值给String</span></span><br><span class="line">    <span class="comment">//String s = sb;</span></span><br><span class="line">    <span class="comment">//我们需要把StringBuilder转化为String</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">    System.out.println(<span class="string">&quot;转化之后的字符串:&quot;</span> + s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-5-反转"><a href="#2-5-反转" class="headerlink" title="2.5 反转"></a>2.5 反转</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">            reverse(); 可以实现把StringBuilder的内容实现反转</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//把 abc 反转</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="comment">//要把String先转化为StringBuilder</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(s);</span><br><span class="line">        <span class="comment">//因为StringBuilder里面有个方法，可以实现直接把内容反转</span></span><br><span class="line">        sb.reverse();</span><br><span class="line">        <span class="comment">//再把StringBuilder转化为String</span></span><br><span class="line">        s = sb.toString();</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、小结"><a href="#3、小结" class="headerlink" title="3、小结"></a>3、小结</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>知道API帮助文档的作用，我们可以通过它去学习JDK给我们提供的各种类</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>String:</span><br><span class="line">        字符串内容的拆分： String[] split(String regex);</span><br><span class="line">        字符串的长度:  <span class="type">int</span> <span class="title function_">length</span><span class="params">()</span>;</span><br><span class="line">        获取指定索引的字符:   <span class="type">char</span>  <span class="title function_">charAt</span><span class="params">(<span class="type">int</span> index)</span>;</span><br><span class="line">        字符串的截取：</span><br><span class="line">                  从指定索引截取后面所有的内容： String  <span class="title function_">substring</span><span class="params">(<span class="type">int</span> index)</span>;</span><br><span class="line">                  从指定索引处截取到另外一个索引【不包含这个索引】:</span><br><span class="line">                        String  <span class="title function_">substring</span><span class="params">(<span class="type">int</span> beginIndex , <span class="type">int</span> endIndex)</span></span><br><span class="line">        字符串的包含：  <span class="type">boolean</span>  <span class="title function_">contains</span><span class="params">(String str)</span></span><br><span class="line">        字符串的比较：  <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span></span><br><span class="line">        字符串的替换:  String  <span class="title function_">replace</span><span class="params">(String oldStr , String newStr)</span>;</span><br><span class="line"></span><br><span class="line">        创建字符串的区别：</span><br><span class="line">                <span class="number">1.</span> 直接赋值的方式。字符串内容如果相同，地址值就是一样</span><br><span class="line">                <span class="number">2.</span> 通过构造方法创建，字符串的内容不管相同还是不相同，地址都是不一样</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>StringBuilder:</span><br><span class="line">        作用：提供字符串拼接的效率</span><br><span class="line"></span><br><span class="line">        构造方法：</span><br><span class="line">                StringBuilder()</span><br><span class="line">                StringBuilder(String str);</span><br><span class="line">        成员方法：</span><br><span class="line">                append(任意类型的数据);</span><br><span class="line">                toString(); 实现把StringBuilder转化为String</span><br><span class="line">                <span class="title function_">reverse</span><span class="params">()</span>; 实现把StringBuilder的内容反转</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>006-java基础语法之面向对象</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/006-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/006-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2022-09-03T15:09:56.000Z</published>
    <updated>2022-09-04T06:18:41.020Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、类和对象"><a href="#1、类和对象" class="headerlink" title="1、类和对象"></a>1、类和对象</h3><blockquote><p>类：【类具有共同属性 以及行为的实物的抽象】<br>属性 通过成员变量，定义在类中方法外的变量  数据类型 变量名;<br>行为 通过成员方法，跟我们之前定义方法比较，少了static</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class 类名&#123;</span><br><span class="line">    成员变量</span><br><span class="line">        成员方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>对象： 真实存在的实体</p><p>创建对象<br>    <strong>类名 对象名 &#x3D; new 类名();</strong><br>    <strong>成员变量：</strong><br>            对象名.属性名<br>    <strong>成员方法：</strong><br>            对象名.方法名(参数);</p></blockquote><h5 id="1-1-案例："><a href="#1-1-案例：" class="headerlink" title="1.1 案例："></a>1.1 案例：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类就相当于是一张设计图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        1. 先创建一个类</span></span><br><span class="line"><span class="comment">        2. 提供属性    数据类型 变量名;[成员变量，类中方法外]</span></span><br><span class="line"><span class="comment">        3. 提供行为    跟我们之前定义方法比较，少了static[成员方法]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;  <span class="comment">//Student  学生</span></span><br><span class="line">    <span class="comment">//姓名</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//学习</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span> &#123;  <span class="comment">//study 学习</span></span><br><span class="line">        System.out.println(<span class="string">&quot;键盘敲烂 ， 年薪百万&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentTest</span> &#123; <span class="comment">// 学生的测试类</span></span><br><span class="line">    <span class="comment">//作用 ： 创建对象 使用对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//s 就是一个对象。它就是Java世界中的一个学生</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">        s.age = <span class="number">23</span>;</span><br><span class="line">        System.out.println(s.name + <span class="string">&quot;...&quot;</span> + s.age);</span><br><span class="line">        s.study();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s2.name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">        s2.age = <span class="number">24</span>;</span><br><span class="line">        System.out.println(s2.name + <span class="string">&quot;...&quot;</span> + s2.age);</span><br><span class="line">        s2.study();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2、成员变量和局部变量"><a href="#2、成员变量和局部变量" class="headerlink" title="2、成员变量和局部变量"></a>2、成员变量和局部变量</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">                成员变量                    局部变量</span><br><span class="line">定义位置：        类中方法外                  方法内部或者方法参数列表位置</span><br><span class="line">内存的位置：      堆内存                      栈内存</span><br><span class="line">生命周期：        随着对象的创建而创建          随着方法的调用而创建，随着方法的消失而消失</span><br><span class="line">                随着对象的消失而消失</span><br><span class="line">初始化值：         有                         没有</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    成员变量：定义在类中方法外</span></span><br><span class="line"><span class="comment">    局部变量：定义方法里面，或者方法参数列表</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(String phoneNumber)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a;</span><br><span class="line">        <span class="comment">//   System.out.println(a);</span></span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3、数据的安全性"><a href="#3、数据的安全性" class="headerlink" title="3、数据的安全性"></a>3、数据的安全性</h3><blockquote><p>private : 修饰成员的特点，只能在本类中访问<br>            提供 set 方法，修改&#x2F;赋值<br>            提供 get 方法，给别的类获取值</p></blockquote><h3 id="4、this-的使用"><a href="#4、this-的使用" class="headerlink" title="4、this 的使用"></a>4、this 的使用</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span> 使用原因：成员变量和 局部变量同名的时候，跟进就近原则，方法里面的变量 代表的是 局部变量</span><br><span class="line">             为了区分开 同名的成员变量和 局部变量，我们使用<span class="keyword">this</span>.</span><br><span class="line">             <span class="keyword">this</span> 修饰的变量 代表 类中的成员变量</span><br></pre></td></tr></table></figure><h3 id="5、构造方法"><a href="#5、构造方法" class="headerlink" title="5、构造方法"></a>5、构造方法</h3><blockquote><p>构造方法:<br>    1.系统会默认给我们提供一个无参构造，如果你写了，系统不给你提供了<br>    2.我们建议，你写构造方法的时候，需要提供无参和 满参构造<br>    3.只能new的时候去调用构造方法，不能手动去调用<strong>【不能通过对象去调用】</strong></p></blockquote><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">构造方法：</span><br><span class="line">    权限修饰符  类名()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a. 方法名和类名一致</span><br><span class="line">    b. 没有<span class="keyword">void</span> 也没有其他的返回值类型</span><br><span class="line">    c. 也没有<span class="keyword">return</span></span><br></pre></td></tr></table></figure><blockquote><p>构造方法的作用 : 创建对象  <strong>初始化类的对象，并返回对象的地址</strong>  ， 有参构造的作用就是在创建对象的同时去给<strong>成员变量进行赋值</strong>。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    String name=<span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        name=<span class="string">&quot;李四&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        Person p1=<span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.show(); <span class="comment">//李四</span></span><br><span class="line">        Person p2=<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        p2.show();<span class="comment">//王五</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、案例小节练习"><a href="#6、案例小节练习" class="headerlink" title="6、案例小节练习"></a>6、案例小节练习</h3><blockquote><p>1.私有所有的成员变量<br>2.给所有的成员变量提供对应 get&#x2F; set方法<br>3.给类提供无参 以及 满参构造</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//无参 + set方法的</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        s.setAge(<span class="number">23</span>);</span><br><span class="line">        System.out.println(s.getName() + <span class="string">&quot;...&quot;</span> + s.getAge());</span><br><span class="line">        <span class="comment">//使用满参创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李四&quot;</span> , <span class="number">24</span>);</span><br><span class="line">        System.out.println(s2.getName() + <span class="string">&quot;....&quot;</span> + s2.getAge());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>005-java基础语法之方法</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/005-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E6%96%B9%E6%B3%95/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/005-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E6%96%B9%E6%B3%95/</id>
    <published>2022-09-03T15:08:56.000Z</published>
    <updated>2022-09-04T06:18:35.181Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、方法的定义"><a href="#1、方法的定义" class="headerlink" title="1、方法的定义"></a>1、方法的定义</h3><blockquote><p>方法是一种语法结构，它可以把一段代码封装成一个功能，以方便重复调用。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a 第一个整数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b 第二个整数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回两个数字中较大的一个数字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> a &gt; b ? a : b;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、方法的格式"><a href="#2、方法的格式" class="headerlink" title="2、方法的格式"></a>2、方法的格式</h3><h5 id="2-1-方法的格式一"><a href="#2-1-方法的格式一" class="headerlink" title="2.1 方法的格式一"></a>2.1 方法的格式一</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标： 需要大家掌握方法的定义的格式，以及调用格式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                格式：</span></span><br><span class="line"><span class="comment">                        public static void 方法名()&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                        &#125;</span></span><br><span class="line"><span class="comment">                 调用：</span></span><br><span class="line"><span class="comment">                        方法名();</span></span><br><span class="line"><span class="comment">                注意，方法写好之后，需要调用才能执行。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            1. 方法定义之后，需要去调用才能执行。</span></span><br><span class="line"><span class="comment">            2. 方法定义 需要放在方法外面</span></span><br><span class="line"><span class="comment">            3. 方法到底有什么用？</span></span><br><span class="line"><span class="comment">                    方法主要是为了抽取相同逻辑的代码。可以简化我们的代码，因为我们只需要写一次就可以多次使用。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    isEvenNumber();</span><br><span class="line">    isEvenNumber();</span><br><span class="line">    isEvenNumber();</span><br><span class="line">    isEvenNumber();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//需求： 定义一个方法，实现判断一个数字是奇数还是偶数，如果是奇数，则输出&quot;奇数&quot;反之，输出 &quot;偶数&quot;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">isEvenNumber</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这里调用了方法&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;偶数&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;奇数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-2-方法的格式二"><a href="#2-2-方法的格式二" class="headerlink" title="2.2 方法的格式二"></a>2.2 方法的格式二</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">目标：  掌握带参数的方法的定义格式，以及调用格式  ,弄清楚有参数的好处</span></span><br><span class="line"><span class="comment">public static void 方法名(数据类型 变量名, 数据类型 变量名... )&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">调用格式：  方法名(值 , 值...);</span></span><br><span class="line"><span class="comment">好处：</span></span><br><span class="line"><span class="comment">让我们方法更加灵活，增强方法的通用性。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    isEvenNumber2(<span class="number">10</span>);</span><br><span class="line">    isEvenNumber2(<span class="number">15</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">    isEvenNumber2(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">isEvenNumber2</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;偶数&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;奇数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-3-方法的格式三"><a href="#2-3-方法的格式三" class="headerlink" title="2.3 方法的格式三"></a>2.3 方法的格式三</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标：</span></span><br><span class="line"><span class="comment">            掌握带返回值方法的定义的格式以及调用方式，理解返回值的作用</span></span><br><span class="line"><span class="comment">            格式：</span></span><br><span class="line"><span class="comment">                    public static 数据类型 方法名(数据类型 变量名 ,数据类型 变量名....)&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                        return 数据;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">           调用格式：</span></span><br><span class="line"><span class="comment">                    方法名(值);     不推荐，因为这样做拿不到方法给你返回的数据</span></span><br><span class="line"><span class="comment">                    数据类型 变量名 = 方法名(值);      推荐使用。因为我们调用完方法之后，可以拿到方法返回的数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         意义： 我们需要根据一个方法生成结果，用来组织另外一段代码逻辑</span></span><br><span class="line"><span class="comment">                【如果调用方法的地方需要拿到自定义方法的结果，就返回】</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum1</span> <span class="operator">=</span> add(<span class="number">90</span>, <span class="number">100</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum2</span> <span class="operator">=</span> add(<span class="number">90</span>, <span class="number">90</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> sum1 + sum2;</span><br><span class="line">    System.out.println(sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//任务一：计算两个小组的总成绩</span></span><br><span class="line"><span class="comment">//1. 在方法里面 添加上 return 数据;  数据 -&gt; 你需要返回的数据</span></span><br><span class="line"><span class="comment">//2. 把void 改成这个数据对应的类型</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> a + b;</span><br><span class="line">    System.out.println(sum);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、方法的注意事项"><a href="#3、方法的注意事项" class="headerlink" title="3、方法的注意事项"></a>3、方法的注意事项</h3><blockquote><p>return 的作用：程序到 return 就结束整个方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    test();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//   return; //因为方法到这里就已经结束了</span></span><br><span class="line">    <span class="comment">//  int a = 10;   //Unreachable statement 不能到达声明</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;方法结束了&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>语法完整性</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    test();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//语法完整性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//不管走的是if 还是 else 都会返回一个数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">test2</span><span class="params">( <span class="type">int</span> a )</span>&#123;</span><br><span class="line">    <span class="comment">/*    if(a &gt;= 10)&#123;</span></span><br><span class="line"><span class="comment">            return true;</span></span><br><span class="line"><span class="comment">        &#125;else &#123;</span></span><br><span class="line"><span class="comment">            return false;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">    <span class="comment">//Missing return statement  缺少一个返回值的声明</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">1.</span>方法的形参可以是基本类型和引用类型</span><br><span class="line">&gt;<span class="number">2.</span>方法的返回值可以是基本类型，也可以是引用类型</span><br><span class="line">&gt;<span class="number">3.</span>方法形参如果是一个数组，接收的实参是这个数组的地址</span><br><span class="line">&gt;<span class="number">4.</span>方法内部对参数数组的元素进行更改后，不用返回这个数组</span><br><span class="line"></span><br><span class="line">&gt;数据类型：</span><br><span class="line">   基本数据类型：</span><br><span class="line">   <span class="type">byte</span> <span class="type">short</span> <span class="type">char</span> <span class="type">int</span> <span class="type">long</span> <span class="type">float</span> <span class="type">double</span> <span class="type">boolean</span></span><br><span class="line"></span><br><span class="line">   引用数据类型：</span><br><span class="line">   数组，类，接口...</span><br><span class="line"></span><br><span class="line">   基本数据类型，变量名代表的就是具体的值</span><br><span class="line">   引用数据类型，变量名代表的是一个 内存地址 ，它没有具体的值，它用的是别人的。</span><br></pre></td></tr></table></figure></blockquote><h3 id="4、方法重载"><a href="#4、方法重载" class="headerlink" title="4、方法重载"></a>4、方法重载</h3><blockquote><p>方法重载定义：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个类中，可以存在多个同名的方法。但是 要求，参数列表不同【参数的个数不同，类型不同】</span><br><span class="line">我们把这些方法的关系，称之为 ：  方法重载。</span><br><span class="line">JVM 在调用方法的时候，会根据参数的类型和个数对应去调用方法， 跟返回值类型没有关系</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//   method(10 ,20);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// sum(10 ,20 , 30);</span></span><br><span class="line">    sum(<span class="number">13.14</span> , <span class="number">5.2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a , <span class="type">int</span> b)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了两个整数的求和方法&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sum</span><span class="params">(<span class="type">double</span> a , <span class="type">double</span> b)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了两个小数的求和方法&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a , <span class="type">int</span> b , <span class="type">int</span> c)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;执行了三个整数的求和方法&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、参数传递"><a href="#5、参数传递" class="headerlink" title="5、参数传递"></a>5、参数传递</h3><blockquote><p>1、对于基本数据类型的参数，形式参数的改变，不影响实际参数的值<br>2、引用数据类型的参数，形式参数的改变，会影响实际参数值的变化</p></blockquote><h5 id="5-1-重点"><a href="#5-1-重点" class="headerlink" title="5.1 重点"></a>5.1 重点</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    showArray(arr, num);</span><br><span class="line">    System.out.println(<span class="string">&quot;arr[2]的结果是:&quot;</span>+arr[<span class="number">2</span>]);   <span class="comment">//6</span></span><br><span class="line">    System.out.println(<span class="string">&quot;num的结果是：&quot;</span>+num);        <span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showArray</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> num)</span> &#123;</span><br><span class="line">    arr[<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line">    num = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、综合练习"><a href="#6、综合练习" class="headerlink" title="6、综合练习"></a>6、综合练习</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        定义返回值类型为 int 类型，名为 getScore(int[] arr)的静态方法，方法内完成：获取指定数</span></span><br><span class="line"><span class="comment">        组 arr 中大于平均值的元素的个数，并返回。</span></span><br><span class="line"><span class="comment">            目标： 返回大于数组平均值的元素的个数</span></span><br><span class="line"><span class="comment">            数据： 数组</span></span><br><span class="line"><span class="comment">            思路：</span></span><br><span class="line"><span class="comment">                    1. 需要求出平均值  ==&gt;   平均值 =  总和 / 总个数</span></span><br><span class="line"><span class="comment">                        1.1 需要求和 -&gt;</span></span><br><span class="line"><span class="comment">                            a. 在循环外定义一个 int sum  = 0 用来接受和</span></span><br><span class="line"><span class="comment">                            b. 循环里面  sum += 要求的元素</span></span><br><span class="line"><span class="comment">                            c. 循环结束 sum 即为和</span></span><br><span class="line"><span class="comment">                        1.2</span></span><br><span class="line"><span class="comment">                            int avg = sum / arr.length;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    2. 遍历数组，统计大于平均值的元素的个数</span></span><br><span class="line"><span class="comment">                        2.1 统计</span></span><br><span class="line"><span class="comment">                            a. 需要在循环外定义一个int count = 0; 用来计数</span></span><br><span class="line"><span class="comment">                            b. 遍历数组，用每一个元素和 平均值比较，如果大于平均值 count++;</span></span><br><span class="line"><span class="comment">                            c. 循环结束 count即为符合条件的个数</span></span><br><span class="line"><span class="comment">                    3. 返回count</span></span><br><span class="line"><span class="comment">                    */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        定义 main 方法，方法内完成：</span></span><br><span class="line"><span class="comment">            1）.定义一个长度为 5 的 int 数组 arr</span></span><br><span class="line"><span class="comment">            2）.使用随机数生成 5 个范围为 1-99 的数字存入 arr 中（包含 1 和 99），之后打印数组</span></span><br><span class="line"><span class="comment">            3）. 调用 getScore(int[] arr)方法 ,传递 arr，获取方法返回值并在控制台打印输出该返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//定义一个长度为 5 的 int 数组 arr</span></span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">    <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        arr[i] = r.nextInt(<span class="number">99</span>) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> getScore(arr);</span><br><span class="line">    System.out.println(<span class="string">&quot;大于平均值的元素个数是:&quot;</span> + count);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getScore</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">    <span class="comment">// a. 在循环外定义一个 int sum  = 0 用来接受和</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// b. 循环里面  sum += 要求的元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        sum += arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//需要求出平均值</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">avg</span> <span class="operator">=</span> sum / arr.length;</span><br><span class="line">    System.out.println(<span class="string">&quot;平均值是:&quot;</span> + avg);</span><br><span class="line">    <span class="comment">//  2. 遍历数组，统计大于平均值的元素的个数</span></span><br><span class="line">    <span class="comment">// a. 需要在循环外定义一个int count = 0; 用来计数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// b. 遍历数组，用每一个元素和 平均值比较，如果大于平均值 count++;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="comment">//如果大于平均值 count++;</span></span><br><span class="line">        <span class="keyword">if</span>(arr[i] &gt; avg)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//c. 循环结束 count即为符合条件的个数</span></span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>004-java基础语法之数组</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/004-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E6%95%B0%E7%BB%84/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/004-java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E6%95%B0%E7%BB%84/</id>
    <published>2022-09-03T15:07:56.000Z</published>
    <updated>2022-09-04T06:18:28.387Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、数组的定义"><a href="#1、数组的定义" class="headerlink" title="1、数组的定义"></a>1、数组的定义</h3><blockquote><p>数组的定义，实际上就是一次性定义多个变量<br>作用：用来存储【多个】相同数据类型的数据。<br>数组的格式：数据类型[]  数组名</p></blockquote><h3 id="2、数组的动态初始化"><a href="#2、数组的动态初始化" class="headerlink" title="2、数组的动态初始化"></a>2、数组的动态初始化</h3><blockquote><p>数组的动态初始化: 数据类型[] 数组名  &#x3D;  new 数据类型[长度];</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">动态初始化：  在创建数组时候，指定数组的长度，不指定元素。元素由系统默认赋值</span><br><span class="line">【</span><br><span class="line">整数-&gt; <span class="number">0</span></span><br><span class="line">小数 -&gt; <span class="number">0.0</span></span><br><span class="line">字符 -&gt; 码值为<span class="number">0</span></span><br><span class="line">布尔 -&gt; <span class="literal">false</span></span><br><span class="line">引用数据类型 -&gt; <span class="literal">null</span></span><br><span class="line">】</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//需求： 定义一个可以保存3个整数的数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//数据类型[] 数组名  =  new 数据类型[长度];</span></span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">    System.out.println(arr); <span class="comment">//[I@776ec8df</span></span><br><span class="line">    System.out.println(<span class="string">&quot;--------------练习---------------&quot;</span>);</span><br><span class="line">    <span class="comment">//定义一个可以保存5个小数的数组</span></span><br><span class="line">    <span class="comment">//定义一个可以保存3个字符串的数组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、数组元素的访问"><a href="#3、数组元素的访问" class="headerlink" title="3、数组元素的访问"></a>3、数组元素的访问</h3><blockquote><p>数组的元素：<br>(1)数组名[索引]  索引从0开始<br>(2)数组名[索引] 你可以理解为是一个特殊的变量名</p></blockquote><p><code>元素： 数组中定义的变量</code><br><code>索引【下标】： 给数组的元素进行空间的编号</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//创建一个可以保存3个整数的数组</span></span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">    System.out.println(arr); <span class="comment">//内存地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问数组的第一个元素</span></span><br><span class="line">    System.out.println(arr[<span class="number">0</span>]); <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问数组的第二个元素</span></span><br><span class="line">    System.out.println(arr[<span class="number">1</span>]); <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//访问数组的第三个元素</span></span><br><span class="line">    System.out.println(arr[<span class="number">2</span>]); <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改元素的值</span></span><br><span class="line">    arr[<span class="number">0</span>] = <span class="number">10</span>; <span class="comment">// 就是把10保存到索引为0的元素中</span></span><br><span class="line">    arr[<span class="number">1</span>] = <span class="number">20</span>; <span class="comment">// 就是把20保存到索引为1的元素中</span></span><br><span class="line">    arr[<span class="number">2</span>] = <span class="number">30</span>; <span class="comment">// 就是把30保存到索引为2的元素中</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出修改之后的元素</span></span><br><span class="line">    System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、数组静态初始化"><a href="#4、数组静态初始化" class="headerlink" title="4、数组静态初始化"></a>4、数组静态初始化</h3><blockquote><p>静态初始化 ： 在创建的数组的时候，指定数组的元素，长度由系统去计算</p></blockquote><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">完整格式：  数据类型<span class="comment">[]</span> 数组名 = new 数据类型<span class="comment">[]</span>&#123;元素, 元素,.....&#125;;</span><br><span class="line">简化格式：  数据类型<span class="comment">[]</span> 数组名 = &#123;元素, 元素,.....&#125;;  -&gt; 推荐使用</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//数据类型[] 数组名 = new 数据类型[]&#123;元素, 元素,.....&#125;;</span></span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[] arr2 = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line">    System.out.println(arr2); <span class="comment">//[I@776ec8df</span></span><br><span class="line">    <span class="comment">//访问数组的第一个元素</span></span><br><span class="line">    System.out.println(arr2[<span class="number">0</span>]);<span class="comment">//11</span></span><br><span class="line">    <span class="comment">//访问数组的第二个元素</span></span><br><span class="line">    System.out.println(arr2[<span class="number">1</span>]);<span class="comment">//22</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、数组内存"><a href="#5、数组内存" class="headerlink" title="5、数组内存"></a>5、数组内存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">内存：</span><br><span class="line">    栈        方法运行的内存， 也包含局部变量</span><br><span class="line">    堆        <span class="keyword">new</span>出来的数据，而且有一个地址值</span><br><span class="line">    方法区     class文件加载进去的内存空间</span><br><span class="line">    本地方法栈</span><br><span class="line">    寄存器java</span><br></pre></td></tr></table></figure><p><strong>同一个内存，修改内存则一并修改</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        多个人 用的是同一个东西，那么只要有一个人改变，另外一个人看到也是被改变。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        多个数组指向同一个地址，任意一个数组对象去改变数组的里面的数据，另外</span></span><br><span class="line"><span class="comment">        一个数组看到的也是被改变的数据。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>&#125;;</span><br><span class="line">    <span class="type">int</span>[] arr2 = arr;</span><br><span class="line"></span><br><span class="line">    System.out.println(arr);</span><br><span class="line">    System.out.println(arr2);</span><br><span class="line"></span><br><span class="line">    arr2[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">    System.out.println(arr[<span class="number">0</span>]); <span class="comment">//  100  11</span></span><br><span class="line">    System.out.println(arr2[<span class="number">0</span>]); <span class="comment">// 100</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    arr[<span class="number">1</span>] = <span class="number">1000</span>;</span><br><span class="line">    System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">    System.out.println(arr2[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>数据类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">数据类型：</span><br><span class="line">    基本数据类型：</span><br><span class="line">    <span class="type">byte</span> <span class="type">short</span> <span class="type">char</span> <span class="type">int</span> <span class="type">long</span> <span class="type">float</span> <span class="type">double</span> <span class="type">boolean</span></span><br><span class="line"></span><br><span class="line">    引用数据类型：</span><br><span class="line">    数组，类，接口...</span><br><span class="line"></span><br><span class="line">    基本数据类型，变量名代表的就是具体的值</span><br><span class="line">    引用数据类型，变量名代表的是一个 内存地址 ，它没有具体的值，它用的是别人的。</span><br></pre></td></tr></table></figure><h3 id="6、数组常见问题"><a href="#6、数组常见问题" class="headerlink" title="6、数组常见问题"></a>6、数组常见问题</h3><blockquote><p>1.数组的越界异常(ArrayIndexOutOfBoundsException)<br>2.空指针异常(NullPointerException)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        1.数组的越界异常(ArrayIndexOutOfBoundsException)</span></span><br><span class="line"><span class="comment">            因为你访问的索引，超过当前数组的索引范围[0, 数组长度 -1]</span></span><br><span class="line"><span class="comment">        2.空指针异常(NullPointerException)</span></span><br><span class="line"><span class="comment">            如果当前的数组指向null，就不能继续访问了，强行访问就会报错</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">11</span> ,<span class="number">22</span> ,<span class="number">33</span>&#125;; <span class="comment">//3个  索引从0开始，最大的索引为2</span></span><br><span class="line">    System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//System.out.println(arr[3]);</span></span><br><span class="line"></span><br><span class="line">    arr = <span class="literal">null</span>;</span><br><span class="line">    System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7、数组操作"><a href="#7、数组操作" class="headerlink" title="7、数组操作"></a>7、数组操作</h3><h5 id="7-1-数组遍历"><a href="#7-1-数组遍历" class="headerlink" title="7.1 数组遍历"></a>7.1 数组遍历</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        数组名.length 可以直接获取到当前数组的长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>&#125;;</span><br><span class="line">    <span class="comment">//循环之前的遍历 ,可以获取每一个值，但是，数据量大的时候，这个方式就不可取了</span></span><br><span class="line">    System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;----------使用循环的方式改进代码----------&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="comment">//用i来替代上面的索引</span></span><br><span class="line">        System.out.println(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;arr的长度：&quot;</span> + arr.length);</span><br><span class="line">    <span class="comment">//数组遍历的快捷键</span></span><br><span class="line">    <span class="comment">//数组名.fori</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.println(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;------------反转------------&quot;</span>);</span><br><span class="line">    <span class="comment">//数组名.forr</span></span><br><span class="line">    <span class="comment">//因为索引是从0开始的，所以，数组的最大索引 为 数组.length - 1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> arr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        System.out.println(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-2-数组求最大值"><a href="#7-2-数组求最大值" class="headerlink" title="7.2 数组求最大值"></a>7.2 数组求最大值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">66</span>, <span class="number">88</span>, <span class="number">77</span>, <span class="number">55</span>, <span class="number">99</span>, <span class="number">33</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个变量记录最大值</span></span><br><span class="line">    <span class="comment">//我们先用数组的第一个值，保存到max里面去</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">//通过循环，遍历数组的每一个元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="comment">//如果当前的值，比我纸上(max)的值大，我们就把当前的值记录在纸上(max)</span></span><br><span class="line">        <span class="keyword">if</span>( arr[i] &gt; max)&#123;</span><br><span class="line">            max = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(max);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-3-数组求和"><a href="#7-3-数组求和" class="headerlink" title="7.3 数组求和"></a>7.3 数组求和</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        数组求和，和平均值</span></span><br><span class="line"><span class="comment">            求和： 把数组的每一个元素相加</span></span><br><span class="line"><span class="comment">                    1. 循环外定义一个变量名 int sum = 0 ; 接收和</span></span><br><span class="line"><span class="comment">                    2. 把每个符合要求的数据相加 ;  sum += 数值；</span></span><br><span class="line"><span class="comment">            求平均值： 平均值 ：总和 / 总的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line">    <span class="comment">//定义一个变量用来保存和</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//我们需要把5个数据相加，所以 我们需要获取到数组的每一个元素</span></span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        sum += arr[i];  <span class="comment">// sum = sum + arr[0] + arr[1] + arr[2] + arr[3] + arr[4];</span></span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(sum);</span><br><span class="line">    <span class="type">int</span> <span class="variable">avg</span> <span class="operator">=</span> sum / arr.length;</span><br><span class="line">    System.out.println(avg);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-4-键盘录入赋值给数组"><a href="#7-4-键盘录入赋值给数组" class="headerlink" title="7.4 键盘录入赋值给数组"></a>7.4 键盘录入赋值给数组</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        需求：键盘录入5个整数，然后把这些数据保存到数组中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            1. 我们需要创建一个动态数组用来保存元素【因为不知道当前元素的具体值】</span></span><br><span class="line"><span class="comment">            2. 创建键盘录入对象</span></span><br><span class="line"><span class="comment">            3. 需要遍历数组，然后键盘录入数据，保存到数组元素中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//1. 我们需要创建一个动态数组用来保存元素【因为不知道当前元素的具体值】</span></span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">    <span class="comment">// 2. 创建键盘录入对象</span></span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="comment">// 3. 需要遍历数组，然后键盘录入数据，保存到数组元素中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;个元素&quot;</span>);</span><br><span class="line">        <span class="comment">// int number = sc.nextInt();</span></span><br><span class="line">        <span class="comment">// 把number 赋值 给数组的每一个元素</span></span><br><span class="line">        arr[i] = sc.nextInt();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;----------当前数组的元素为:-----------&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.println(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-5-Arrays-工具类"><a href="#7-5-Arrays-工具类" class="headerlink" title="7.5 Arrays 工具类"></a>7.5 Arrays 工具类</h5><blockquote><p>Arrays类，这个是JDK给我们提供的一个可以操作数组的工具类<br>Arrays.sort(数组)  -&gt; 可以把数组的数据进行排序，从小到大排序<br>Arrays.toString(数组) -&gt; 可以把数组的内容拼接成一个字符串</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = &#123;<span class="number">33</span>, <span class="number">22</span>, <span class="number">11</span>, <span class="number">55</span>, <span class="number">44</span>&#125;;</span><br><span class="line">    <span class="comment">//对数组元素进行排序</span></span><br><span class="line">    Arrays.sort(arr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//目前，我们都是通过循环的方式，打印数组的内容。 其实不方便</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        System.out.println(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">    <span class="comment">//我们可以使用  Arrays.toString(数组) -&gt; 可以把数组的内容拼接成一个字符串</span></span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-6-综合练习"><a href="#7-6-综合练习" class="headerlink" title="7.6 综合练习"></a>7.6 综合练习</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        需求，定义可以保存5个元素的整数数组，使用随机数去给数组的元素进行赋值。</span></span><br><span class="line"><span class="comment">        赋值的范围为[10,20],最后，求出数组的最大值 和 最小值</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            1. 创建一个长度为5的整数数组，而且使用 动态初始化</span></span><br><span class="line"><span class="comment">            2. 创建随机数对象</span></span><br><span class="line"><span class="comment">            3. 遍历数组，使用随机数去给数组的元素进行赋值。</span></span><br><span class="line"><span class="comment">                随机数范围是[10,20]，所以 求随机数的公式为  r.nextInt(20 - 10 + 1) + 10;</span></span><br><span class="line"><span class="comment">            4. 定义一个变量 max 记录最大值 , int max = arr[0];</span></span><br><span class="line"><span class="comment">            5. 遍历数组，获取数组的每一个元素跟 max 做比较， 如果当前元素大于max ，把当前元素保存到max中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            6. 定义一个变量 min 记录最小值， int min = arr[0];</span></span><br><span class="line"><span class="comment">            7. 遍历数组，获取数组的每一个元素 跟 min 做比较， 如果当前元素小于 min ,把当前元素保存到min中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//1. 创建一个长度为5的整数数组，而且使用 动态初始化</span></span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">    <span class="comment">//2. 创建随机数对象</span></span><br><span class="line">    <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="comment">//3. 遍历数组，使用随机数去给数组的元素进行赋值。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        arr[i] = r.nextInt(<span class="number">11</span>) + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">    <span class="comment">// 4. 定义一个变量 max 记录最大值 , int max = arr[0];</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="comment">//获取数组的每一个元素跟 max 做比较， 如果当前元素大于max ，把当前元素保存到max中</span></span><br><span class="line">        <span class="keyword">if</span> (arr[i] &gt; max) &#123;</span><br><span class="line">            max = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &lt; min) &#123;</span><br><span class="line">            min = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*    //  6. 定义一个变量 min 记录最小值， int min = arr[0];</span></span><br><span class="line"><span class="comment">        int min = arr[0];</span></span><br><span class="line"><span class="comment">        //遍历数组，获取数组的每一个元素 跟 min 做比较， 如果当前元素小于 min ,把当前元素保存到min中</span></span><br><span class="line"><span class="comment">        for (int i = 1; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="comment">            // 如果当前元素小于 min ,把当前元素保存到min中</span></span><br><span class="line"><span class="comment">            if (arr[i] &lt; min) &#123;</span></span><br><span class="line"><span class="comment">                min = arr[i];</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;最大值为:&quot;</span> + max);</span><br><span class="line">    System.out.println(<span class="string">&quot;最小值为:&quot;</span> + min);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>003-Java基础语法之判断循环语句</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/003-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%88%A4%E6%96%AD%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/003-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E5%88%A4%E6%96%AD%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</id>
    <published>2022-09-03T15:06:56.000Z</published>
    <updated>2022-09-04T06:18:18.947Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、if-语句"><a href="#1、if-语句" class="headerlink" title="1、if 语句"></a>1、if 语句</h3><blockquote><p>作用：用于判断</p></blockquote><h5 id="1-1-if-格式一"><a href="#1-1-if-格式一" class="headerlink" title="1.1 if 格式一"></a>1.1 if 格式一</h5><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式<span class="number">1</span>：</span><br><span class="line"><span class="function"><span class="title">if</span>(布尔表达式)&#123;</span></span><br><span class="line"><span class="function">语句体;</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function">执行流程：   先执行布尔表达式，如果判断结果为<span class="variable"><span class="literal">true</span></span>，则执行语句体</span></span><br><span class="line"><span class="function">如果判断结果为<span class="variable"><span class="literal">false</span></span>，则不执行语句体，程序继续往后面走</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需求：  键盘输入一个年龄，判断有没有大于等于18，如果满足条件，则提示 网吧开黑</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入一个年龄&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断有没有大于等于18</span></span><br><span class="line">    <span class="keyword">if</span>(age &gt;= <span class="number">18</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;网吧开黑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;程序结束&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-if-else-格式二"><a href="#1-2-if-else-格式二" class="headerlink" title="1.2 if else 格式二"></a>1.2 if else 格式二</h5><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式<span class="number">2</span>:</span><br><span class="line"><span class="function"><span class="title">if</span>(布尔表达式)&#123;</span></span><br><span class="line"><span class="function">语句体<span class="number">1</span>;</span></span><br><span class="line"><span class="function">&#125;<span class="variable"><span class="keyword">else</span></span>&#123;</span></span><br><span class="line"><span class="function">语句体<span class="number">2</span>;</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function">执行流程：先执行布尔表达式，如果判断结果为<span class="variable"><span class="literal">true</span></span>，则执行语句体<span class="number">1</span></span></span><br><span class="line"><span class="function">如果判断不成立 就执行语句体<span class="number">2</span>;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需求：键盘录入两个整数，实现比较大小</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入第一个整数&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入第二个整数&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    <span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a的值比较大&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;b的值比较大&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;程序结束&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-3-if-else-if-格式三"><a href="#1-3-if-else-if-格式三" class="headerlink" title="1.3 if else if() 格式三"></a>1.3 if else if() 格式三</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">格式<span class="number">3</span>：</span><br><span class="line"><span class="function"><span class="title">if</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="built_in">if</span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="built_in">if</span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125;  ...</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">执行流程 从上往下执行判断，如果判断为true，则执行对应的语句体，后面的不执行了。</span><br><span class="line">如果所有的判断都不满足，则执行 <span class="keyword">else</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*需求:</span></span><br><span class="line"><span class="comment">            程序从控制台接收一个百分制的分数, 判断这个分数，</span></span><br><span class="line"><span class="comment">            90分—100分：打印：优秀</span></span><br><span class="line"><span class="comment">            70 – 89分，打印：良好</span></span><br><span class="line"><span class="comment">            60 – 69分，打印：及格</span></span><br><span class="line"><span class="comment">            0 – 59分，打印：不及格</span></span><br><span class="line"><span class="comment">             其它情况，打印：输入的分数不正确！</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入一个分数&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    <span class="comment">//ctrl + alt + L</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">70</span> &amp;&amp; score &lt;= <span class="number">89</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span> &amp;&amp; score &lt;= <span class="number">69</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">59</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入的数据有误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、switch语句"><a href="#2、switch语句" class="headerlink" title="2、switch语句"></a>2、switch语句</h3><blockquote><p>作用：用于多种情况的选择</p></blockquote><h5 id="2-1-格式一"><a href="#2-1-格式一" class="headerlink" title="2.1 格式一"></a>2.1 格式一</h5><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>( 值 )&#123; <span class="type">byte</span> <span class="type">short</span> <span class="type">char</span> <span class="type">int</span> 枚举 字符串</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">语句体;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">语句体;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">.....</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">所有的<span class="keyword">case</span>不匹配的时候，才执行的内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需求： 键盘输入一个整数，输出对应的星期数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入一个整数&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    <span class="keyword">switch</span> (week) &#123; <span class="comment">//byte short char int 枚举 String</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;星期天&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的数据有误&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-2格式二：case的穿透"><a href="#2-2格式二：case的穿透" class="headerlink" title="2.2格式二：case的穿透"></a>2.2格式二：case的穿透</h5><blockquote><p>作用：如果是多个case效果是相同的，我们就可以使用case的穿透来优化代码</p></blockquote><blockquote><p>现象：case后面没有break， 那么 就会继续执行下面case的内容。直到遇到break 或者 switch 整体结束，才会结束.</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入一个月份&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    <span class="keyword">switch</span> (month) &#123; <span class="comment">//break就是用来结束switch</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;春季&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;夏季&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;秋季&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;冬季&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的月份有误&quot;</span>);</span><br><span class="line">            <span class="comment">//  break;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、for-循环"><a href="#3、for-循环" class="headerlink" title="3、for 循环"></a>3、for 循环</h3><blockquote><p>作用：重复执行某一段代码，也可以获取一个范围的数据</p></blockquote><h5 id="3-1-格式一"><a href="#3-1-格式一" class="headerlink" title="3.1 格式一"></a>3.1 格式一</h5><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">for</span>(初始化语句 ①; 条件判断语句 ②; 条件控制语句 ③)&#123;</span><br><span class="line">循环体语句【需要重复执行的代码】 ④</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">① -&gt; ② -&gt; ④ -&gt; ③ -&gt; ②  -&gt; ④ -&gt; ③ .... -&gt; ②的判断为<span class="literal">false</span></span><br><span class="line">循环结束</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;----------------循环改进------------------&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= <span class="number">100</span> ; i++)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动手敲，治百病&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-IDEA循环快捷键"><a href="#3-2-IDEA循环快捷键" class="headerlink" title="3.2 IDEA循环快捷键"></a>3.2 IDEA循环快捷键</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//数字.fori ---&gt;快捷键</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;---------------------&quot;</span>);</span><br><span class="line">    <span class="comment">//数字.forr  -&gt; reverse反转快捷键</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">5</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-3-for-循环求和-以及统计"><a href="#3-3-for-循环求和-以及统计" class="headerlink" title="3.3 for 循环求和 以及统计"></a>3.3 for 循环求和 以及统计</h5><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">求和：</span><br><span class="line"><span class="number">1.</span>循环外定义 <span class="built_in">int</span> <span class="keyword">sum</span> = <span class="number">0</span>;</span><br><span class="line"><span class="number">2.</span>循环内部  <span class="keyword">sum</span> += 要求的数据</span><br><span class="line"><span class="number">3.</span>循环外就可以获取到和</span><br><span class="line">统计：</span><br><span class="line"><span class="number">1.</span>循环外定义 <span class="built_in">int</span> <span class="keyword">count</span> = <span class="number">0</span>;</span><br><span class="line"><span class="number">2.</span>循环内部  判断符合条件 则 <span class="keyword">count</span>++;</span><br><span class="line"><span class="number">3.</span>循环外 就可以得到统计的数量</span><br></pre></td></tr></table></figure><h3 id="4、while-循环语句"><a href="#4、while-循环语句" class="headerlink" title="4、while 循环语句"></a>4、while 循环语句</h3><h5 id="4-1-格式一"><a href="#4-1-格式一" class="headerlink" title="4.1 格式一"></a>4.1 格式一</h5><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">初始化语句;  ①</span><br><span class="line"><span class="keyword">while</span>(条件判断语句 ②)&#123;</span><br><span class="line">循环体语句; ③</span><br><span class="line">条件控制语句; ④</span><br><span class="line">&#125;</span><br><span class="line">执行流程：</span><br><span class="line">① -&gt; ② -&gt; ③ -&gt; ④ -&gt; ② -&gt; ③  -&gt; ④ ....-&gt;直到②的判断结果</span><br><span class="line">为<span class="literal">false</span>，循环结束。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;for&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;while&quot;</span>);</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-2-do-…while"><a href="#4-2-do-…while" class="headerlink" title="4.2 do …while"></a>4.2 do …while</h5><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line">初始化语句; ①</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">循环体语句;  ③</span><br><span class="line">条件控制语句; ④</span><br><span class="line">&#125; <span class="keyword">while</span>(条件判断语句); ②</span><br><span class="line"></span><br><span class="line">执行流程：</span><br><span class="line">① -&gt; ③ -&gt; ④ -&gt; ② -&gt; ③  -&gt; ④ .... 直到②的判断为<span class="literal">false</span> ，循环结束</span><br><span class="line">特点：第一次循环不执行判断语句，从第二次开始，才判断</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;for&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;-----------------do...while----------&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;do...while&quot;</span>);</span><br><span class="line">        j++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(j &lt;= <span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、三种循环语句的区别"><a href="#5、三种循环语句的区别" class="headerlink" title="5、三种循环语句的区别"></a>5、三种循环语句的区别</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">目标，弄清楚三循环在执行上的区别</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">while</span> 都是先 判断 后执行</span><br><span class="line"><span class="function"><span class="title">do</span></span>...<span class="keyword">while</span> 先执行 后判断。</span><br><span class="line"></span><br><span class="line">应用场景上的区别：</span><br><span class="line">如果你是明确循环的次数，我们建议使用<span class="keyword">for</span></span><br><span class="line">如果你是不明确循环的次数，我们使用 <span class="keyword">while</span> [<span class="keyword">while</span>(true)&#123;&#125;]</span><br><span class="line"><span class="function"><span class="title">do</span></span>...<span class="keyword">while</span>();    一定要执行一次的时候，</span><br></pre></td></tr></table></figure><h5 id="5-1-死循环"><a href="#5-1-死循环" class="headerlink" title="5.1 死循环"></a>5.1 死循环</h5><blockquote><p><strong>while(true) {}  推荐使用</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">/* for(;;)&#123;</span></span><br><span class="line"><span class="comment">            System.out.println(&quot;for-----&quot;);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;while&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//要有一个已经注册的账号密码</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">username</span> <span class="operator">=</span> <span class="number">123456</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">password</span> <span class="operator">=</span> <span class="number">9527</span>;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="comment">//因为不知道什么时候才输入正确，所以，输入和比较的步骤需要循环，而且使用死循环</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="comment">//键盘输入账号和密码</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入账号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">user</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">pwd</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="comment">//用已经注册的账号密码和输入的账号密码做比较</span></span><br><span class="line">        <span class="keyword">if</span> (username == user &amp;&amp; password == pwd) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;  <span class="comment">//成功之后退出死循环</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;账号或者密码有误，请重新输入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-2-循环之break"><a href="#5-2-循环之break" class="headerlink" title="5.2 循环之break"></a>5.2 循环之break</h5><blockquote><p>break 用在循环中，【基于条件控制】，终止循环体内容的执行，也就是说结束当前的整个循环</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        i++;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        <span class="comment">//需求，我想让i = 10的时候 停止</span></span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-3-循环之continue"><a href="#5-3-循环之continue" class="headerlink" title="5.3 循环之continue"></a>5.3 循环之continue</h5><blockquote><p>continue 用在循环中，基于条件控制，跳过某次循环体内容的执行，继续下一次的执行</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需求：我想跳过1-5所有的奇数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i % <span class="number">2</span> != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//continue; // 如果是奇数的时候我们就continue，跳过</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5-4-循环嵌套"><a href="#5-4-循环嵌套" class="headerlink" title="5.4 循环嵌套"></a>5.4 循环嵌套</h5><blockquote><p>循环嵌套：循环语句里面放循环语句</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        输出 一天24个小时</span></span><br><span class="line"><span class="comment">            外部循环执行一次，内部循环执行一圈</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> <span class="number">0</span>; hour &lt; <span class="number">24</span>; hour++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> <span class="number">0</span>; minute &lt; <span class="number">60</span>; minute++) &#123;</span><br><span class="line">            System.out.println(hour + <span class="string">&quot;时&quot;</span> + minute + <span class="string">&quot;分&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-、随机数Random"><a href="#6-、随机数Random" class="headerlink" title="6 、随机数Random"></a>6 、随机数Random</h3><blockquote><p>Random: 它是JDK给我们提供的一个可以实现生成随机数的类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        Random  它是JDK给我们提供的一个可以实现生成随机数的类</span></span><br><span class="line"><span class="comment">            使用步骤：</span></span><br><span class="line"><span class="comment">                    1.导包  在类上方写上  import java.util.Random;</span></span><br><span class="line"><span class="comment">                    2.创建对象  Random r = new Random();</span></span><br><span class="line"><span class="comment">                    3. 接收随机数   int a = r.nextInt(数字);</span></span><br><span class="line"><span class="comment">                        数字的含义： 1.指定生成随机数的范围[0, 数字-1];或[0,数字)</span></span><br><span class="line"><span class="comment">                                   2.这个范围的数字的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个循环主要是为了 多次生成随机数，让大家看到 生成范围就是[0,9]</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//接收数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>);<span class="comment">//[0,9]  -&gt; 10个</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：范围的选择</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        可以通过随机数，获取任意范围的数字</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                [10,50] -&gt; 数字从10开始，到50 ，包含10和50</span></span><br><span class="line"><span class="comment">                50 - 10 + 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                [最小值, 最大值] -&gt;  int a =  r.nextInt(最大值 - 最小值 + 1 ) + 最小值;</span></span><br><span class="line"><span class="comment">                [66,99] -&gt;  r.nextInt( 34 ) + 66 ; [0,33] + 66  -&gt; [66,99]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="comment">//[10,50] -&gt; 数字从10开始，到50 ，包含10和50</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> r.nextInt(<span class="number">41</span>) + <span class="number">10</span> ; <span class="comment">//[0,40] + 10 -&gt; [10,50]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-1-综合练习"><a href="#6-1-综合练习" class="headerlink" title="6.1 综合练习"></a>6.1 综合练习</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        目标： 求和</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            1. 我们要求和，就需要定义一个变量用来接受和 int sum = 0;</span></span><br><span class="line"><span class="comment">            2. 获取1-100之间的数字，循环可以获取一个范围的数据</span></span><br><span class="line"><span class="comment">            3. 获取的数字需要满足 即是3的倍数 又是5的倍数</span></span><br><span class="line"><span class="comment">            4. 满足要求再求和</span></span><br><span class="line"><span class="comment">            5. 输出结果</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">// 1. 我们要求和，就需要定义一个变量用来接受和 int sum = 0;</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 2. 获取1-100之间的数字，循环可以获取一个范围的数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 3. 获取的数字需要满足 即是3的倍数 又是5的倍数</span></span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; i % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//4. 满足要求再求和</span></span><br><span class="line">            sum += i; <span class="comment">// 用sum本身的值 加上 所有符合条件的i的值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//5. 输出结果</span></span><br><span class="line">    System.out.println(sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>002-Java基础语法之逻辑运算</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/002-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/002-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/</id>
    <published>2022-09-03T15:05:56.000Z</published>
    <updated>2022-09-04T06:18:11.298Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、Scanner-键盘录入"><a href="#1、Scanner-键盘录入" class="headerlink" title="1、Scanner 键盘录入"></a>1、Scanner 键盘录入</h3><p>Scanner 键盘录入三部曲</p><blockquote><p>(1).导包 在类上面写import java.util.Scanner;<br>(2).创建对象Scanner sc &#x3D; new Scanner(System.in);<br>(3).接收数据<br>a.整数 int a &#x3D; sc.nextInt();<br>b.小数 double b &#x3D; sc.nextDouble();<br>c.字符串 String s &#x3D; sc.next();<br>d.没有nextChar()  没有nextString();</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//2.创建键盘录入对象  我们在这一步得到一个扫描仪</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个整数&quot;</span>);</span><br><span class="line">        <span class="comment">//3.获取键盘输入的数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();  <span class="comment">//扫描键盘输入整数</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、算数运算符"><a href="#2、算数运算符" class="headerlink" title="2、算数运算符"></a>2、算数运算符</h3><blockquote><p><strong>算数运算符:+ - * &#x2F; %[取余]</strong></p></blockquote><h5 id="2-1-普通算数运算符"><a href="#2-1-普通算数运算符" class="headerlink" title="2.1 普通算数运算符"></a>2.1 普通算数运算符</h5><p>规律：在Java里面，整数和整数相除，结果就是整数，要想得到小数，必须要有小数参与</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="number">10</span> + <span class="number">4</span>);<span class="comment">//14</span></span><br><span class="line">    System.out.println(<span class="number">10</span> - <span class="number">4</span>);<span class="comment">//6</span></span><br><span class="line">    System.out.println(<span class="number">10</span> * <span class="number">4</span>);<span class="comment">//40</span></span><br><span class="line">    System.out.println(<span class="number">10</span> / <span class="number">4</span>);<span class="comment">//2</span></span><br><span class="line">    System.out.println(<span class="number">10</span> % <span class="number">4</span>);<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line">    System.out.println( <span class="number">10</span> % <span class="number">3</span>); <span class="comment">//1</span></span><br><span class="line">    System.out.println(<span class="number">10</span> % <span class="number">18</span>);<span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="number">10</span> / <span class="number">4.0</span>); <span class="comment">//2.5</span></span><br><span class="line">    System.out.println(<span class="number">10.0</span> / <span class="number">4</span>);<span class="comment">//2.5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-2-类型提升"><a href="#2-2-类型提升" class="headerlink" title="2.2 类型提升"></a>2.2 类型提升</h5><p>表达式类型提升问题：<br>(1) 如果一个表达式中，包含多个数据类型，表达式就会提升【自动类型提升】，提升的结果，就是表达式中最高的数据类型。<br>(2) 整数默认是int类型，所以，低于整数类型的类型[byte short char]，都会在运算的过程中，提升为int。【int[] arr1 &#x3D; {1,2,’a’};】这个也属于类型转换</p><blockquote><p>byte &lt; short &lt; int &lt; long &lt; float &lt; double<br>char &lt; int &lt; long &lt; float &lt; double</p></blockquote><p><strong>Java中，整数默认是int类型，浮点数默认是double类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">13.14</span>;</span><br><span class="line">    <span class="type">double</span> <span class="variable">c</span> <span class="operator">=</span> a + b + <span class="number">10</span> + <span class="number">13.14</span>;  <span class="comment">//计算机其实并不是那么智能，它在执行的时候，只能识别一种类型数据。而且一次性只能计算两个数值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">4</span> ;  <span class="comment">// int / int -&gt; int</span></span><br><span class="line">    <span class="type">double</span> <span class="variable">e</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">4.0</span>; <span class="comment">// int / double -&gt; double</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;-----------------------------&quot;</span>);</span><br><span class="line">    <span class="type">byte</span> <span class="variable">aa</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">byte</span> <span class="variable">bb</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">cc</span> <span class="operator">=</span> aa + bb;</span><br><span class="line"></span><br><span class="line">    <span class="type">short</span> <span class="variable">dd</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">short</span> <span class="variable">ee</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">ff</span> <span class="operator">=</span> dd + ee;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、字符串-（加）操作"><a href="#3、字符串-（加）操作" class="headerlink" title="3、字符串 +（加）操作"></a>3、字符串 +（加）操作</h3><h5 id="3-1-字符的-运算"><a href="#3-1-字符的-运算" class="headerlink" title="3.1 字符的 + 运算"></a>3.1 字符的 + 运算</h5><p>原理： 拿这个字符在计算机底层对应的数值来运算【ASCII表】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">cc</span> <span class="operator">=</span> ch + <span class="number">0</span>; <span class="comment">// int + int -&gt; int</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">            ch + 0 = 97  -&gt; &#x27;a&#x27; =&gt; 97</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(cc); <span class="comment">//97</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&#x27;0&#x27;</span> + <span class="number">0</span>);  <span class="comment">//48</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-字符串的拼接"><a href="#3-2-字符串的拼接" class="headerlink" title="3.2 字符串的拼接"></a>3.2 字符串的拼接</h5><p><strong>规律：串前运算，串后拼接。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;北京&quot;</span> + <span class="string">&quot;欢迎你&quot;</span>); <span class="comment">//&quot;北京欢迎你&quot;</span></span><br><span class="line">    System.out.println(<span class="string">&quot;北京&quot;</span> + <span class="number">666</span>); <span class="comment">//&quot;北京666&quot;</span></span><br><span class="line">    System.out.println(<span class="string">&quot;北京&quot;</span> + <span class="literal">true</span>); <span class="comment">//&quot;北京true&quot;</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;北京&quot;</span> + <span class="number">66</span> + <span class="number">6</span>); <span class="comment">//&quot;北京66&quot; + 6  -&gt; &quot;北京666&quot;</span></span><br><span class="line">    System.out.println(<span class="number">66</span> + <span class="number">6</span> + <span class="string">&quot;北京&quot;</span>);<span class="comment">//72 + &quot;北京&quot; -&gt; &quot;72北京&quot;</span></span><br><span class="line">    System.out.println(<span class="number">66</span> + <span class="number">6</span> + <span class="string">&quot;北京&quot;</span> + <span class="number">66</span> + <span class="number">6</span>);<span class="comment">//72北京666</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;------------------------------&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;a&quot;</span>); <span class="comment">//a</span></span><br><span class="line">    System.out.println(a);<span class="comment">//10</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;a:&quot;</span> + a); <span class="comment">// a:10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、运算符"><a href="#4、运算符" class="headerlink" title="4、运算符"></a>4、运算符</h3><h5 id="4-1-赋值运算符："><a href="#4-1-赋值运算符：" class="headerlink" title="4.1 赋值运算符："></a>4.1 赋值运算符：</h5><blockquote><p>&#x3D;<br>+&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; %&#x3D;</p></blockquote><p>(1) 拓展的赋值运算符执行流程：  用符号左边的变量 和 符号右边的数值进行运算符，再把结果赋值给左边的变量<br>(2) 特点： 拓展的赋值运算符，底层隐含了强制类型转换</p><h5 id="4-2-自增自减"><a href="#4-2-自增自减" class="headerlink" title="4.2 自增自减"></a>4.2 自增自减</h5><blockquote><p>特点：<br>自增：++  变量本身+1 ，单独运算的时候， 放在变量面前和后面 效果一样<br>自减：–  变量本身-1 ，单独运算的时候， 放在变量面前和后面 效果一样</p><p>参与操作：<br>a++ 先用后加<br>++a 先加后用<br>即使是打印字符里面出现a++,++a 都会参与算数运算。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">   <span class="comment">//  a++; // 自增</span></span><br><span class="line">    ++a;</span><br><span class="line">    System.out.println(<span class="string">&quot;a = &quot;</span> + a); <span class="comment">//11</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//--b;</span></span><br><span class="line">    b--;</span><br><span class="line">    System.out.println(<span class="string">&quot;b = &quot;</span> + b); <span class="comment">//9</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>面试题：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a++;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        b = a;  10</span></span><br><span class="line"><span class="comment">        a++; 11</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    System.out.println(<span class="string">&quot;a = &quot;</span> + a);  <span class="comment">// 11</span></span><br><span class="line">    System.out.println(<span class="string">&quot;b = &quot;</span> + b);  <span class="comment">// 10</span></span><br><span class="line">    System.out.println(<span class="string">&quot;------------------------------&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> ++c;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        ++c;   11</span></span><br><span class="line"><span class="comment">        d = c  11</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">&quot;c = &quot;</span> + c);<span class="comment">//11</span></span><br><span class="line">    System.out.println(<span class="string">&quot;d = &quot;</span> + d);<span class="comment">//11</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-3-关系运算符"><a href="#4-3-关系运算符" class="headerlink" title="4.3 关系运算符"></a>4.3 关系运算符</h5><blockquote><p>&#x3D;&#x3D;  !&#x3D;  &gt; &gt;&#x3D;  &lt; &lt;&#x3D;<br>关系运算符的运行结果是布尔类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="number">8</span> == <span class="number">8</span>); <span class="comment">//true</span></span><br><span class="line">    System.out.println(<span class="number">8</span> == <span class="number">7</span>); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//!=</span></span><br><span class="line">    System.out.println(<span class="number">8</span> != <span class="number">8</span>);<span class="comment">//false</span></span><br><span class="line">    System.out.println(<span class="number">8</span> != <span class="number">7</span>);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="number">8</span> &gt; <span class="number">7</span>);<span class="comment">//true</span></span><br><span class="line">    System.out.println(<span class="number">8</span> &lt; <span class="number">7</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="number">8</span> &gt;= <span class="number">7</span>);<span class="comment">//true</span></span><br><span class="line">    System.out.println(<span class="number">8</span> &lt;= <span class="number">7</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-4-逻辑运算符"><a href="#4-4-逻辑运算符" class="headerlink" title="4.4 逻辑运算符"></a>4.4 逻辑运算符</h5><p>逻辑运算符：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">逻辑运算符：</span><br><span class="line">   作用：连接多个关系表达式</span><br><span class="line">   分类：</span><br><span class="line">      &amp;&amp;  多个条件需要同时满足。结论，有<span class="literal">false</span> 则 <span class="literal">false</span>， 短路效应： 如果左边为<span class="literal">false</span> 右边就不执行了</span><br><span class="line">      ||  多个条件只需要满足其中一个。 结论 有<span class="literal">true</span> 则<span class="literal">true</span> ，短路效应： 如果左边为<span class="literal">true</span>，右边就不执行了</span><br><span class="line">      !    取相反的结果</span><br></pre></td></tr></table></figure><p>逻辑运算的短路效应:</p><blockquote><p>&amp;&amp; :  有false 则 false， 如果 符号左边为false，右边就不执行了<br>|| :  有true 则 true，如果 符号的左边为true， 右边就不执行了<br>打印语句里的自增自减也是参与下列运算的</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">    System.out.println(a++ &gt; <span class="number">10</span> &amp;&amp; b++ &gt; <span class="number">10</span>);<span class="comment">//false</span></span><br><span class="line">    <span class="comment">// a = 11</span></span><br><span class="line">    <span class="comment">// b = 20</span></span><br><span class="line">    System.out.println(a++ &gt; <span class="number">10</span> || b++ &gt; <span class="number">10</span>);<span class="comment">//true</span></span><br><span class="line">    System.out.println(!(a &gt; <span class="number">10</span>));<span class="comment">//false</span></span><br><span class="line">    System.out.println(a);<span class="comment">//12</span></span><br><span class="line">    System.out.println(b);<span class="comment">//20</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-5-三元运算符"><a href="#4-5-三元运算符" class="headerlink" title="4.5 三元运算符"></a>4.5 三元运算符</h5><blockquote><p>格式：数据类型 变量名 &#x3D;  关系表达式 ?  表达式1 : 表达式2;<br>执行流程：<br>(1)先执行关系表达式，如果判断结果为true，则返回表达式1的结果。<br>                                          如果判断结果为false，则返回表达式2的结果。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入第一个整数&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;请输入第二个整数&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">    <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> a &gt; b ? a : b;</span><br><span class="line">    System.out.println(max);</span><br><span class="line">    <span class="comment">// System.out.println(a &gt; b ? a : b);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>001-Java基础概念</title>
    <link href="https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/001-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    <id>https://onlyonemomo.github.io/2022/09/03/java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/001-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</id>
    <published>2022-09-03T14:53:56.000Z</published>
    <updated>2022-09-04T06:13:51.078Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！<strong>学习最好的方式就是教授别人 —费曼学习法</strong></p><span id="more"></span><h3 id="1、关键字"><a href="#1、关键字" class="headerlink" title="1、关键字"></a>1、关键字</h3><blockquote><p>关键字：被 java 语言赋予特殊含义的单词</p></blockquote><p><strong>关键字的特点：</strong><br>(1) 全部都是小写的字母<br>(2) 高亮显示</p><blockquote><p>public ：起到一个限制类名需要和文件名一致<br>class：它代表我们后面写的代码是属于类的，类是java 最小的单位<br>static：<br>void：<br>main：jave 识别程序入口</p></blockquote><p><strong>注意</strong>：main 这个是方法名不属于关键字，但是比关键字还要重要，因为java 程序只能识别这个入门。</p><h3 id="2、常量"><a href="#2、常量" class="headerlink" title="2、常量"></a>2、常量</h3><blockquote><p>常量概述：在程序中直接写出来的值，或者在程序中不可以发生改变的值</p></blockquote><h5 id="2-1-常量分类"><a href="#2-1-常量分类" class="headerlink" title="2.1 常量分类"></a>2.1 常量分类</h5><ol><li>字符串常量：即双引号括起来的内容。例如：”Hello World”</li><li>整数常量：包含整数和负数</li><li>小数常量：带有小数点的数字</li><li>字符常量：单引号括起来的单个内容 。例如：’我’ 、’0’ 、’A’；在数组里面[‘A’] 算自动类型转换</li><li>布尔常量：true【正确，成立】 false【错误，不成立】</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//字符串常量 双引号扩起来的内容  &quot;Hello World&quot;    &quot;欢迎来到广州&quot;</span></span><br><span class="line">    System.out.println(<span class="string">&quot;-------字符串常量-------&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;欢迎来到广州&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;aaa123&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;-------整数常量-------&quot;</span>);</span><br><span class="line">    System.out.println(<span class="number">5</span>);</span><br><span class="line">    System.out.println(-<span class="number">10</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;-------小数常量-------&quot;</span>);</span><br><span class="line">    System.out.println(<span class="number">5.0</span>);</span><br><span class="line">    System.out.println(<span class="number">5.21</span>);</span><br><span class="line">    System.out.println(-<span class="number">13.14</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;-------字符常量-------&quot;</span>);</span><br><span class="line">    <span class="comment">// 字符常量    单引号扩起来的单个内容  &#x27;我&#x27;  &#x27;0&#x27;  &#x27;A&#x27;</span></span><br><span class="line">    System.out.println(<span class="string">&#x27;我&#x27;</span>);</span><br><span class="line">    System.out.println(<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    System.out.println(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">  <span class="comment">//  System.out.println(&#x27;10&#x27;); //java: 未结束的字符文字</span></span><br><span class="line">  <span class="comment">//  System.out.println(&#x27;&#x27;); //java: 空字符文字</span></span><br><span class="line">    System.out.println(<span class="string">&#x27; &#x27;</span>);<span class="comment">//可以放入一个空格</span></span><br><span class="line">    System.out.println(<span class="string">&quot;-------布尔常量-------&quot;</span>);</span><br><span class="line">    System.out.println(<span class="literal">true</span>);</span><br><span class="line">    System.out.println(<span class="literal">false</span>);</span><br><span class="line">    System.out.println(<span class="number">8</span> &gt; <span class="number">7</span>); <span class="comment">// true</span></span><br><span class="line">    System.out.println(<span class="number">8</span> &lt; <span class="number">7</span>); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h3><blockquote><p>变量概述：在程序中可以发生改变的值。作用：可以用来保持一个数据</p></blockquote><h5 id="3-1-定义变量名的格式"><a href="#3-1-定义变量名的格式" class="headerlink" title="3.1 定义变量名的格式"></a>3.1 定义变量名的格式</h5><p>数据类型 变量名 &#x3D; 初始值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//例如我们的微信钱包，它的值就是会经常变化，所以，在程序中，我们需要定义一个变量，用来保存数据</span></span><br><span class="line">    <span class="comment">//一开始 我们的微信余额 假设是 0  钱是一个小数</span></span><br><span class="line">    <span class="comment">//小数 在程序中对应的数据类型 是 double  , 数据类型 变量名 = 初始值;</span></span><br><span class="line">    <span class="type">double</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    System.out.println(money);</span><br><span class="line">    <span class="comment">//假设我们抢红包，抢到 9.99 元</span></span><br><span class="line">    money = money + <span class="number">9.99</span>;</span><br><span class="line">    System.out.println(money);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-变量名（标识符）如何定义"><a href="#3-2-变量名（标识符）如何定义" class="headerlink" title="3.2 变量名（标识符）如何定义"></a>3.2 变量名（标识符）如何定义</h5><ol><li>由字母、数字、下划线_ 、美元符号$ 组成</li><li>第一个字符不能是数字</li><li>不能使用java 中的关键字作为标识符</li><li>标识符区分大小写</li><li>采用小驼峰命名法(即除第一个字母不大写外，其余字符首字母大写)</li><li>起名要见明知意（尽量使用英文)</li></ol><blockquote><p><strong>类名要采取大驼峰命名</strong></p></blockquote><h3 id="4、数据类型"><a href="#4、数据类型" class="headerlink" title="4、数据类型"></a>4、数据类型</h3><blockquote><p>数据类型的作用：用来规定保存的数据的类型</p></blockquote><h5 id="4-1-数据类型分类"><a href="#4-1-数据类型分类" class="headerlink" title="4.1 数据类型分类"></a>4.1 数据类型分类</h5><p><strong>(1)整型</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">byte</span>   <span class="number">1</span>字节   -<span class="number">128</span>~<span class="number">127</span></span><br><span class="line"><span class="attribute">short</span>  <span class="number">2</span>字节  -<span class="number">32768</span> ~  <span class="number">32767</span></span><br><span class="line"><span class="attribute">int</span><span class="number">4</span>字节-<span class="number">2147483648</span>  ~  <span class="number">2147483647</span>  <span class="number">21</span>亿左右</span><br><span class="line"><span class="attribute">long</span><span class="number">8</span>字节<span class="number">9223372036854775807</span> ~ -<span class="number">9223372036854775808</span>  <span class="number">19</span>位数</span><br></pre></td></tr></table></figure><p><strong>(2)浮点型</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">float</span><span class="number">4</span>字节- <span class="number">1</span>.<span class="number">4</span>E-<span class="number">45</span>   ~ <span class="number">3</span>.<span class="number">4</span>E38    E38 代表 <span class="number">10</span>的<span class="number">38</span>次方   <span class="number">38</span>位数 </span><br><span class="line"><span class="attribute">double</span><span class="number">8</span>字节- <span class="number">4</span>.<span class="number">9</span>E-<span class="number">324</span>  ~ <span class="number">1</span>.<span class="number">79</span>E308  <span class="number">308</span>位数</span><br></pre></td></tr></table></figure><p><strong>(3) 字符型</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">char</span><span class="number">2</span>字节<span class="number">0</span> ~ <span class="number">65535</span></span><br></pre></td></tr></table></figure><p><strong>(4) 布尔型</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span>ean<span class="number">1</span>字节ture、<span class="literal">false</span></span><br></pre></td></tr></table></figure><p><strong>数据类型的排序</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> &lt; <span class="type">short</span> &lt; <span class="type">int</span> &lt; <span class="type">long</span> &lt; <span class="type">float</span> &lt; <span class="type">double</span></span><br><span class="line"><span class="type">char</span> &lt; <span class="type">int</span> &lt; <span class="type">long</span> &lt; <span class="type">float</span> &lt; <span class="type">double</span></span><br><span class="line"></span><br><span class="line">Java中，整数默认是<span class="type">int</span>类型，浮点数默认是<span class="type">double</span>类型</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;-----------整数----------&quot;</span>);</span><br><span class="line">    <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="type">short</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">1234567890</span>;   <span class="comment">//如果是使用的是整数 默认使用int</span></span><br><span class="line">    <span class="comment">//定义long类型，如果超过了21亿，你需要加上一个L 【可以大写 也可以小写】</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">12345678900L</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;-----------小数----------&quot;</span>);</span><br><span class="line">    <span class="comment">//定义float类型，你需要加上一个F 【可以大写 也可以小写】</span></span><br><span class="line">    <span class="type">float</span> <span class="variable">e</span> <span class="operator">=</span> <span class="number">13.14F</span>;</span><br><span class="line">    <span class="type">double</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">5.2</span>;  <span class="comment">//其实使用小数的时候 默认使用 double</span></span><br><span class="line">    System.out.println(<span class="string">&quot;-----------字符----------&quot;</span>);</span><br><span class="line">    <span class="type">char</span> <span class="variable">g</span> <span class="operator">=</span> <span class="string">&#x27;我&#x27;</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;-----------布尔----------&quot;</span>);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">h</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">i</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;-----------字符串----------&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;欢迎来到广州&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、数据类型转换"><a href="#5、数据类型转换" class="headerlink" title="5、数据类型转换"></a>5、数据类型转换</h3><blockquote><p>导语：计算机在运行的时候，实际上只能识别一种数据类型。所以计算机在做运算的时候，它会对数据做类型的转换。</p></blockquote><h5 id="5-1自动类型转换"><a href="#5-1自动类型转换" class="headerlink" title="5.1自动类型转换"></a>5.1自动类型转换</h5><p><strong>自动类型转换：即把小的数据类型自动转换为大的数据类型</strong></p><blockquote><p><strong>byte &lt; short &lt; char &lt; int &lt; long &lt; float &lt;double</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*因为a是int类型</span></span><br><span class="line"><span class="comment">    b是double类型,</span></span><br><span class="line"><span class="comment">    计算机会把 int 先提升为double</span></span><br><span class="line"><span class="comment">    double + double -&gt; double*/</span></span><br><span class="line">    </span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">13.14</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">c</span> <span class="operator">=</span> a + b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------举例子---------------&quot;</span>);</span><br><span class="line">        <span class="comment">//byte &lt;short &lt; char &lt;int &lt; long &lt; float  &lt; double</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">aa</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">bb</span> <span class="operator">=</span> aa;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">cc</span> <span class="operator">=</span> <span class="number">13</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">dd</span> <span class="operator">=</span> cc;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="5-2-强制类型转换"><a href="#5-2-强制类型转换" class="headerlink" title="5.2 强制类型转换"></a>5.2 强制类型转换</h5><blockquote><p><strong>强制类型转换的格式: 目标数据类型 变量名 &#x3D; (目标数据类型) 值;</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        byte &lt;short &lt; char &lt;int &lt; long &lt; float  &lt; double</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            如果把大的数据，变成小的类型 -&gt; 强制类型转换</span></span><br><span class="line"><span class="comment">            强制类型转换的格式:</span></span><br><span class="line"><span class="comment">                    目标数据类型 变量名 = (目标数据类型) 值;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            因为强制类型转换，会导致精度的丢失。【很少用】</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">13.14</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>)a;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：JAVA基础与加强这个栏目是我之前很想做的，用于系统性总结归纳基础语法和概念。在这个系列里面要是有什么错误，还望大家在留言板指正出来！&lt;strong&gt;学习最好的方式就是教授别人 —费曼学习法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java基础与加强" scheme="https://onlyonemomo.github.io/categories/Java%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%8A%A0%E5%BC%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>转载李笑来《把时间当作朋友》后记</title>
    <link href="https://onlyonemomo.github.io/2022/08/31/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/002-%E8%BD%AC%E8%BD%BD%E6%9D%8E%E7%AC%91%E6%9D%A5%E3%80%8A%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B%E3%80%8B%E5%90%8E%E8%AE%B0/"/>
    <id>https://onlyonemomo.github.io/2022/08/31/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/002-%E8%BD%AC%E8%BD%BD%E6%9D%8E%E7%AC%91%E6%9D%A5%E3%80%8A%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B%E3%80%8B%E5%90%8E%E8%AE%B0/</id>
    <published>2022-08-31T12:29:39.000Z</published>
    <updated>2022-09-04T06:22:21.106Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：在每周转载这个栏目里面，我打算收集一些自己曾经看过的文章，在博客这个平台分享给大家。每周转载这个栏目开设只是偶然性的，我觉得三千世界栏目更新过慢（要追求质量，还得有时间！），所以就萌发了每周转载这个栏目。</p><span id="more"></span><p>我一个退役运动员。</p><p>08 年开始看笑来老师的博客，两年时间里，我从几乎是零基础到 获得雅思 6.5 分，留学申请成功──今年 9 月去爱丁堡大学读研究生。身边的人都特别惊讶，问我这个没上过初中高中的人是怎么学习英语的。几天前，我请笑来老师吃饭，当面感谢他的时候，他也很惊讶，也很高兴。告诉我一定要把我学英语的过程，和我的一些感受写下来，供大家参考。所以就有了这篇文章。</p><p>我十岁进入省队，开始我的职业运动员生涯。别的孩子每天背着书包去上学，我和队友们每天 8 小时，一周 6 天，拿着拍子在球场上练球。6 年之后，因为我 自身的条件还有当时队里的环境，像许多运动员一样，我并没有取得太好的成绩。我选择退役，进入大学学习。我清楚地记得，当我做出这个选择的时候，当时我的 教练泼我冷水：“你以为学习就比训练容易吗，我保证你读一个星期就读不下去了。”</p><p>我当时心里也没底，毕竟这么多年没念书，基础差的不是一星半点，直接上大学能跟得上吗。但是比起继续训练，我更愿意换个环境重新开始，所以我报考了一所体育院校。</p><p>相比起运动队，大学简直是天堂，没有早操，没有教练的控制，当然田径场还是有的，不过再也没有人逼着跑长跑了。众所周知，体育类院校真正在学习的人 少之又少，像清华北大那些因为学习压力大而跳楼的人在我们学校是不存在的。人家学校每年都有 “自杀率”，我们学校每年是 “杀他率” 和 “被杀率”。我一边后 悔自己怎么没上个综合性大学，一边放任自己在这个环境里心安理得地享受着混吃等死的安逸日子。直到后来找工作写简历时，我才发现，本科的时光真的过得比我 的成绩单还要更空虚一些。当时真恨不得把三围也写进去，照片贴张 5 寸的，好让简历能凑够一页。</p><p>大四的时候，我跟很多人一样，把出国留学当成最后的救命稻草。报了新东方托福班，笑来老师当时是教写作。说实话，当时上课完全听不懂。现在想想，当 时想去考托福完全是异想天开。我上大学开始学英语，大学里的英语课只有四学期，大学的英语老师也假定你是有一定语法基础的，对我这种零基础的来说无异于天 书，所以当时考试基本靠小抄，成绩一直在及格线附近徘徊。这种程度，在半年之内想托福考到 90，不管上什么补习班，都是不可能的。结果可想而知，59 分的 托福成绩让最后一点希望也破灭了。我当时觉得自己这辈子肯定完了。没有什么文化知识，基础知识，数学、物理、化学、地理、历史统统没学过；唯一的技能只能 从事教练或者老师的工作，就业面非常窄。我怎么和那些从小上学的孩子在社会上竞争呢。哪个公司会要一个四肢发达、头脑简单的退役运动员呢。我开始埋怨父 母，当初为什么要送我去练球；我埋怨学校，为什么不给我提供一个好的学习环境；我埋怨自己，为什么当初不好好珍惜时间，恶补文化课知识。</p><p>那时候在笑来博客里看到一段话：</p><blockquote><p>缺乏耐心几乎是所有人的本性，也是绝大多数人最终未能矫正的习惯。很多人在生活的方方 面面都因为缺乏耐心而处处吃亏却又从不自知；处处吃亏的结果是越来越急于求成，越来越缺乏耐心——于是一生都只能在这个死循环中左冲右撞而后最终混个死因不详。</p></blockquote><p>这简直是我当时状态的最佳写照。我当时觉得我年龄还不大，还有时间再读个研究生，读完研究生以后就业时选择的面就宽多了，所以我想到了去英国读研。 但是留学考试是凭实力的，而我的外语这么差。所以我觉得我要想留学的话，一定要把外语提高上去，而且这次要吸取教训，不能再急功近利了。因此，我又跟父母 商量，要去留学。父母还是心存疑虑的，毕竟有前车之鉴，所以要求我必须先考过雅思再开始申请学校。我跟他们保证说，这次我一定会考过的，而且我要考 7 分， 上一所好的学校。我想以前这么训练这么累都坚持过来了，只要我有耐心坚持下去，一定能做到的。</p><p>我从剑桥中级英语语法开始，坚持做三遍，一来培养耐心，二来恶补语法。配合记录时间的习惯，每天记录下来我学习英语的时间。08 年七月开始，每天 2 个单元，用时大约 90 分钟。第二遍大约 60 分钟做完两个单元，第三遍的时候速度更快了，平均 30 分钟就能做完，另外用 30 分钟把例句读熟。我要求自己，不管再累在忙，每天一定要完成 2 个单元。 中间当然也有间断的时候，我就跟自己说，这是我最后的机会了，如果我放弃了，我又得重头开始了，我不能再重蹈覆辙了。为了给自己洗脑，我把很多笑来文章中 的句子，抄在本子上，每天早上读几遍。08 年 9 月我在新东方学习新概念二册。09 年 3 月初的时候总算把三遍剑桥中级语法，接着报了新概念三。09 年 5 月的 时候新三学完，我报了 6 月的雅思，想先裸考一次，看看自己现在到底什么水平。这中间的一个月时间，一边复习新三，一边用笑来的如何提高阅读速度那几篇文章里的方法读老托福的文章；用老托福 PART-C 的文章做跟读训练。刚开始的时候觉得这些方法实在是太慢了，太麻烦了，直到考前一共才看了 5 篇阅读，跟读练了 2 篇。6 月的雅思考试成绩并不理想，阅读 5.5，听力 6，口语 6.5,写作 5，总分 5.5。我当时的目标是考 7 分，5.5 离目标差得不 是一星半点。</p><p>我当时仔细回忆我当运动员的时候，我当时是怎么训练的，每项技术是怎么打磨的。我发现其实这些都和学英语有共通之处。每个技术动作的要领并不复杂， 教练教会基本动作之后剩下的就是大量的重复。在无数次的重复中，纠正错误动作，模仿优秀运动员的动作并结合自身的特点，最终形成自己的动作。同样，应用到 学习英语中。我已经掌握了基本的语法、基础的词汇和学习方法，那么剩下就是大量应用、练习了。最重要的是，清楚什么是自己能控制的，什么是不能控制的。比赛的时候，天气、场地、观众、对手还有结果这些都是属于不能控制 的事情，唯一能控制的就是自己。我是不是每一个动作都尽力做好了，我是不是按既定的战术执行了，我在累的时候有没有坚持住，这些是我能够控制的。同理，考 试的题目不是我能控制的，结果更不是我能控制的了，那么我还老想着我要考多少分，时刻关注机经模板除了浪费时间和让自己更焦虑之外没有任何用处。</p><p>想明白之后，就该干嘛干嘛了。</p><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><ul><li>如何迅速提高阅读能力里的方法精读剑 4-7 的每一篇文章。</li><li>新托福 iBT 词汇分类突破 认真背了 3 遍。</li></ul><h3 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h3><ul><li>托福听说训练 练习了 20 多篇。</li><li>抄写基础词表：GSL 和 AWL，恶补拼 写。</li><li>剑 4-7 里的听力部分做了两遍。</li></ul><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><ul><li>TOEFL iBT 高分作文仿写、背诵经典的句子。</li><li>大作文写了不到二十篇，小作文 7 篇。</li><li>慎晓嶷 ‘七天’ 里的小作文每种图表背了个一篇。</li><li>‘如何准备留学考试系列’ 里的有力模式、立场选择等文章打印出来、认真读了 N 遍。</li></ul><h3 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h3><ul><li>第一部分，准备了九十多道真题，一个英语很好的朋友帮我写的。第二部分，准备了十个左右话题。第三部分，背了经典的句型若干。</li><li>对照<a href="http://www.uiowa.edu/~acadtech/phonetics/english/frameset.html">这个网站</a>对着镜子模仿口型和发音。每天半小时，1 个月时间。 其他</li><li>想明白系列，反复看了若干遍。</li></ul><p>考前没有报任何培训班。10 月的雅思成绩是，听力和阅读都考了 7，口语还是 6.5，写作 5.5，总分 6.5。虽然没考到理想的 7 分，但这个成绩也已 经够申请的标准了。我当时很激动，我证明了自己并不比那些从小一直学习的同学差。我的经历告诉我，首先一个人只要有坚定的信念，只要努力不怕苦，没有办不 成的事。有人总是强调别人的是个例，来宽恕自己的不努力。这个过程有多苦吗，有多难吗，我没觉得。可能这也得感谢我从小受的训练吧，忍耐枯燥的训练和服从 教练的指示。</p><p>其次，自信来自于能力，任何能力都是靠自己努力学习来的，是一个非常明显的从无到有的过程。我从英语零基础到考过雅思，自学能力一点点打磨出 来。这个凭能力产生的从无到有的过程，才是提高我自信的动机。在这个世界上除了你的本领和能力是真正属于你的，没有什么是能够与你共生的。这些才是产生自 信的真正动力。</p><p>最后，希望我的经历能够多多少少给那些真正想学好英语的同学一些帮助。</p><p>谢谢笑来老师，如果没有你这么无私的分享这些学习方法和人生感悟，我也不可能在这么短的时间内完成我的目标。</p><p>原文链接：<a href="https://github.com/xiaolai/everyone-can-use-english">https://github.com/xiaolai/everyone-can-use-english</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在每周转载这个栏目里面，我打算收集一些自己曾经看过的文章，在博客这个平台分享给大家。每周转载这个栏目开设只是偶然性的，我觉得三千世界栏目更新过慢（要追求质量，还得有时间！），所以就萌发了每周转载这个栏目。&lt;/p&gt;</summary>
    
    
    
    <category term="每周转载" scheme="https://onlyonemomo.github.io/categories/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/"/>
    
    
    <category term="每周转载" scheme="https://onlyonemomo.github.io/tags/%E6%AF%8F%E5%91%A8%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>模块化之ThreadLocal</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/004-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BThreadLocal/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/004-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8BThreadLocal/</id>
    <published>2022-08-30T14:08:56.000Z</published>
    <updated>2022-09-04T06:23:40.945Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。</p><span id="more"></span><p>ThreadLocal 并不是一个Thread，而是Thread的局部变量。ThreadLocal为每个线程提供单独一份存储空间，具有线程隔离的效果，只有在线程内才能获取到对应的值，线程外则不能访问。客户端发送的每次请求，后端的Tomcat服务器都会分配一个单独的线程来处理请求！</p><h6 id="ThreadLocal常用方法："><a href="#ThreadLocal常用方法：" class="headerlink" title="ThreadLocal常用方法："></a>ThreadLocal常用方法：</h6><table><thead><tr><th>方法</th><th>释义</th></tr></thead><tbody><tr><td>public void set(T value)</td><td>设置当前线程的线程局部变量的值</td></tr><tr><td>public T get()</td><td>返回当前线程所对应的线程局部变量的值</td></tr><tr><td>public void remove()</td><td>移除当前线程的线程局部变量</td></tr></tbody></table><h6 id="提供的BaseContext工具类来操作ThreadLocal"><a href="#提供的BaseContext工具类来操作ThreadLocal" class="headerlink" title="提供的BaseContext工具类来操作ThreadLocal"></a>提供的BaseContext工具类来操作ThreadLocal</h6><p><img src="https://img-blog.csdnimg.cn/e1aaa6121e63468d999a7988b645cf02.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>举例：在员工管理页面，需要记录创建者的ID和修改者ID，这个时候就需要<strong>动态设置创建人和修改人</strong></p><p>图2：JWT拦截器设置当前登录员工的ThreadLocal  ID</p><p><img src="https://img-blog.csdnimg.cn/098469343cd2486385561c985892af81.png#pic_center" alt="在这里插入图片描述"></p><p>图3：在方法上获取当前登录员工的ThreadLocal  ID</p><p><img src="https://img-blog.csdnimg.cn/e08d7bcd3a7b44bca309047129d5864f.png#pic_center" alt="在这里插入图片描述"></p><p>线程本地变量是在JWt拦截器里面的，记得要注册拦截器让它生效。</p><h6 id="BaseContext工具类"><a href="#BaseContext工具类" class="headerlink" title="BaseContext工具类"></a>BaseContext工具类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册拦截器举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfiguration</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenAdminInterceptor jwtTokenAdminInterceptor;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenUserInterceptor jwtTokenUserInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始注册自定义拦截器：&#123;&#125;&quot;</span>, jwtTokenAdminInterceptor);</span><br><span class="line">        registry.addInterceptor(jwtTokenAdminInterceptor)</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/admin/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/admin/employee/login&quot;</span>);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;开始注册自定义拦截器：&#123;&#125;&quot;</span>, jwtTokenUserInterceptor);</span><br><span class="line">        registry.addInterceptor(jwtTokenUserInterceptor)</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/user/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/user/user/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。&lt;/p&gt;</summary>
    
    
    
    <category term="项目模块化" scheme="https://onlyonemomo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="模块化" scheme="https://onlyonemomo.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>模块化之阿里云上传文件</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/007-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/007-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B9%8B%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</id>
    <published>2022-08-30T13:53:56.000Z</published>
    <updated>2022-09-04T06:24:00.072Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。</p><span id="more"></span><h5 id="阿里云工具类"><a href="#阿里云工具类" class="headerlink" title="阿里云工具类"></a>阿里云工具类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件上传</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(<span class="type">byte</span>[] bytes, String objectName)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建PutObject请求。</span></span><br><span class="line">            ossClient.putObject(bucketName, objectName, <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bytes));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OSSException oe) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Caught an OSSException, which means your request made it to OSS, &quot;</span></span><br><span class="line">                    + <span class="string">&quot;but was rejected with an error response for some reason.&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Message:&quot;</span> + oe.getErrorMessage());</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Code:&quot;</span> + oe.getErrorCode());</span><br><span class="line">            System.out.println(<span class="string">&quot;Request ID:&quot;</span> + oe.getRequestId());</span><br><span class="line">            System.out.println(<span class="string">&quot;Host ID:&quot;</span> + oe.getHostId());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException ce) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Caught an ClientException, which means the client encountered &quot;</span></span><br><span class="line">                    + <span class="string">&quot;a serious internal problem while trying to communicate with OSS, &quot;</span></span><br><span class="line">                    + <span class="string">&quot;such as not being able to access the network.&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;Error Message:&quot;</span> + ce.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (ossClient != <span class="literal">null</span>) &#123;</span><br><span class="line">                ossClient.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文件访问路径规则 https://BucketName.Endpoint/ObjectName</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;https://&quot;</span>);</span><br><span class="line">        stringBuilder</span><br><span class="line">                .append(bucketName)</span><br><span class="line">                .append(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">                .append(endpoint)</span><br><span class="line">                .append(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">                .append(objectName);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;文件上传到:&#123;&#125;&quot;</span>, stringBuilder.toString());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="配置类"><a href="#配置类" class="headerlink" title="配置类"></a>配置类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过Spring管理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> aliOSSProperties</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line">    <span class="keyword">public</span> AliOSSUtil <span class="title function_">aliOSSUtil</span><span class="params">(AliOSSProperties aliOSSProperties)</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始创建阿里云OSS工具类...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AliOSSUtil</span>(</span><br><span class="line">                aliOSSProperties.getEndpoint(),</span><br><span class="line">                aliOSSProperties.getAccessKeyId(),</span><br><span class="line">                aliOSSProperties.getAccessKeySecret(),</span><br><span class="line">                aliOSSProperties.getBucketName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="通用方法控制器"><a href="#通用方法控制器" class="headerlink" title="通用方法控制器"></a>通用方法控制器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin/common&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;通用接口&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AliOSSUtil aliOSSUtil;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;文件上传&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;String&gt; <span class="title function_">upload</span><span class="params">(MultipartFile file)</span>&#123;</span><br><span class="line">        log.info(file.getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//原始文件名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">        <span class="type">String</span> <span class="variable">extension</span> <span class="operator">=</span> originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将文件上传到阿里云</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> UUID.randomUUID().toString() + extension;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> aliOSSUtil.upload(file.getBytes(), fileName);</span><br><span class="line">            <span class="keyword">return</span> R.success(filePath);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;文件上传失败:&#123;&#125;&quot;</span>,e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.error(MessageConstant.UPLOAD_FAILED);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：所谓模块化是针对在项目里面出现的各种问题，提供的一个模板操作，跟SOP很相似，用于指导和规范日常的工作流程。对于程序开发者来说，建立项目模块化系统，有助于提高开发效率。&lt;/p&gt;</summary>
    
    
    
    <category term="项目模块化" scheme="https://onlyonemomo.github.io/categories/%E9%A1%B9%E7%9B%AE%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
    
    <category term="模块化" scheme="https://onlyonemomo.github.io/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>BaseContext工具类</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E5%B7%A5%E5%85%B7%E7%B1%BB/BaseContext%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E5%B7%A5%E5%85%B7%E7%B1%BB/BaseContext%E5%B7%A5%E5%85%B7%E7%B1%BB/</id>
    <published>2022-08-30T13:49:51.000Z</published>
    <updated>2022-09-04T06:21:52.991Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：在《娱乐至死》里面两个著名的预言：奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中。在互联网的世界里，我们恰恰走向了赫胥黎式的预言，有时候百度两小时，有效资讯五分钟。在工具类这个栏目，我想收集一些常用的Utils，以免书到用时方恨少的尴尬！</p><span id="more"></span><p>提供的BaseContext工具类来操作ThreadLocal</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeCurrentId</span><span class="params">()</span> &#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：在《娱乐至死》里面两个著名的预言：奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中。在互联网的世界里，我们恰恰走向了赫胥黎式的预言，有时候百度两小时，有效资讯五分钟。在工具类这个栏目，我想收集一些常用的Utils，以免书到用时方恨少的尴尬！&lt;/p&gt;</summary>
    
    
    
    <category term="工具类" scheme="https://onlyonemomo.github.io/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
    
    <category term="Util" scheme="https://onlyonemomo.github.io/tags/Util/"/>
    
  </entry>
  
  <entry>
    <title>《挪威的森林》读后感</title>
    <link href="https://onlyonemomo.github.io/2022/08/30/%E4%B8%89%E5%8D%83%E4%B8%96%E7%95%8C/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>https://onlyonemomo.github.io/2022/08/30/%E4%B8%89%E5%8D%83%E4%B8%96%E7%95%8C/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/</id>
    <published>2022-08-30T13:33:39.000Z</published>
    <updated>2022-09-04T06:24:33.393Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>曾记得高中时期阅读过一次《挪威的森林》，也就顺便翻翻，我也没觉得这本书有什么魅力。时隔五年之后，再重新看这本书，又有了不一样的感觉。</p><span id="more"></span><p>刚看完这本书的时候总有些说不清道不明的感觉，直到我偶然直接看电影解说才猛然想起这种情绪的来源。《挪威的森林》就如同中国武侠电影里的江湖那般，大漠孤烟长河落日，侠骨柔情忠肝义胆。又像美国西部片那样，黄沙漫漫，牛仔悍匪，惩恶扬善。挪威的森林就是一个时代的符号。</p><p>村上春树用独特的手法送别了一个名为’青春’的时代。这是一本自我成长的书籍，当你读完这本书合上去的时候，仿佛背面显示出’青春奇妙物语全剧终’的画面感。看懂了这本书，青春也就结束了！</p><p>这本书具有划时代意义，能与中国武侠的江湖，和美国西部片的世界相提并论。青春的话题永不过时，这才是这么多人追来看原因!</p><p>摘录：</p><p><strong>名场面1：渡边的甜言蜜语</strong></p><blockquote><p>“最最喜欢你，绿子。”</p><p>“什么程度？”</p><p>“像喜欢春天的熊一样。”</p><p>“春天的熊？”绿子再次扬起脸，“什么春天的熊？”</p><p>“春天的原野里，你一个人正走着，对面走来一只可爱的小熊，浑身的毛活像天鹅绒，眼睛圆鼓鼓的。</p><p>它对你说道：’你好，小姐，和我一块儿打滚玩好吗？’接着，你就和小熊抱在一起，顺着长满三叶草的山坡‘咕噜咕噜’滚下去，玩了整整一天。你说棒不棒？”</p><p>“太棒了。”</p><p>“我就这么喜欢你。”</p></blockquote><p><strong>名场面2：绿子不可理喻的爱</strong></p><blockquote><p>绿子说：<br>“我所追求的，只是容忍我任性，百分之百的任性。比方说，我现在对你说想吃酥饼，你就什么都不顾得跑去买，气喘吁吁得跑回来递给我，说‘给，绿子，这就是酥饼。’可我却说：‘我又懒得吃这玩意儿了！’说着‘呼’地一声从窗口扔出。这就是我所追求的。”</p><p>“这和爱似乎不大相合啊！” 他不无愕然地说。<br>“相干！你不知道罢了，”绿子说，“对女孩子来说，这东西有时非常非常珍贵。”<br>“就是把酥饼扔出窗口？”<br>“是啊。我希望对方这样说：‘明白了，绿子。怪我不好，我本该估计到你又不想吃酥饼才是。我简直像驴粪蛋儿一样愚蠢透顶，为了表示歉意，让我再去给你买点别什么。什么好？巧克力饼干，还是奶酪饼？”<br>“然后怎样呢？”<br>“那我就好好爱他，报答他。”</p></blockquote><p><strong>巴黎评论对村上春树采访</strong>：</p><blockquote><p>《巴黎评论》：我总是更同情有幽默感的女孩。我想读者更容易接受充满幽默的恋情，想要让他们被严肃的爱情描写所打动则是一件难事。在《挪威的森林》里我从头到尾一直喜欢绿子这个角色。</p><p>村上：我想大多数读者应该和你的感受相同，他们也都会选择绿子，当然小说的主人公最后也选择了绿子。然而，他有一部分自我一直处于另外一个世界，他无法抛弃那个世界，那是他的一部分、一个重要的部分。世上所有人的头脑中都有病态的部分，这块地方是人的组成部分之一。我们有理智的一半，也有疯狂的一半，我们在这两部分之间进行协调——我坚信这点。当我写作的时候我可以特别清晰地感觉到我意识中那个疯狂的部分——“疯狂”并不是最恰当的字眼，应该说“不平常的”、“不真实的”。当然，我最终必须回到真实的世界中来，重新恢复健全的意志。可是如果我没有疯狂、病态的那部分，我就不会是今天的我。换句话说，我的小说的主人公是有两个女人作为后盾的，对他来说，这两个缺一不可。《挪威的森林》是个典型的例子。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;曾记得高中时期阅读过一次《挪威的森林》，也就顺便翻翻，我也没觉得这本书有什么魅力。时隔五年之后，再重新看这本书，又有了不一样的感觉。&lt;/p&gt;</summary>
    
    
    
    <category term="三千世界" scheme="https://onlyonemomo.github.io/categories/%E4%B8%89%E5%8D%83%E4%B8%96%E7%95%8C/"/>
    
    
    <category term="读书心得" scheme="https://onlyonemomo.github.io/tags/%E8%AF%BB%E4%B9%A6%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之总结</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/009-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E6%80%BB%E7%BB%93/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/009-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-29T12:44:51.000Z</published>
    <updated>2022-09-04T06:21:43.259Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><span id="more"></span><h5 id="1、能够使用SQL语句添加主键、外键、唯一、非空约束"><a href="#1、能够使用SQL语句添加主键、外键、唯一、非空约束" class="headerlink" title="1、能够使用SQL语句添加主键、外键、唯一、非空约束"></a>1、能够使用SQL语句添加主键、外键、唯一、非空约束</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主键约束: <span class="keyword">PRIMARY</span> KEY</span><br><span class="line">唯一约束: <span class="keyword">UNIQUE</span></span><br><span class="line">非空约束: <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">默认值约束: <span class="keyword">DEFAULT</span> 值</span><br><span class="line">外键约束: <span class="keyword">CONSTRAINT</span> 外键约束名 <span class="keyword">FOREIGN</span> KEY (外键字段名) <span class="keyword">REFERENCES</span> 主表(主键)</span><br></pre></td></tr></table></figure><h5 id="2、能够说出多表之间的三种关系"><a href="#2、能够说出多表之间的三种关系" class="headerlink" title="2、能够说出多表之间的三种关系"></a>2、能够说出多表之间的三种关系</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一对多</span><br><span class="line">多对多</span><br><span class="line">一对一</span><br></pre></td></tr></table></figure><h5 id="3、能够使用内连接进行多表查询"><a href="#3、能够使用内连接进行多表查询" class="headerlink" title="3、能够使用内连接进行多表查询"></a>3、能够使用内连接进行多表查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显示内连接:</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">INNER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表连接条件;</span><br></pre></td></tr></table></figure><h5 id="4、能够使用左外连接和右外连接进行多表查询"><a href="#4、能够使用左外连接和右外连接进行多表查询" class="headerlink" title="4、能够使用左外连接和右外连接进行多表查询"></a>4、能够使用左外连接和右外连接进行多表查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">左外连接: 左表不满足的也显示,<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表连接条件;</span><br><span class="line">右外连接: 右表不满足的也显示,<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 表连接条件;</span><br></pre></td></tr></table></figure><h5 id="5、能够使用子查询"><a href="#5、能够使用子查询" class="headerlink" title="5、能够使用子查询"></a>5、能够使用子查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一条查询语句的结果作为另一个条查询语句的一部分</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 条件<span class="operator">=</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(字段名) <span class="keyword">FROM</span> 表名);</span><br></pre></td></tr></table></figure><h5 id="6、能够理解多表查询的规律"><a href="#6、能够理解多表查询的规律" class="headerlink" title="6、能够理解多表查询的规律"></a>6、能够理解多表查询的规律</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.根据需求明确查询哪些表</span><br><span class="line">2.明确表连接条件,去掉笛卡尔积</span><br><span class="line">3.后续的查询</span><br></pre></td></tr></table></figure><h5 id="7、能够理解事务的概念"><a href="#7、能够理解事务的概念" class="headerlink" title="7、能够理解事务的概念"></a>7、能够理解事务的概念</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据库事务是一种机制, 事务中包含多条<span class="keyword">SQL</span>语句, 事务中的多条<span class="keyword">SQL</span>语句要么全部成功,要么全部失败<span class="operator">!</span></span><br></pre></td></tr></table></figure><p>8、能够在MySQL中使用事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开启事务: <span class="keyword">BEGIN</span>; 或 <span class="keyword">START</span> TRANSACTION;</span><br><span class="line">提交事务: <span class="keyword">COMMIT</span>;</span><br><span class="line">回滚事务: <span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之事务</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/008-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E4%BA%8B%E5%8A%A1/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/008-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E4%BA%8B%E5%8A%A1/</id>
    <published>2022-08-29T12:43:51.000Z</published>
    <updated>2022-09-04T06:21:37.738Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><span id="more"></span><h5 id="1、需求"><a href="#1、需求" class="headerlink" title="1、需求"></a>1、需求<img src="https://img-blog.csdnimg.cn/538fbb006e304506a4077e0fe3e05d40.png#pic_center" alt="在这里插入图片描述"></h5><h5 id="2、环境搭建"><a href="#2、环境搭建" class="headerlink" title="2、环境搭建"></a>2、环境搭建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建账户表,包含 id, name, balance</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> account (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">balance <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> account <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="keyword">NULL</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="number">1000</span>),</span><br><span class="line">(<span class="keyword">NULL</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h5 id="默认自动开启事务"><a href="#默认自动开启事务" class="headerlink" title="默认自动开启事务"></a>默认自动开启事务</h5><p>在DOS 命令下输入 <code>select @@autocommit;</code>  查看是否开启自动提交事务<br>一般是默认提交<br><img src="https://img-blog.csdnimg.cn/09211cebbf1e494d9a518367056027b5.png#pic_center" alt="在这里插入图片描述"></p><p><strong>手动提交SQL语句</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">-</span> <span class="number">500</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> balance <span class="operator">=</span> balance <span class="operator">+</span> <span class="number">500</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/3fdd3dfbe2ab49648039ce1164bae8b6.png#pic_center" alt="在这里插入图片描述"></p><h5 id="设置不开启事务"><a href="#设置不开启事务" class="headerlink" title="设置不开启事务"></a><strong>设置不开启事务</strong></h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1bf78b91435f45b8bbbcf9f42af5a9c2.png#pic_center" alt="在这里插入图片描述"></p><p>再来执行上面的修改语句,发现毫无反应<br><img src="https://img-blog.csdnimg.cn/561a529805f74f57a1cee0abbc31ffd9.png#pic_center" alt="在这里插入图片描述"></p><p>在继续执行<code>commit;</code>命令之后，才修改数据成功<br><img src="https://img-blog.csdnimg.cn/94d77b78c3a1439395afcf54ddf8ad0b.png#pic_center" alt="在这里插入图片描述"></p><p><strong>温馨提示：</strong>回滚用<code>rollback;</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之多表查询</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/007-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/007-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-08-29T12:41:51.000Z</published>
    <updated>2022-09-04T06:21:32.123Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><span id="more"></span><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>创建部门表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_dept (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">  NAME <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_dept (NAME) <span class="keyword">VALUES</span> (<span class="string">&#x27;开发部&#x27;</span>),(<span class="string">&#x27;市场部&#x27;</span>),(<span class="string">&#x27;财务部&#x27;</span>),(<span class="string">&#x27;销售部&#x27;</span>);</span><br></pre></td></tr></table></figure><p>创建员工表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">  NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">  gender <span class="type">CHAR</span>(<span class="number">1</span>),   <span class="comment">-- 性别</span></span><br><span class="line">  salary <span class="keyword">DOUBLE</span>,   <span class="comment">-- 工资</span></span><br><span class="line">  join_date <span class="type">DATE</span>,  <span class="comment">-- 入职日期</span></span><br><span class="line">  dept_id <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;孙悟空&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">7200</span>,<span class="string">&#x27;2013-02-24&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;猪八戒&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">3600</span>,<span class="string">&#x27;2010-12-02&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;唐僧&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;2008-08-08&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;白骨精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">5000</span>,<span class="string">&#x27;2015-10-07&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp(NAME,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">&#x27;蜘蛛精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">4500</span>,<span class="string">&#x27;2011-03-14&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_emp <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>, <span class="string">&#x27;白龙马&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;2020-02-02&#x27;</span>, <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure><h3 id="1、隐式内连接"><a href="#1、隐式内连接" class="headerlink" title="1、隐式内连接"></a>1、隐式内连接</h3><p>– 一次查询多张表<br>– 左表的每条数据和右表的每条数据组合，这种效果称为笛卡尔乘积。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp, tb_dept;</span><br></pre></td></tr></table></figure><p>– 去掉笛卡尔积<br>– 去掉笛卡尔积的条件称为: 表连接条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp, tb_dept <span class="keyword">WHERE</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><p>– 扩展:给表取别名,表取了别名后,只能使用别名啦!<br>– 在加上查询员工名字为孙悟空</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">AS</span> e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">AS</span> d <span class="keyword">ON</span> e.`dept_id`<span class="operator">=</span>d.`id` <span class="keyword">WHERE</span> e.name<span class="operator">=</span><span class="string">&#x27;孙悟空&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="2、显式内连接"><a href="#2、显式内连接" class="headerlink" title="2、显式内连接"></a>2、显式内连接</h3><p>– 显式内连接 INNER JOIN…ON</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><h3 id="3、左外连接查询"><a href="#3、左外连接查询" class="headerlink" title="3、左外连接查询"></a>3、左外连接查询</h3><p>– 左外连接查询 (满足要求的显示,保证左表不满足要求的也显示)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`</span><br></pre></td></tr></table></figure><h3 id="4、右外连接"><a href="#4、右外连接" class="headerlink" title="4、右外连接"></a>4、右外连接</h3><p>– 右外连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><p>– 一般在工作中我们都使用左外, 右外可以转成左外, 我们中国人的书写顺序,从左到右</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_dept <span class="keyword">left</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_emp <span class="keyword">ON</span> tb_emp.`dept_id`<span class="operator">=</span>tb_dept.`id`;</span><br></pre></td></tr></table></figure><h3 id="5、子查询结果"><a href="#5、子查询结果" class="headerlink" title="5、子查询结果"></a>5、子查询结果</h3><h5 id="子查询的结果是单行单列"><a href="#子查询的结果是单行单列" class="headerlink" title="子查询的结果是单行单列"></a>子查询的结果是单行单列</h5><p><strong>查询工资最高的员工是谁？</strong><br>– (1).查询最高工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary) <span class="keyword">FROM</span> tb_emp;</span><br></pre></td></tr></table></figure><p>– (2).通过最高工资查询员工姓名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> salary<span class="operator">=</span>(<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary) <span class="keyword">FROM</span> tb_emp);</span><br></pre></td></tr></table></figure><p><strong>温馨提示：</strong>子查询心得:建议先写好一条SQL,再复制到另一个SQL语句中</p><h5 id="子查询的结果是多行单列"><a href="#子查询的结果是多行单列" class="headerlink" title="子查询的结果是多行单列"></a>子查询的结果是多行单列</h5><p><strong>查询工资大于5000的员工, 来自于哪些部门的名字</strong><br>– (1).查询工资大于5000的员工的部门id</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> salary<span class="operator">&gt;</span><span class="number">5000</span>;</span><br></pre></td></tr></table></figure><p>– (2).根据部门id查询部门名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_dept <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> salary<span class="operator">&gt;</span><span class="number">5000</span>);</span><br></pre></td></tr></table></figure><h5 id="子查询的结果是多行多列"><a href="#子查询的结果是多行多列" class="headerlink" title="子查询的结果是多行多列"></a>子查询的结果是多行多列</h5><p>– 查询出2011年以后入职的员工信息, 包括部门名称<br>– (1).查询出2011年以后入职的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> join_date<span class="operator">&gt;</span><span class="string">&#x27;2011-01-01&#x27;</span>;</span><br></pre></td></tr></table></figure><p>– (2).连接部门表,查询部门信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_emp <span class="keyword">WHERE</span> join_date<span class="operator">&gt;</span><span class="string">&#x27;2011-01-01&#x27;</span>) <span class="keyword">AS</span> e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> tb_dept <span class="keyword">ON</span> e.dept_id<span class="operator">=</span>tb_dept.id;</span><br></pre></td></tr></table></figure><h3 id="6、多表查询"><a href="#6、多表查询" class="headerlink" title="6、多表查询"></a>6、多表查询</h3><h5 id="环境搭建-1"><a href="#环境搭建-1" class="headerlink" title="环境搭建"></a>环境搭建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 部门id</span></span><br><span class="line">  dname <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 部门名称</span></span><br><span class="line">  loc <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 部门位置</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(id,dname,loc) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">10</span>,<span class="string">&#x27;教研部&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),</span><br><span class="line">(<span class="number">20</span>,<span class="string">&#x27;学工部&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>),</span><br><span class="line">(<span class="number">30</span>,<span class="string">&#x27;销售部&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>),</span><br><span class="line">(<span class="number">40</span>,<span class="string">&#x27;财务部&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职务表, 职务名称, 职务描述</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  jname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">  description <span class="type">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个职务</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job (id, jname, description) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;董事长&#x27;</span>, <span class="string">&#x27;管理整个公司, 接单&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;经理&#x27;</span>, <span class="string">&#x27;管理部门员工&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;销售员&#x27;</span>, <span class="string">&#x27;向客人推销产品&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;文员&#x27;</span>, <span class="string">&#x27;使用办公软件&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 员工id</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名</span></span><br><span class="line">  job_id <span class="type">INT</span>, <span class="comment">-- 职务id</span></span><br><span class="line">  mgr <span class="type">INT</span> , <span class="comment">-- 上级领导</span></span><br><span class="line">  joindate <span class="type">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">  salary <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 工资</span></span><br><span class="line">  bonus <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 奖金</span></span><br><span class="line">  dept_id <span class="type">INT</span>, <span class="comment">-- 所在部门编号</span></span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="keyword">FOREIGN</span> KEY (job_id) <span class="keyword">REFERENCES</span> job (id),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="keyword">FOREIGN</span> KEY (dept_id) <span class="keyword">REFERENCES</span> dept (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2000-12-17&#x27;</span>,<span class="string">&#x27;8000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1002</span>,<span class="string">&#x27;卢俊义&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-20&#x27;</span>,<span class="string">&#x27;16000.00&#x27;</span>,<span class="string">&#x27;3000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1003</span>,<span class="string">&#x27;林冲&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-22&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;5000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1004</span>,<span class="string">&#x27;唐僧&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-04-02&#x27;</span>,<span class="string">&#x27;29750.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1005</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-28&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;14000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1006</span>,<span class="string">&#x27;宋江&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-05-01&#x27;</span>,<span class="string">&#x27;28500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1007</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-09-01&#x27;</span>,<span class="string">&#x27;24500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1008</span>,<span class="string">&#x27;猪八戒&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-04-19&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1009</span>,<span class="string">&#x27;罗贯中&#x27;</span>,<span class="number">1</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;2001-11-17&#x27;</span>,<span class="string">&#x27;50000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1010</span>,<span class="string">&#x27;吴用&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-08&#x27;</span>,<span class="string">&#x27;15000.00&#x27;</span>,<span class="string">&#x27;0.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1011</span>,<span class="string">&#x27;沙僧&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-05-23&#x27;</span>,<span class="string">&#x27;11000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1012</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;9500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1013</span>,<span class="string">&#x27;小白龙&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1014</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="number">4</span>,<span class="number">1007</span>,<span class="string">&#x27;2002-01-23&#x27;</span>,<span class="string">&#x27;13000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 工资等级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salarygrade (</span><br><span class="line">  grade <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  losalary <span class="type">INT</span>,</span><br><span class="line">  hisalary <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加5个工资等级</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salarygrade(grade,losalary,hisalary) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="number">7000</span>,<span class="number">12000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">12010</span>,<span class="number">14000</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">14010</span>,<span class="number">20000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">20010</span>,<span class="number">30000</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">30010</span>,<span class="number">99990</span>);</span><br></pre></td></tr></table></figure><h5 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h5><p><strong>查询所有员工信息。显示员工编号, 员工姓名, 工资, 职务名称, 职务描述</strong><br>– 1.根据需求明确查询哪些表: emp, job</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">emp.id <span class="keyword">AS</span> 员工编号, </span><br><span class="line">emp.`ename` <span class="keyword">AS</span> 员工姓名,</span><br><span class="line">emp.`salary` <span class="keyword">AS</span> 工资,</span><br><span class="line">job.`jname` <span class="keyword">AS</span> 职务名称,</span><br><span class="line">job.`description` <span class="keyword">AS</span> 职务描述</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`;</span><br></pre></td></tr></table></figure><h5 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h5><p><strong>查询所有员工信息。显示员工编号, 员工姓名, 工资, 职务名称, 职务描述, 部门名称, 部门位置</strong><br>– 1.根据需求明确查询哪些表: emp, job, dept</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id` <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">emp.`id` 员工编号,</span><br><span class="line">emp.`ename` 员工姓名,</span><br><span class="line">emp.`salary` 工资,</span><br><span class="line">job.`jname` 职务名称,</span><br><span class="line">job.`description` 职务描述,</span><br><span class="line">dept.`dname` 部门名称,</span><br><span class="line">dept.`loc` 部门位置</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id` </span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`;</span><br></pre></td></tr></table></figure><h5 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h5><p><strong>查询经理的信息。显示员工姓名, 工资, 职务名称, 职务描述, 部门名称, 部门位置, 工资等级</strong><br>– 1.根据需求明确查询哪些表: emp, job, dept, salarygrade</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade <span class="keyword">ON</span> emp.`salary` <span class="keyword">BETWEEN</span> salarygrade.`losalary` <span class="keyword">AND</span> salarygrade.`hisalary`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">emp.`ename` 员工姓名,</span><br><span class="line">emp.`salary` 工资,</span><br><span class="line">job.`jname` 职务名称,</span><br><span class="line">job.`description` 职务描述,</span><br><span class="line">dept.`dname` 部门名称,</span><br><span class="line">dept.`loc` 部门位置,</span><br><span class="line">salarygrade.`grade` 工资等级</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.`job_id`<span class="operator">=</span>job.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade <span class="keyword">ON</span> emp.`salary` <span class="keyword">BETWEEN</span> salarygrade.`losalary` <span class="keyword">AND</span> salarygrade.`hisalary`</span><br><span class="line"><span class="keyword">WHERE</span> job.`jname`<span class="operator">=</span><span class="string">&#x27;经理&#x27;</span>;</span><br></pre></td></tr></table></figure><h5 id="练习4"><a href="#练习4" class="headerlink" title="练习4"></a>练习4</h5><p><strong>查询出部门编号、部门名称、部门位置、部门人数</strong><br>– 1.根据需求明确查询哪些表: emp, dept</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">dept.`dname`, </span><br><span class="line"><span class="built_in">COUNT</span>(emp.`id`) </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">dept <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp <span class="keyword">ON</span> emp.`dept_id`<span class="operator">=</span>dept.`id` </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> dept.`dname`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(emp.`id`);</span><br></pre></td></tr></table></figure><h5 id="练习5"><a href="#练习5" class="headerlink" title="练习5"></a>练习5</h5><p><strong>列出所有员工的姓名及其直接上级领导的姓名, 没有上级领导的员工也需要显示,显示自己的名字和领导的名字</strong><br>– 1.根据需求明确查询哪些表: emp pt, emp ld</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp pt <span class="keyword">INNER</span> <span class="keyword">JOIN</span> emp ld;</span><br></pre></td></tr></table></figure><p>– 2.明确表连接条件去掉笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp pt <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp ld <span class="keyword">ON</span> pt.`mgr`<span class="operator">=</span>ld.`id`;</span><br></pre></td></tr></table></figure><p>– 3.后续的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">pt.`ename` 普通员工的名字,</span><br><span class="line">ld.`ename` 领导的名字</span><br><span class="line"><span class="keyword">FROM</span> emp pt <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp ld <span class="keyword">ON</span> pt.`mgr`<span class="operator">=</span>ld.`id`;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之表多对多</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/006-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E8%A1%A8%E5%A4%9A%E5%AF%B9%E5%A4%9A/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/006-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E8%A1%A8%E5%A4%9A%E5%AF%B9%E5%A4%9A/</id>
    <published>2022-08-29T12:39:51.000Z</published>
    <updated>2022-09-04T06:21:26.529Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><span id="more"></span><p>图1：<br><img src="https://img-blog.csdnimg.cn/0b6381036adf454fb8140d5a01dfc06d.png#pic_center" alt="在这里插入图片描述"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">多对多：</span><br><span class="line"><span class="bullet">    *</span> 如：订单 和 商品</span><br><span class="line"><span class="bullet">    *</span> 一个商品对应多个订单，一个订单包含多个商品</span><br><span class="line"></span><br><span class="line">实现方式：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 订单表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">payment <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">payment_type TINYINT,</span><br><span class="line">status TINYINT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 商品表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_goods (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">title <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">price <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 订单商品中间表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order_goods (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">order_id <span class="type">int</span>(<span class="number">5</span>),</span><br><span class="line">goods_id <span class="type">int</span>(<span class="number">5</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_order <span class="keyword">FOREIGN</span> KEY(order_id) <span class="keyword">REFERENCES</span> tb_order(id),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_goods <span class="keyword">FOREIGN</span> KEY(goods_id) <span class="keyword">REFERENCES</span> tb_goods(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL高级之约束</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/005-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E7%BA%A6%E6%9D%9F/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/005-MySQL%E9%AB%98%E7%BA%A7%E4%B9%8B%E7%BA%A6%E6%9D%9F/</id>
    <published>2022-08-29T12:35:51.000Z</published>
    <updated>2022-09-04T06:21:21.173Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><span id="more"></span><h4 id="一、主键约束"><a href="#一、主键约束" class="headerlink" title="一、主键约束"></a>一、主键约束</h4><h5 id="1、创建表时添加主键"><a href="#1、创建表时添加主键" class="headerlink" title="1、创建表时添加主键"></a>1、创建表时添加主键</h5><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建表学生表st1, 包含字段<span class="built_in">(id</span>,<span class="built_in"> name</span>, age)<span class="built_in">将id</span>做为主键</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> st1 (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">age <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;刘德华&#x27;</span>, <span class="number">60</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;郭富城&#x27;</span>, <span class="number">58</span>);</span><br></pre></td></tr></table></figure><h5 id="2、演示主键约束-唯一非空"><a href="#2、演示主键约束-唯一非空" class="headerlink" title="2、演示主键约束: 唯一非空"></a>2、演示主键约束: 唯一非空</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;黎明&#x27;</span>, <span class="number">60</span>); <span class="comment">-- Duplicate entry &#x27;2&#x27; for key &#x27;PRIMARY&#x27;: 主键重复啦</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st1 <span class="keyword">VALUES</span> (<span class="keyword">NULL</span>, <span class="string">&#x27;黎明&#x27;</span>, <span class="number">60</span>); <span class="comment">-- Column &#x27;id&#x27; cannot be null: 主键不能为NULL</span></span><br></pre></td></tr></table></figure><h5 id="3、主键删除和添加（了解）"><a href="#3、主键删除和添加（了解）" class="headerlink" title="3、主键删除和添加（了解）"></a>3、主键删除和添加（了解）</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除主键约束(了解)</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> st1 <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在已有表中添加主键约束(了解)</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> st1 <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(id);</span><br></pre></td></tr></table></figure><h5 id="4、主键自动增长"><a href="#4、主键自动增长" class="headerlink" title="4、主键自动增长"></a>4、主键自动增长</h5><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)创建学生表st2, 包含字段<span class="built_in">(id</span>,<span class="built_in"> name</span>, age)<span class="built_in">将id</span>做为主键并自动增长</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> st2 (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">age <span class="type">INT</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(2)主键默认从1开始自动增长: i</span><span class="literal">++</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;貂蝉&#x27;</span>, <span class="number">28</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;西施&#x27;</span>, <span class="number">18</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;王昭君&#x27;</span>, <span class="number">26</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;杨玉环&#x27;</span>, <span class="number">22</span>);</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(3)</span>修改自动增长的开始值<span class="comment">(面试题)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> st2 AUTO_INCREMENT <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> st2 (NAME, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;西施&#x27;</span>, <span class="number">18</span>);</span><br></pre></td></tr></table></figure><h5 id="5、唯一约束、非空约束、默认值约束"><a href="#5、唯一约束、非空约束、默认值约束" class="headerlink" title="5、唯一约束、非空约束、默认值约束"></a>5、唯一约束、非空约束、默认值约束</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT, <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">ename <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>, <span class="comment">-- 员工姓名，非空并且唯一</span></span><br><span class="line">joindate <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">-- 入职日期，非空</span></span><br><span class="line">salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 工资，非空</span></span><br><span class="line">bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">1000</span> <span class="comment">-- 奖金，如果没有奖金默认为1000</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)演示非空约束<span class="keyword">Column</span> <span class="string">&#x27;ename&#x27;</span> cannot be <span class="keyword">null</span>: ename不能为<span class="keyword">NULL</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">2</span>)演示唯一约束Duplicate entry <span class="string">&#x27;李四&#x27;</span> <span class="keyword">for key</span> <span class="string">&#x27;ename&#x27;</span>: 李四重复了</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary, bonus) <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(3)</span> 演示默认约束</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id, ename, joindate, salary) <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;1999-11-11&#x27;</span>, <span class="number">8800</span>);</span><br></pre></td></tr></table></figure><h4 id="二、外键约束"><a href="#二、外键约束" class="headerlink" title="二、外键约束"></a>二、外键约束</h4><h5 id="6、外键约束1"><a href="#6、外键约束1" class="headerlink" title="6、外键约束1"></a>6、外键约束1</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 准备数据: </span></span><br><span class="line"><span class="comment">-- 创建部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> department (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">dep_name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">dep_location <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建员工表</span></span><br><span class="line"><span class="comment">-- 创建 employee 并添加外键约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">INT</span>,</span><br><span class="line">dep_id <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_abc <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> department(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>添加数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加2个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department (dep_name, dep_location) <span class="keyword">VALUES</span> (<span class="string">&#x27;研发部&#x27;</span>, <span class="string">&#x27;广州&#x27;</span>), (<span class="string">&#x27;销售部&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工,dep_id表示员工所在的部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (NAME, age, dep_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>, <span class="number">21</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;老王&#x27;</span>, <span class="number">20</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;大王&#x27;</span>, <span class="number">22</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;小王&#x27;</span>, <span class="number">18</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><strong>演示：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)添加不正常的数据,报错: Cannot <span class="keyword">add</span> <span class="keyword">or</span> <span class="keyword">update</span> a child <span class="type">row</span>: a <span class="keyword">foreign</span> key <span class="keyword">constraint</span> fails  </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (NAME, age, dep_id) <span class="keyword">VALUES</span> (<span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>, <span class="number">6</span>);</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(2)</span>删除外键约束<span class="comment">(了解)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employee <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY employee_ibfk_1;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在已有表添加外键约束, 外键约束可以省略: CONSTRAINT 外键约束名 (了解)</span></span><br><span class="line"><span class="comment">-- 省略CONSTRAINT外键约束名 数据库会自动设置外键约束的名字,我们要到 `3信息` 中查找</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employee <span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> department(id);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础之总结</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/004-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%80%BB%E7%BB%93/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/004-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-29T12:32:51.000Z</published>
    <updated>2022-09-04T06:21:15.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><span id="more"></span><h3 id="一、能够使用SQL语句操作数据库"><a href="#一、能够使用SQL语句操作数据库" class="headerlink" title="一、能够使用SQL语句操作数据库"></a>一、能够使用SQL语句操作数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看数据库: <span class="keyword">SHOW</span> DATABASES;</span><br><span class="line">创建数据库: <span class="keyword">CREATE</span> DATABASE 数据库名;</span><br><span class="line">删除数据库: <span class="keyword">DROP</span> DATABASE 数据库名;</span><br></pre></td></tr></table></figure><h3 id="二、能够使用SQL语句操作表结构"><a href="#二、能够使用SQL语句操作表结构" class="headerlink" title="二、能够使用SQL语句操作表结构"></a>二、能够使用SQL语句操作表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看表: <span class="keyword">SHOW</span> TABLES;</span><br><span class="line">创建表: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (字段名 字段类型);</span><br><span class="line">删除表: <span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名;</span><br><span class="line">修改表: <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 XXX;</span><br></pre></td></tr></table></figure><h3 id="三、能够使用SQL语句进行数据的添加修改和删除的操作"><a href="#三、能够使用SQL语句进行数据的添加修改和删除的操作" class="headerlink" title="三、能够使用SQL语句进行数据的添加修改和删除的操作"></a>三、能够使用SQL语句进行数据的添加修改和删除的操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">添加数据: <span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 (字段名, 字段名<span class="number">2</span>) <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>);</span><br><span class="line">修改数据: <span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 字段名<span class="operator">=</span>新的值;</span><br><span class="line">删除数据: <span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="四、能够使用SQL语句简单查询数据"><a href="#四、能够使用SQL语句简单查询数据" class="headerlink" title="四、能够使用SQL语句简单查询数据"></a>四、能够使用SQL语句简单查询数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="五、能够对使用SQL对表中数据条件查询操作"><a href="#五、能够对使用SQL对表中数据条件查询操作" class="headerlink" title="五、能够对使用SQL对表中数据条件查询操作"></a>五、能够对使用SQL对表中数据条件查询操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 条件;</span><br></pre></td></tr></table></figure><h3 id="六、能够使用SQL语句进行排序"><a href="#六、能够使用SQL语句进行排序" class="headerlink" title="六、能够使用SQL语句进行排序"></a>六、能够使用SQL语句进行排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 字段名 排序方式;</span><br><span class="line">排序方式:</span><br><span class="line"><span class="keyword">ASC</span>: 升序</span><br><span class="line"><span class="keyword">DESC</span>: 降序</span><br></pre></td></tr></table></figure><h3 id="七、能够使用聚合函数"><a href="#七、能够使用聚合函数" class="headerlink" title="七、能够使用聚合函数"></a>七、能够使用聚合函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">COUNT:统计一列的总数量</span><br><span class="line">SUM:统计一列的总和</span><br><span class="line">MAX:统计一列的最大值</span><br><span class="line">MIN:统计一列的最小值</span><br><span class="line">AVG:统计一列的平均值</span><br></pre></td></tr></table></figure><h3 id="八、能够使用SQL语句进行分组查询"><a href="#八、能够使用SQL语句进行分组查询" class="headerlink" title="八、能够使用SQL语句进行分组查询"></a>八、能够使用SQL语句进行分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段名, 聚合函数 <span class="keyword">FROM</span> 表名 <span class="keyword">GROUP</span> <span class="keyword">BY</span> 字段名;</span><br></pre></td></tr></table></figure><h3 id="九、能够完成基本的分页查询"><a href="#九、能够完成基本的分页查询" class="headerlink" title="九、能够完成基本的分页查询"></a>九、能够完成基本的分页查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名 LIMIT 跳过的数量, 显示的数量</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础之查询数据</title>
    <link href="https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/003-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/"/>
    <id>https://onlyonemomo.github.io/2022/08/29/SQL%E8%AF%AD%E5%8F%A5/003-MySQL%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/</id>
    <published>2022-08-29T12:30:51.000Z</published>
    <updated>2022-09-04T06:21:09.819Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>导语</strong>：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。</p><span id="more"></span><h3 id="一、DQL操作表中记录环境搭建"><a href="#一、DQL操作表中记录环境搭建" class="headerlink" title="一、DQL操作表中记录环境搭建"></a>一、DQL操作表中记录环境搭建</h3><blockquote><p><strong>细节:查询只是查看数据,不会修改表中数据</strong></p></blockquote><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建商品表<span class="comment">(goods2)</span>包含: </span><br><span class="line">商品名称<span class="comment">(name)</span>,</span><br><span class="line">商品价格<span class="comment">(price)</span>,</span><br><span class="line">商品销量<span class="comment">(sales_volume)</span>,</span><br><span class="line">商品生产日期<span class="comment">(produced_date)</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> goods2 (</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">price <span class="keyword">DOUBLE</span>,</span><br><span class="line">sales_valume <span class="type">INT</span>,</span><br><span class="line">produced_date <span class="type">DATE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> goods2 <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;华为P40&#x27;</span>,<span class="number">5999</span>,<span class="number">1000</span>,<span class="string">&#x27;2020-08-20&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小米11&#x27;</span>,<span class="number">4999</span>,<span class="number">5000</span>,<span class="string">&#x27;2020-12-28&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;红米K30&#x27;</span>,<span class="number">2999</span>,<span class="number">22000</span>,<span class="string">&#x27;2020-03-11&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;糯米&#x27;</span>,<span class="number">8.99</span>,<span class="number">200</span>,<span class="string">&#x27;2016-06-08&#x27;</span>,<span class="string">&#x27;食物&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;米糊&#x27;</span>,<span class="number">7.99</span>,<span class="number">30</span>,<span class="string">&#x27;2013-11-22&#x27;</span>,<span class="string">&#x27;食物&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;iPhone 12&#x27;</span>,<span class="number">6799</span>,<span class="number">12000</span>,<span class="string">&#x27;2020-10-28&#x27;</span>,<span class="string">&#x27;手机&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;DELL 7590&#x27;</span>,<span class="number">8799</span>,<span class="number">300</span>,<span class="string">&#x27;2019-06-18&#x27;</span>,<span class="string">&#x27;电脑&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;立白洗衣粉&#x27;</span>,<span class="number">12.9</span>,<span class="number">39000</span>,<span class="string">&#x27;2018-02-13&#x27;</span>,<span class="string">&#x27;日用品&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;立白洗衣粉&#x27;</span>,<span class="number">12.9</span>,<span class="number">39000</span>,<span class="string">&#x27;2018-02-13&#x27;</span>,<span class="string">&#x27;日用品&#x27;</span>),</span><br><span class="line">(<span class="keyword">NULL</span>,<span class="number">88</span>,<span class="number">666</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>),</span><br><span class="line">(<span class="string">&#x27;联想电脑&#x27;</span>,<span class="number">8799</span>,<span class="number">700</span>,<span class="string">&#x27;2017-03-13&#x27;</span>,<span class="string">&#x27;电脑&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;惠普电脑&#x27;</span>,<span class="number">8799</span>,<span class="number">50</span>,<span class="string">&#x27;2008-12-13&#x27;</span>,<span class="string">&#x27;电脑&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="二、简单查询"><a href="#二、简单查询" class="headerlink" title="二、简单查询"></a>二、简单查询</h3><p>1、查询goods2表中的 name 和 price 列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME, price <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>2、查询goods2表中所有字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME, price, sales_volume, produced_date, category <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>3、查询所有字段, 使用*代表所有列, 列就是字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>4、去除重复查询: DISTINCT</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> NAME <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>5、查询goods2表中的 name 和 price 列（取别名）<br>      name列的别名为 商品名称，price列的别名为 价格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME <span class="keyword">AS</span> 姓名, price <span class="keyword">AS</span> 价格 <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>5.1 取别名时AS关键字可以省略</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> NAME 姓名<span class="number">2</span>, price 价格<span class="number">2</span> <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><h3 id="三、条件查询"><a href="#三、条件查询" class="headerlink" title="三、条件查询"></a>三、条件查询</h3><p>6、查询price大于1000的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">1000</span>;</span><br></pre></td></tr></table></figure><p>7、查询sales_volume小于5000的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> sales_volume<span class="operator">&lt;</span><span class="number">5000</span>;</span><br></pre></td></tr></table></figure><p>8、查询price不等于6799的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">!=</span><span class="number">6799</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&lt;&gt;</span><span class="number">6799</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">=</span><span class="number">6799</span>;</span><br></pre></td></tr></table></figure><h3 id="四、逻辑运算符"><a href="#四、逻辑运算符" class="headerlink" title="四、逻辑运算符"></a>四、逻辑运算符</h3><p>9、查询price大于1000且sales_volume小于500的商品(两个条件同时满足)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">1000</span> <span class="keyword">AND</span> sales_volume<span class="operator">&lt;</span><span class="number">500</span>;</span><br></pre></td></tr></table></figure><p>10、查询price大于8000 或 sales_volume小于100的商品(两个条件其中一个满足)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">8000</span> <span class="keyword">OR</span> sales_volume<span class="operator">&lt;</span><span class="number">100</span>;</span><br></pre></td></tr></table></figure><p>11、查询name是华为P40和小米11和米糊的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME<span class="operator">=</span><span class="string">&#x27;华为P40&#x27;</span> <span class="keyword">OR</span> NAME<span class="operator">=</span><span class="string">&#x27;小米11&#x27;</span> <span class="keyword">OR</span> NAME<span class="operator">=</span><span class="string">&#x27;米糊&#x27;</span>;</span><br></pre></td></tr></table></figure><p>12、in: 在…里面,只要是满足()里面的数据都可以<br>         查询name是 华为P40 和 小米11 和 米糊 的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IN</span> (<span class="string">&#x27;华为P40&#x27;</span>, <span class="string">&#x27;小米11&#x27;</span>, <span class="string">&#x27;米糊&#x27;</span>);</span><br></pre></td></tr></table></figure><p>13、扩展:查询name不是华为P40和小米11和米糊的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;华为P40&#x27;</span>, <span class="string">&#x27;小米11&#x27;</span>, <span class="string">&#x27;米糊&#x27;</span>);</span><br></pre></td></tr></table></figure><p>14、范围: BETWEEN 值1 AND 值2 – 表示从值1到值2范围，包头又包尾<br>         查询price大于等于1000，且小于等于5000的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;=</span><span class="number">1000</span> <span class="keyword">AND</span> price<span class="operator">&lt;=</span><span class="number">5000</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price <span class="keyword">BETWEEN</span> <span class="number">1000</span> <span class="keyword">AND</span> <span class="number">5000</span>;</span><br></pre></td></tr></table></figure><blockquote><p>细节: between 值1 and 值2, 小的写前,面大的写后面</p></blockquote><p>15、扩展:查询商品名称是null的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><p>16、扩展:查询商品名称不是null的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h3 id="五、模糊查询like"><a href="#五、模糊查询like" class="headerlink" title="五、模糊查询like"></a>五、模糊查询like</h3><p>17、查询米开头的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;米%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>18、查询商品名称中包含’米’字的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;%米%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>19、扩展:查询名称第二个字为米的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;_米%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>20、扩展:查询名称最后字为米的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">LIKE</span> <span class="string">&#x27;%米&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="六、查询排序"><a href="#六、查询排序" class="headerlink" title="六、查询排序"></a>六、查询排序</h3><p>21、单列排序<br>         查询所有数据,使用price升序排序<br>         order by 默认是升序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> price;</span><br></pre></td></tr></table></figure><p>22、组合排序<br>        查询所有数据,在price降序排序的基础上，如果price相同再以sales_volume降序排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span>, sales_volume <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h3 id="七、聚合函数"><a href="#七、聚合函数" class="headerlink" title="七、聚合函数"></a>七、聚合函数</h3><p>23、聚合函数<br>        SELECT 聚合函数(字段) FROM 表名;<br>        查询商品个数, COUNT统计时会忽略NULL值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(NAME) <span class="keyword">FROM</span> goods2;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(price) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>24、COUNT最好的处理方式, *表示所有列理解为统计行数,最准确</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>25、扩展用法：统计price大于1000的总个数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> price<span class="operator">&gt;</span><span class="number">1000</span>;</span><br></pre></td></tr></table></figure><p>26、查询所有商品总销量<br>         总销量是把所有商品的销量加起来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(sales_volume) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>27、查询销量最低的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(sales_volume) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>28、查询销量最高的商品</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(sales_volume) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>29、查询商品平均价格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(price) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>30、扩展:让小数显示指定的位数(2位)<br>        ROUND(数据, 小数位数)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="built_in">AVG</span>(price), <span class="number">2</span>) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><p>31、细节:如果不是数值类型(整数&#x2F;小数)，那么聚合函数计算结果为0</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> AVG(<span class="type">NAME</span>) <span class="keyword">FROM</span> goods2;</span><br></pre></td></tr></table></figure><h3 id="八、分组查询"><a href="#八、分组查询" class="headerlink" title="八、分组查询"></a>八、分组查询</h3><p>32、按商品类型分组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>33、分组后会返回每组的第一条数据<br>        通常我们只获取分组字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category <span class="keyword">FROM</span> goods2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>34、查询每种类型的商品数量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>35、查询销量大于100的商品,按商品类型分组,统计每组的数量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> sales_volume<span class="operator">&gt;</span><span class="number">100</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br></pre></td></tr></table></figure><p>36、查询销量大于100的商品,按商品类型分组,统计每组的数量,并只显商品类型数量大于2的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> sales_volume<span class="operator">&gt;</span><span class="number">100</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> category <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h3 id="九、分页查询"><a href="#九、分页查询" class="headerlink" title="九、分页查询"></a>九、分页查询</h3><p>37、查询商品表中数据，跳过前面2条，显示3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">2</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>38、假设我们一每页显示3条记录的方式来分页，SQL语句如下：<br>        第一页: 跳过0条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">0</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>39、如果跳过的条数是0,可以省略</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>40、第二页: 跳过3条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">3</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>41、第三页: 跳过6条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">6</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>42、第四页: 跳过9条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">6</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>43、第四页: 跳过9条, 获取3条</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> goods2 LIMIT <span class="number">9</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h3 id="十、小结"><a href="#十、小结" class="headerlink" title="十、小结"></a>十、小结</h3><p>扩展查询的七个关键字顺序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">LIMIT</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 先查询表里面所有的数据并进行过滤。（此时用where关键字过滤的是表里面的数据，把name为null的给过滤掉了）</span></span><br><span class="line"><span class="comment">-- 然后进行分组，并统计每一组有多少条数据。</span></span><br><span class="line"><span class="comment">-- 利用HAVING关键字对查询的结果再次过滤 把个数大于等于2的展示出来。</span></span><br><span class="line"><span class="comment">-- 对having过滤之后的结果按照个数进行排序</span></span><br><span class="line"><span class="comment">-- 最后再跳过第一个，展示两条数据</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> category, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> 个数 <span class="keyword">FROM</span> goods2 <span class="keyword">WHERE</span> NAME <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> category <span class="keyword">HAVING</span> 个数 <span class="operator">&gt;=</span> <span class="number">2</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> 个数 <span class="keyword">ASC</span> LIMIT <span class="number">1</span>,<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>​</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;导语&lt;/strong&gt;：SQL一直是初学者的痛点，尤其是多表查询的时候，往往让人感到手足无措。说起这个就想起了我初为新手程序员的尴尬，同事们经常安慰我多查几遍就好了！现在我整理一个SQL系列文档，希望能帮助初入职场的程序员避免那种尴尬之情，也算给曾经的我一个交代吧。&lt;/p&gt;</summary>
    
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://onlyonemomo.github.io/tags/SQL/"/>
    
  </entry>
  
</feed>
